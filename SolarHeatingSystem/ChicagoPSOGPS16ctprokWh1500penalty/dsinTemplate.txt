#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
 1.5638400000000000E+007   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
 7.8710400000000000E+007   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
 1.0000000000000000E-004   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
 2.0000000000000000E-014   # teps     Bound to check, if 2 equal time instants
 1.0000000000000000E-010   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
 9.9999999999999995E-007   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(5525,55)
UValueWindows
UValueFloor
UValueRoof
UValueWalls
VStorage
ACollector
thicknessInsulation
lifetimeCollector
costCollector
lifetimeStorage
costStorage
energyPrice
costHeaterEnergy
lifetimeInsulation
costInsulation
solarfractionSet
penaltyFactor
QHeater
der(QHeater)
QRadiator
der(QRadiator)
solarfraction
costPenalty
costfunction
simulationPeriod
evaluationStart
QHeaterEval
der(QHeaterEval)
QRadiatorEval
der(QRadiatorEval)
solarfractionEval
m_flow_nominal
exp1.energyDynamics
exp1.massDynamics
exp1.substanceDynamics
exp1.traceDynamics
exp1.p_start
exp1.T_start
exp1.X_start[1]
exp1.mSenFac
exp1.V_start
exp1.p
exp1.port_a.h_outflow
exp1.m
exp1.der(m)
exp1.state_start.p
exp1.state_start.T
exp1.rho_start
exp1.H
exp1.der(H)
pipe1.energyDynamics
pipe1.massDynamics
pipe1.substanceDynamics
pipe1.traceDynamics
pipe1.p_start
pipe1.T_start
pipe1.X_start[1]
pipe1.mSenFac
pipe1.allowFlowReversal
pipe1.port_a.m_flow
pipe1.port_a.p
pipe1.port_a.h_outflow
pipe1.port_b.h_outflow
pipe1.m_flow_nominal
pipe1.m_flow_small
pipe1.show_T
pipe1.dp
pipe1.sta_a.T
pipe1.sta_b.T
pipe1.computeFlowResistance
pipe1.from_dp
pipe1.dp_nominal
pipe1.linearizeFlowResistance
pipe1.deltaM
pipe1.nNodes
pipe1.thicknessIns
pipe1.lambdaIns
pipe1.diameter
pipe1.length
pipe1.ReC
pipe1.useMultipleHeatPorts
pipe1.res.allowFlowReversal
pipe1.res.m_flow_nominal
pipe1.res.m_flow_small
pipe1.res.show_T
pipe1.res.dp
pipe1.res.sta_a.T
pipe1.res.sta_b.T
pipe1.res.from_dp
pipe1.res.dp_nominal
pipe1.res.homotopyInitialization
pipe1.res.linearized
pipe1.res.m_flow_turbulent
pipe1.res.sta_default.p
pipe1.res.sta_default.T
pipe1.res.eta_default
pipe1.res.m_flow_nominal_pos
pipe1.res.dp_nominal_pos
_GlobalScope.pipe1.res.X_default[1]
pipe1.res.use_dh
pipe1.res.dh
pipe1.res.ReC
pipe1.res.deltaM
pipe1.res.k
pipe1.res.computeFlowResistance
pipe1.vol[1].energyDynamics
pipe1.vol[1].massDynamics
pipe1.vol[1].substanceDynamics
pipe1.vol[1].traceDynamics
pipe1.vol[1].p_start
pipe1.vol[1].T_start
pipe1.vol[1].X_start[1]
pipe1.vol[1].mSenFac
pipe1.vol[1].initialize_p
pipe1.vol[1].prescribedHeatFlowRate
pipe1.vol[1].simplify_mWat_flow
pipe1.vol[1].use_C_flow
pipe1.vol[1].m_flow_nominal
pipe1.vol[1].nPorts
pipe1.vol[1].m_flow_small
pipe1.vol[1].allowFlowReversal
pipe1.vol[1].V
pipe1.vol[1].heatPort.T
pipe1.vol[1].heatPort.Q_flow
pipe1.vol[1].m
pipe1.vol[1].rho_start
_GlobalScope.pipe1.vol.X_default[1]
pipe1.vol[1].state_default.p
pipe1.vol[1].state_default.T
pipe1.vol[1].rho_default
pipe1.vol[1].state_start.p
pipe1.vol[1].state_start.T
pipe1.vol[1].useSteadyStateTwoPort
pipe1.vol[2].energyDynamics
pipe1.vol[2].massDynamics
pipe1.vol[2].substanceDynamics
pipe1.vol[2].traceDynamics
pipe1.vol[2].p_start
pipe1.vol[2].T_start
pipe1.vol[2].X_start[1]
pipe1.vol[2].mSenFac
pipe1.vol[2].initialize_p
pipe1.vol[2].prescribedHeatFlowRate
pipe1.vol[2].simplify_mWat_flow
pipe1.vol[2].use_C_flow
pipe1.vol[2].m_flow_nominal
pipe1.vol[2].nPorts
pipe1.vol[2].m_flow_small
pipe1.vol[2].allowFlowReversal
pipe1.vol[2].V
pipe1.vol[2].heatPort.T
pipe1.vol[2].heatPort.Q_flow
pipe1.vol[2].m
pipe1.vol[2].rho_start
pipe1.vol[2].state_default.p
pipe1.vol[2].state_default.T
pipe1.vol[2].rho_default
pipe1.vol[2].state_start.p
pipe1.vol[2].state_start.T
pipe1.vol[2].useSteadyStateTwoPort
pipe1.conPipWal[1].dT
pipe1.conPipWal[1].G
pipe1.conPipWal[2].dT
pipe1.conPipWal[2].G
pipe1.colAllToOne.m
pipe1.heatPort.Q_flow
pipe1.VPipe
_GlobalScope.pipe1.X_default[1]
pipe1.state_default.p
pipe1.state_default.T
pipe1.rho_default
pipe1.mu_default
pipe1.v_nominal
pipe1.roughness
pipe1.dpStraightPipe_nominal
heater.allowFlowReversal
heater.port_a.h_outflow
heater.port_b.p
heater.port_b.h_outflow
heater.m_flow_nominal
heater.m_flow_small
heater.show_T
heater.dp
heater.computeFlowResistance
heater.from_dp
heater.dp_nominal
heater.linearizeFlowResistance
heater.deltaM
heater.Q_flow_maxHeat
heater.Q_flow_maxCool
heater.tau
heater.T_start
heater.energyDynamics
heater.homotopyInitialization
heater.preDro.allowFlowReversal
heater.preDro.port_b.h_outflow
heater.preDro.m_flow_nominal
heater.preDro.m_flow_small
heater.preDro.show_T
heater.preDro.dp
heater.preDro.from_dp
heater.preDro.dp_nominal
heater.preDro.homotopyInitialization
heater.preDro.linearized
heater.preDro.m_flow_turbulent
heater.preDro.sta_default.p
heater.preDro.sta_default.T
heater.preDro.eta_default
heater.preDro.m_flow_nominal_pos
heater.preDro.dp_nominal_pos
_GlobalScope.heater.preDro.X_default[1]
heater.preDro.use_dh
heater.preDro.dh
heater.preDro.ReC
heater.preDro.deltaM
heater.preDro.k
heater.preDro.computeFlowResistance
heater.heaCoo.allowFlowReversal
heater.heaCoo.dp_start
heater.heaCoo.m_flow_start
heater.heaCoo.m_flow_small
heater.heaCoo.show_T
heater.heaCoo.show_V_flow
heater.heaCoo.dp
_GlobalScope.heater.heaCoo.X_default[1]
heater.heaCoo.Q_flow_maxHeat
heater.heaCoo.Q_flow_maxCool
heater.heaCoo.m_flow_nominal
heater.heaCoo.tau
heater.heaCoo.T_start
heater.heaCoo.energyDynamics
heater.heaCoo.cp_default
heater.heaCoo.restrictHeat
heater.heaCoo.restrictCool
heater.heaCoo.deltah
heater.heaCoo.dynamic
heater.heaCoo.m_flow_pos
heater.heaCoo.m_flow_limited
heater.heaCoo.hSet
heater.heaCoo.dhSetAct
heater.heaCoo.k
heater.heaCoo.mNor_flow
radiator.allowFlowReversal
radiator.port_a.h_outflow
radiator.port_b.h_outflow
radiator.m_flow_nominal
radiator.m_flow_small
radiator.show_T
radiator.dp
radiator.sta_a.T
radiator.sta_b.T
radiator.energyDynamics
radiator.massDynamics
radiator.substanceDynamics
radiator.traceDynamics
radiator.p_start
radiator.T_start
radiator.X_start[1]
radiator.mSenFac
radiator.nEle
radiator.fraRad
radiator.Q_flow_nominal
radiator.T_a_nominal
radiator.T_b_nominal
radiator.TAir_nominal
radiator.TRad_nominal
radiator.n
radiator.VWat
radiator.mDry
radiator.homotopyInitialization
radiator.QCon_flow
radiator.QRad_flow
radiator.heatPortCon.T
radiator.heatPortRad.T
radiator.vol[1].energyDynamics
radiator.vol[1].massDynamics
radiator.vol[1].substanceDynamics
radiator.vol[1].traceDynamics
radiator.vol[1].p_start
radiator.vol[1].T_start
radiator.vol[1].X_start[1]
radiator.vol[1].mSenFac
radiator.vol[1].initialize_p
radiator.vol[1].prescribedHeatFlowRate
radiator.vol[1].simplify_mWat_flow
radiator.vol[1].use_C_flow
radiator.vol[1].m_flow_nominal
radiator.vol[1].nPorts
radiator.vol[1].m_flow_small
radiator.vol[1].allowFlowReversal
radiator.vol[1].V
radiator.vol[1].heatPort.T
radiator.vol[1].heatPort.Q_flow
radiator.vol[1].m
radiator.vol[1].rho_start
_GlobalScope.radiator.vol.X_default[1]
radiator.vol[1].state_default.p
radiator.vol[1].state_default.T
radiator.vol[1].rho_default
radiator.vol[1].state_start.p
radiator.vol[1].state_start.T
radiator.vol[1].useSteadyStateTwoPort
radiator.vol[2].energyDynamics
radiator.vol[2].massDynamics
radiator.vol[2].substanceDynamics
radiator.vol[2].traceDynamics
radiator.vol[2].p_start
radiator.vol[2].T_start
radiator.vol[2].X_start[1]
radiator.vol[2].mSenFac
radiator.vol[2].initialize_p
radiator.vol[2].prescribedHeatFlowRate
radiator.vol[2].simplify_mWat_flow
radiator.vol[2].use_C_flow
radiator.vol[2].m_flow_nominal
radiator.vol[2].nPorts
radiator.vol[2].m_flow_small
radiator.vol[2].allowFlowReversal
radiator.vol[2].V
radiator.vol[2].ports[1].h_outflow
radiator.vol[2].heatPort.T
radiator.vol[2].heatPort.Q_flow
radiator.vol[2].m
radiator.vol[2].rho_start
radiator.vol[2].state_default.p
radiator.vol[2].state_default.T
radiator.vol[2].rho_default
radiator.vol[2].state_start.p
radiator.vol[2].state_start.T
radiator.vol[2].useSteadyStateTwoPort
radiator.vol[3].energyDynamics
radiator.vol[3].massDynamics
radiator.vol[3].substanceDynamics
radiator.vol[3].traceDynamics
radiator.vol[3].p_start
radiator.vol[3].T_start
radiator.vol[3].X_start[1]
radiator.vol[3].mSenFac
radiator.vol[3].initialize_p
radiator.vol[3].prescribedHeatFlowRate
radiator.vol[3].simplify_mWat_flow
radiator.vol[3].use_C_flow
radiator.vol[3].m_flow_nominal
radiator.vol[3].nPorts
radiator.vol[3].m_flow_small
radiator.vol[3].allowFlowReversal
radiator.vol[3].V
radiator.vol[3].ports[1].h_outflow
radiator.vol[3].heatPort.T
radiator.vol[3].heatPort.Q_flow
radiator.vol[3].m
radiator.vol[3].rho_start
radiator.vol[3].state_default.p
radiator.vol[3].state_default.T
radiator.vol[3].rho_default
radiator.vol[3].state_start.p
radiator.vol[3].state_start.T
radiator.vol[3].useSteadyStateTwoPort
radiator.vol[4].energyDynamics
radiator.vol[4].massDynamics
radiator.vol[4].substanceDynamics
radiator.vol[4].traceDynamics
radiator.vol[4].p_start
radiator.vol[4].T_start
radiator.vol[4].X_start[1]
radiator.vol[4].mSenFac
radiator.vol[4].initialize_p
radiator.vol[4].prescribedHeatFlowRate
radiator.vol[4].simplify_mWat_flow
radiator.vol[4].use_C_flow
radiator.vol[4].m_flow_nominal
radiator.vol[4].nPorts
radiator.vol[4].m_flow_small
radiator.vol[4].allowFlowReversal
radiator.vol[4].V
radiator.vol[4].ports[1].h_outflow
radiator.vol[4].heatPort.T
radiator.vol[4].heatPort.Q_flow
radiator.vol[4].m
radiator.vol[4].rho_start
radiator.vol[4].state_default.p
radiator.vol[4].state_default.T
radiator.vol[4].rho_default
radiator.vol[4].state_start.p
radiator.vol[4].state_start.T
radiator.vol[4].useSteadyStateTwoPort
radiator.vol[5].energyDynamics
radiator.vol[5].massDynamics
radiator.vol[5].substanceDynamics
radiator.vol[5].traceDynamics
radiator.vol[5].p_start
radiator.vol[5].T_start
radiator.vol[5].X_start[1]
radiator.vol[5].mSenFac
radiator.vol[5].initialize_p
radiator.vol[5].prescribedHeatFlowRate
radiator.vol[5].simplify_mWat_flow
radiator.vol[5].use_C_flow
radiator.vol[5].m_flow_nominal
radiator.vol[5].nPorts
radiator.vol[5].m_flow_small
radiator.vol[5].allowFlowReversal
radiator.vol[5].V
radiator.vol[5].heatPort.T
radiator.vol[5].heatPort.Q_flow
radiator.vol[5].m
radiator.vol[5].rho_start
radiator.vol[5].state_default.p
radiator.vol[5].state_default.T
radiator.vol[5].rho_default
radiator.vol[5].state_start.p
radiator.vol[5].state_start.T
radiator.vol[5].useSteadyStateTwoPort
radiator.cp_nominal
radiator.QEle_flow_nominal[1]
radiator.QEle_flow_nominal[2]
radiator.QEle_flow_nominal[3]
radiator.QEle_flow_nominal[4]
radiator.QEle_flow_nominal[5]
radiator.TWat_nominal[1]
radiator.TWat_nominal[2]
radiator.TWat_nominal[3]
radiator.TWat_nominal[4]
radiator.TWat_nominal[5]
radiator.dTRad_nominal[1]
radiator.dTRad_nominal[2]
radiator.dTRad_nominal[3]
radiator.dTRad_nominal[4]
radiator.dTRad_nominal[5]
radiator.dTCon_nominal[1]
radiator.dTCon_nominal[2]
radiator.dTCon_nominal[3]
radiator.dTCon_nominal[4]
radiator.dTCon_nominal[5]
radiator.UAEle
radiator.k
radiator.preCon[1].T_ref
radiator.preCon[1].alpha
radiator.preCon[1].port.Q_flow
radiator.preCon[2].T_ref
radiator.preCon[2].alpha
radiator.preCon[2].port.Q_flow
radiator.preCon[3].T_ref
radiator.preCon[3].alpha
radiator.preCon[3].port.Q_flow
radiator.preCon[4].T_ref
radiator.preCon[4].alpha
radiator.preCon[4].port.Q_flow
radiator.preCon[5].T_ref
radiator.preCon[5].alpha
radiator.preCon[5].port.Q_flow
radiator.preRad[1].T_ref
radiator.preRad[1].alpha
radiator.preRad[1].port.Q_flow
radiator.preRad[2].T_ref
radiator.preRad[2].alpha
radiator.preRad[2].port.Q_flow
radiator.preRad[3].T_ref
radiator.preRad[3].alpha
radiator.preRad[3].port.Q_flow
radiator.preRad[4].T_ref
radiator.preRad[4].alpha
radiator.preRad[4].port.Q_flow
radiator.preRad[5].T_ref
radiator.preRad[5].alpha
radiator.preRad[5].port.Q_flow
radiator.dTCon[1]
radiator.dTCon[2]
radiator.dTCon[3]
radiator.dTCon[4]
radiator.dTCon[5]
radiator.dTRad[1]
radiator.dTRad[2]
radiator.dTRad[3]
radiator.dTRad[4]
radiator.dTRad[5]
radiator.preSumCon.T_ref
radiator.preSumCon.alpha
radiator.preSumCon.Q_flow
radiator.sumCon.nin
radiator.sumCon.u[1]
radiator.sumCon.u[2]
radiator.sumCon.u[3]
radiator.sumCon.u[4]
radiator.sumCon.u[5]
radiator.sumCon.k[1]
radiator.sumCon.k[2]
radiator.sumCon.k[3]
radiator.sumCon.k[4]
radiator.sumCon.k[5]
radiator.sumRad.nin
radiator.sumRad.u[1]
radiator.sumRad.u[2]
radiator.sumRad.u[3]
radiator.sumRad.u[4]
radiator.sumRad.u[5]
radiator.sumRad.y
radiator.sumRad.k[1]
radiator.sumRad.k[2]
radiator.sumRad.k[3]
radiator.sumRad.k[4]
radiator.sumRad.k[5]
radiator.preSumRad.T_ref
radiator.preSumRad.alpha
pipe2.energyDynamics
pipe2.massDynamics
pipe2.substanceDynamics
pipe2.traceDynamics
pipe2.p_start
pipe2.T_start
pipe2.X_start[1]
pipe2.mSenFac
pipe2.allowFlowReversal
pipe2.port_b.p
pipe2.port_b.h_outflow
pipe2.m_flow_nominal
pipe2.m_flow_small
pipe2.show_T
pipe2.dp
pipe2.sta_a.T
pipe2.sta_b.T
pipe2.computeFlowResistance
pipe2.from_dp
pipe2.dp_nominal
pipe2.linearizeFlowResistance
pipe2.deltaM
pipe2.nNodes
pipe2.thicknessIns
pipe2.lambdaIns
pipe2.diameter
pipe2.length
pipe2.ReC
pipe2.useMultipleHeatPorts
pipe2.res.allowFlowReversal
pipe2.res.m_flow_nominal
pipe2.res.m_flow_small
pipe2.res.show_T
pipe2.res.dp
pipe2.res.sta_a.T
pipe2.res.sta_b.T
pipe2.res.from_dp
pipe2.res.dp_nominal
pipe2.res.homotopyInitialization
pipe2.res.linearized
pipe2.res.m_flow_turbulent
pipe2.res.sta_default.p
pipe2.res.sta_default.T
pipe2.res.eta_default
pipe2.res.m_flow_nominal_pos
pipe2.res.dp_nominal_pos
_GlobalScope.pipe2.res.X_default[1]
pipe2.res.use_dh
pipe2.res.dh
pipe2.res.ReC
pipe2.res.deltaM
pipe2.res.k
pipe2.res.computeFlowResistance
pipe2.vol[1].energyDynamics
pipe2.vol[1].massDynamics
pipe2.vol[1].substanceDynamics
pipe2.vol[1].traceDynamics
pipe2.vol[1].p_start
pipe2.vol[1].T_start
pipe2.vol[1].X_start[1]
pipe2.vol[1].mSenFac
pipe2.vol[1].initialize_p
pipe2.vol[1].prescribedHeatFlowRate
pipe2.vol[1].simplify_mWat_flow
pipe2.vol[1].use_C_flow
pipe2.vol[1].m_flow_nominal
pipe2.vol[1].nPorts
pipe2.vol[1].m_flow_small
pipe2.vol[1].allowFlowReversal
pipe2.vol[1].V
pipe2.vol[1].heatPort.T
pipe2.vol[1].heatPort.Q_flow
pipe2.vol[1].m
pipe2.vol[1].rho_start
_GlobalScope.pipe2.vol.X_default[1]
pipe2.vol[1].state_default.p
pipe2.vol[1].state_default.T
pipe2.vol[1].rho_default
pipe2.vol[1].state_start.p
pipe2.vol[1].state_start.T
pipe2.vol[1].useSteadyStateTwoPort
pipe2.vol[2].energyDynamics
pipe2.vol[2].massDynamics
pipe2.vol[2].substanceDynamics
pipe2.vol[2].traceDynamics
pipe2.vol[2].p_start
pipe2.vol[2].T_start
pipe2.vol[2].X_start[1]
pipe2.vol[2].mSenFac
pipe2.vol[2].initialize_p
pipe2.vol[2].prescribedHeatFlowRate
pipe2.vol[2].simplify_mWat_flow
pipe2.vol[2].use_C_flow
pipe2.vol[2].m_flow_nominal
pipe2.vol[2].nPorts
pipe2.vol[2].m_flow_small
pipe2.vol[2].allowFlowReversal
pipe2.vol[2].V
pipe2.vol[2].heatPort.T
pipe2.vol[2].heatPort.Q_flow
pipe2.vol[2].m
pipe2.vol[2].rho_start
pipe2.vol[2].state_default.p
pipe2.vol[2].state_default.T
pipe2.vol[2].rho_default
pipe2.vol[2].state_start.p
pipe2.vol[2].state_start.T
pipe2.vol[2].useSteadyStateTwoPort
pipe2.conPipWal[1].dT
pipe2.conPipWal[1].G
pipe2.conPipWal[2].dT
pipe2.conPipWal[2].G
pipe2.colAllToOne.m
pipe2.heatPort.Q_flow
pipe2.VPipe
_GlobalScope.pipe2.X_default[1]
pipe2.state_default.p
pipe2.state_default.T
pipe2.rho_default
pipe2.mu_default
pipe2.v_nominal
pipe2.roughness
pipe2.dpStraightPipe_nominal
TSet.k
pipe3.energyDynamics
pipe3.massDynamics
pipe3.substanceDynamics
pipe3.traceDynamics
pipe3.p_start
pipe3.T_start
pipe3.X_start[1]
pipe3.mSenFac
pipe3.allowFlowReversal
pipe3.port_a.p
pipe3.port_a.h_outflow
pipe3.port_b.p
pipe3.port_b.h_outflow
pipe3.m_flow_nominal
pipe3.m_flow_small
pipe3.show_T
pipe3.dp
pipe3.sta_a.T
pipe3.sta_b.T
pipe3.computeFlowResistance
pipe3.from_dp
pipe3.dp_nominal
pipe3.linearizeFlowResistance
pipe3.deltaM
pipe3.nNodes
pipe3.thicknessIns
pipe3.lambdaIns
pipe3.diameter
pipe3.length
pipe3.ReC
pipe3.useMultipleHeatPorts
pipe3.res.allowFlowReversal
pipe3.res.m_flow_nominal
pipe3.res.m_flow_small
pipe3.res.show_T
pipe3.res.dp
pipe3.res.sta_a.T
pipe3.res.sta_b.T
pipe3.res.from_dp
pipe3.res.dp_nominal
pipe3.res.homotopyInitialization
pipe3.res.linearized
pipe3.res.m_flow_turbulent
pipe3.res.sta_default.p
pipe3.res.sta_default.T
pipe3.res.eta_default
pipe3.res.m_flow_nominal_pos
pipe3.res.dp_nominal_pos
_GlobalScope.pipe3.res.X_default[1]
pipe3.res.use_dh
pipe3.res.dh
pipe3.res.ReC
pipe3.res.deltaM
pipe3.res.k
pipe3.res.computeFlowResistance
pipe3.vol[1].energyDynamics
pipe3.vol[1].massDynamics
pipe3.vol[1].substanceDynamics
pipe3.vol[1].traceDynamics
pipe3.vol[1].p_start
pipe3.vol[1].T_start
pipe3.vol[1].X_start[1]
pipe3.vol[1].mSenFac
pipe3.vol[1].initialize_p
pipe3.vol[1].prescribedHeatFlowRate
pipe3.vol[1].simplify_mWat_flow
pipe3.vol[1].use_C_flow
pipe3.vol[1].m_flow_nominal
pipe3.vol[1].nPorts
pipe3.vol[1].m_flow_small
pipe3.vol[1].allowFlowReversal
pipe3.vol[1].V
pipe3.vol[1].heatPort.T
pipe3.vol[1].heatPort.Q_flow
pipe3.vol[1].m
pipe3.vol[1].rho_start
_GlobalScope.pipe3.vol.X_default[1]
pipe3.vol[1].state_default.p
pipe3.vol[1].state_default.T
pipe3.vol[1].rho_default
pipe3.vol[1].state_start.p
pipe3.vol[1].state_start.T
pipe3.vol[1].useSteadyStateTwoPort
pipe3.vol[2].energyDynamics
pipe3.vol[2].massDynamics
pipe3.vol[2].substanceDynamics
pipe3.vol[2].traceDynamics
pipe3.vol[2].p_start
pipe3.vol[2].T_start
pipe3.vol[2].X_start[1]
pipe3.vol[2].mSenFac
pipe3.vol[2].initialize_p
pipe3.vol[2].prescribedHeatFlowRate
pipe3.vol[2].simplify_mWat_flow
pipe3.vol[2].use_C_flow
pipe3.vol[2].m_flow_nominal
pipe3.vol[2].nPorts
pipe3.vol[2].m_flow_small
pipe3.vol[2].allowFlowReversal
pipe3.vol[2].V
pipe3.vol[2].heatPort.T
pipe3.vol[2].heatPort.Q_flow
pipe3.vol[2].m
pipe3.vol[2].rho_start
pipe3.vol[2].state_default.p
pipe3.vol[2].state_default.T
pipe3.vol[2].rho_default
pipe3.vol[2].state_start.p
pipe3.vol[2].state_start.T
pipe3.vol[2].useSteadyStateTwoPort
pipe3.conPipWal[1].dT
pipe3.conPipWal[1].G
pipe3.conPipWal[2].dT
pipe3.conPipWal[2].G
pipe3.colAllToOne.m
pipe3.heatPort.Q_flow
pipe3.VPipe
_GlobalScope.pipe3.X_default[1]
pipe3.state_default.p
pipe3.state_default.T
pipe3.rho_default
pipe3.mu_default
pipe3.v_nominal
pipe3.roughness
pipe3.dpStraightPipe_nominal
datVal.y[1]
datVal.y[2]
datVal.y[3]
datVal.y[4]
datVal.y[5]
datVal.y[6]
datVal.phi[1]
datVal.phi[2]
datVal.phi[3]
datVal.phi[4]
datVal.phi[5]
datVal.phi[6]
valve.allowFlowReversal
valve.m_flow_nominal
valve.m_flow_small
valve.show_T
valve.dp
valve.from_dp
valve.dp_nominal
valve.homotopyInitialization
valve.linearized
valve.m_flow_turbulent
valve.sta_default.p
valve.sta_default.T
valve.eta_default
valve.m_flow_nominal_pos
valve.dp_nominal_pos
_GlobalScope.valve.X_default[1]
valve.CvData
valve.Kv
valve.Cv
valve.Av
valve.deltaM
valve.dpValve_nominal
valve.rhoStd
valve.Kv_SI
valve.filteredOpening
valve.riseTime
valve.init
valve.y_start
valve.y
valve.dpFixed_nominal
valve.l
valve.phi
valve.kFixed
valve.kVal
valve.flowCharacteristics.y[1]
valve.flowCharacteristics.y[2]
valve.flowCharacteristics.y[3]
valve.flowCharacteristics.y[4]
valve.flowCharacteristics.y[5]
valve.flowCharacteristics.y[6]
valve.flowCharacteristics.phi[1]
valve.flowCharacteristics.phi[2]
valve.flowCharacteristics.phi[3]
valve.flowCharacteristics.phi[4]
valve.flowCharacteristics.phi[5]
valve.flowCharacteristics.phi[6]
valve.phiLooUp.n
valve.phiLooUp.tableOnFile
valve.phiLooUp.table[1, 1]
valve.phiLooUp.table[1, 2]
valve.phiLooUp.table[2, 1]
valve.phiLooUp.table[2, 2]
valve.phiLooUp.table[3, 1]
valve.phiLooUp.table[3, 2]
valve.phiLooUp.table[4, 1]
valve.phiLooUp.table[4, 2]
valve.phiLooUp.table[5, 1]
valve.phiLooUp.table[5, 2]
valve.phiLooUp.table[6, 1]
valve.phiLooUp.table[6, 2]
valve.phiLooUp.verboseRead
valve.phiLooUp.columns[1]
valve.phiLooUp.smoothness
valve.phiLooUp.tableID.id
valve.phiLooUp.tableOnFileRead
thermostat.controlError
thermostat.controllerType
thermostat.k
thermostat.Ti
thermostat.Td
thermostat.yMax
thermostat.yMin
thermostat.wp
thermostat.wd
thermostat.Ni
thermostat.Nd
thermostat.initType
thermostat.limitsAtInit
thermostat.xi_start
thermostat.xd_start
thermostat.y_start
thermostat.strict
thermostat.unitTime
thermostat.addP.y
thermostat.addP.k1
thermostat.addP.k2
thermostat.P.k
thermostat.P.y
thermostat.gainPID.k
thermostat.gainPID.u
thermostat.gainPID.y
thermostat.addPID.k1
thermostat.addPID.k2
thermostat.addPID.k3
thermostat.limiter.uMax
thermostat.limiter.uMin
thermostat.limiter.strict
thermostat.limiter.limitsAtInit
thermostat.with_I
thermostat.with_D
thermostat.Dzero.k
thermostat.Izero.k
pump1.energyDynamics
pump1.massDynamics
pump1.substanceDynamics
pump1.traceDynamics
pump1.p_start
pump1.T_start
pump1.X_start[1]
pump1.mSenFac
pump1.allowFlowReversal
pump1.port_a.h_outflow
pump1.port_b.h_outflow
pump1.m_flow_nominal
pump1.m_flow_small
pump1.show_T
pump1.dp
pump1.per.pressure.V_flow[1]
pump1.per.pressure.V_flow[2]
pump1.per.pressure.dp[1]
pump1.per.pressure.dp[2]
pump1.per.use_powerCharacteristic
pump1.per.hydraulicEfficiency.V_flow[1]
pump1.per.hydraulicEfficiency.eta[1]
pump1.per.motorEfficiency.V_flow[1]
pump1.per.motorEfficiency.eta[1]
pump1.per.power.V_flow[1]
pump1.per.power.P[1]
pump1.per.motorCooledByFluid
pump1.per.speed_nominal
pump1.per.constantSpeed
pump1.per.speeds[1]
pump1.per.speed_rpm_nominal
pump1.per.constantSpeed_rpm
pump1.per.speeds_rpm[1]
pump1.per.havePressureCurve
pump1.inputType
pump1.constInput
pump1.stageInputs[1]
pump1.computePowerUsingSimilarityLaws
pump1.addPowerToMedium
pump1.nominalValuesDefineDefaultPressureCurve
pump1.tau
pump1.filteredSpeed
pump1.riseTime
pump1.init
pump1.y_start
pump1.y_actual
pump1.P
pump1.heatPort.T
pump1.heatPort.Q_flow
pump1.VMachine_flow
pump1.dpMachine
pump1.eta
pump1.etaHyd
pump1.etaMot
pump1.preVar
pump1.speedIsInput
pump1.nOri
pump1.haveVMax
pump1.V_flow_max
pump1.rho_default
pump1.sta_start.p
pump1.sta_start.T
pump1.h_outflow_start
pump1.vol.energyDynamics
pump1.vol.massDynamics
pump1.vol.substanceDynamics
pump1.vol.traceDynamics
pump1.vol.p_start
pump1.vol.T_start
pump1.vol.X_start[1]
pump1.vol.mSenFac
pump1.vol.initialize_p
pump1.vol.prescribedHeatFlowRate
pump1.vol.simplify_mWat_flow
pump1.vol.use_C_flow
pump1.vol.m_flow_nominal
pump1.vol.nPorts
pump1.vol.m_flow_small
pump1.vol.allowFlowReversal
pump1.vol.V
pump1.vol.heatPort.Q_flow
pump1.vol.m
pump1.vol.rho_start
_GlobalScope.pump1.vol.X_default[1]
pump1.vol.state_default.p
pump1.vol.state_default.T
pump1.vol.rho_default
pump1.vol.state_start.p
pump1.vol.state_start.T
pump1.vol.useSteadyStateTwoPort
pump1.vol.tau
pump1.vol.V_nominal
pump1.filter.analogFilter
pump1.filter.filterType
pump1.filter.order
pump1.filter.f_cut
pump1.filter.gain
pump1.filter.A_ripple
pump1.filter.f_min
pump1.filter.normalized
pump1.filter.init
pump1.filter.nx
pump1.filter.x_start[1]
pump1.filter.x_start[2]
pump1.filter.y_start
pump1.filter.u_nominal
pump1.filter.x[1]
pump1.filter.der(x[1])
pump1.filter.x[2]
pump1.filter.der(x[2])
pump1.filter.ncr
pump1.filter.nc0
pump1.filter.na
pump1.filter.nr
pump1.filter.cr[1]
pump1.filter.cr[2]
pump1.filter.r[1]
pump1.filter.r[2]
pump1.filter.uu[1]
pump1.preSou.allowFlowReversal
pump1.preSou.dp_start
pump1.preSou.m_flow_start
pump1.preSou.m_flow_small
pump1.preSou.show_T
pump1.preSou.show_V_flow
pump1.preSou.V_flow
_GlobalScope.pump1.preSou.X_default[1]
pump1.preSou.control_m_flow
pump1.preSou.m_flow_internal
pump1.heaDis.homotopyInitialization
pump1.heaDis.motorCooledByFluid
pump1.heaDis.delta_V_flow
pump1.heaDis.Q_flow
pump1.heaDis.WHyd
pump1.heaDis.QThe_flow
pump1.PToMed.k1
pump1.PToMed.k2
pump1.prePow.T_ref
pump1.prePow.alpha
pump1.rho_inlet.y
pump1.senMasFlo.allowFlowReversal
pump1.senMasFlo.m_flow_nominal
pump1.senMasFlo.m_flow_small
_GlobalScope.pump1.senMasFlo.X_default[1]
pump1.senRelPre.port_a.m_flow
pump1.senRelPre.port_a.h_outflow
pump1.senRelPre.port_b.m_flow
pump1.senRelPre.port_b.h_outflow
pump1.senRelPre.p_rel
pump1.eff.per.pressure.V_flow[1]
pump1.eff.per.pressure.V_flow[2]
pump1.eff.per.pressure.dp[1]
pump1.eff.per.pressure.dp[2]
pump1.eff.per.use_powerCharacteristic
pump1.eff.per.hydraulicEfficiency.V_flow[1]
pump1.eff.per.hydraulicEfficiency.eta[1]
pump1.eff.per.motorEfficiency.V_flow[1]
pump1.eff.per.motorEfficiency.eta[1]
pump1.eff.per.power.V_flow[1]
pump1.eff.per.power.P[1]
pump1.eff.per.motorCooledByFluid
pump1.eff.per.speed_nominal
pump1.eff.per.constantSpeed
pump1.eff.per.speeds[1]
pump1.eff.per.speed_rpm_nominal
pump1.eff.per.constantSpeed_rpm
pump1.eff.per.speeds_rpm[1]
pump1.eff.per.havePressureCurve
pump1.eff.preVar
pump1.eff.computePowerUsingSimilarityLaws
pump1.eff.V_flow_nominal
pump1.eff.rho_default
pump1.eff.haveVMax
pump1.eff.V_flow_max
pump1.eff.nOri
pump1.eff.homotopyInitialization
pump1.eff.y_out
pump1.eff.rho
pump1.eff.WFlo
pump1.eff.r_N
pump1.eff.r_V
pump1.eff.preSpe
pump1.eff.prePre
pump1.eff.motDer[1]
pump1.eff.hydDer[1]
pump1.eff.VDelta_flow
pump1.eff.dpDelta
pump1.eff.delta
pump1.eff.cBar[1]
pump1.eff.cBar[2]
pump1.eff.dpMax
pump1.eff.kRes
pump1.eff.curve
pump1.eff.pCur1.n
pump1.eff.pCur1.V_flow[1]
pump1.eff.pCur1.V_flow[2]
pump1.eff.pCur1.dp[1]
pump1.eff.pCur1.dp[2]
pump1.eff.pCur2.n
pump1.eff.pCur2.V_flow[1]
pump1.eff.pCur2.V_flow[2]
pump1.eff.pCur2.V_flow[3]
pump1.eff.pCur2.dp[1]
pump1.eff.pCur2.dp[2]
pump1.eff.pCur2.dp[3]
pump1.eff.pCur3.n
pump1.eff.pCur3.V_flow[1]
pump1.eff.pCur3.V_flow[2]
pump1.eff.pCur3.V_flow[3]
pump1.eff.pCur3.V_flow[4]
pump1.eff.pCur3.dp[1]
pump1.eff.pCur3.dp[2]
pump1.eff.pCur3.dp[3]
pump1.eff.pCur3.dp[4]
pump1.eff.preDer1[1]
pump1.eff.preDer1[2]
pump1.eff.preDer2[1]
pump1.eff.preDer2[2]
pump1.eff.preDer2[3]
pump1.eff.preDer3[1]
pump1.eff.preDer3[2]
pump1.eff.preDer3[3]
pump1.eff.preDer3[4]
pump1.eff.powDer[1]
pump1.eff.haveMinimumDecrease
pump1.eff.haveDPMax
pump1.dp_start
pump1.dp_nominal
pump1.constantHead
pump1.heads[1]
pump1.gain.k
dpSet.k
TAirSet.k
TAmb.T
TAmb.port.Q_flow
storage.height
storage.V
storage.nEle
storage.alpha_out
storage.alpha_in
storage.lambda_ins
storage.thickness_ins
storage.thickness_wall
storage.HeatThroughTop.Q_flow
storage.HeatThroughTop.dT
storage.HeatThroughTop.port_a.T
storage.HeatThroughTop.G
storage.HeatThroughWalls[1].Q_flow
storage.HeatThroughWalls[1].dT
storage.HeatThroughWalls[1].G
storage.HeatThroughWalls[2].Q_flow
storage.HeatThroughWalls[2].dT
storage.HeatThroughWalls[2].G
storage.HeatThroughWalls[3].Q_flow
storage.HeatThroughWalls[3].dT
storage.HeatThroughWalls[3].G
storage.HeatThroughWalls[4].Q_flow
storage.HeatThroughWalls[4].dT
storage.HeatThroughWalls[4].G
storage.HeatThroughWalls[5].Q_flow
storage.HeatThroughWalls[5].dT
storage.HeatThroughWalls[5].G
storage.HeatThroughWalls[6].Q_flow
storage.HeatThroughWalls[6].dT
storage.HeatThroughWalls[6].G
storage.HeatThroughWalls[7].Q_flow
storage.HeatThroughWalls[7].dT
storage.HeatThroughWalls[7].G
storage.HeatThroughWalls[8].Q_flow
storage.HeatThroughWalls[8].dT
storage.HeatThroughWalls[8].G
storage.HeatThroughWalls[9].Q_flow
storage.HeatThroughWalls[9].dT
storage.HeatThroughWalls[9].G
storage.HeatThroughWalls[10].Q_flow
storage.HeatThroughWalls[10].dT
storage.HeatThroughWalls[10].G
storage.HeatThroughBottom.Q_flow
storage.HeatThroughBottom.dT
storage.HeatThroughBottom.G
storage.HeatBetweenLayers[1].Q_flow
storage.HeatBetweenLayers[1].dT
storage.HeatBetweenLayers[1].G
storage.HeatBetweenLayers[2].Q_flow
storage.HeatBetweenLayers[2].dT
storage.HeatBetweenLayers[2].G
storage.HeatBetweenLayers[3].Q_flow
storage.HeatBetweenLayers[3].dT
storage.HeatBetweenLayers[3].G
storage.HeatBetweenLayers[4].Q_flow
storage.HeatBetweenLayers[4].dT
storage.HeatBetweenLayers[4].G
storage.HeatBetweenLayers[5].Q_flow
storage.HeatBetweenLayers[5].dT
storage.HeatBetweenLayers[5].G
storage.HeatBetweenLayers[6].Q_flow
storage.HeatBetweenLayers[6].dT
storage.HeatBetweenLayers[6].G
storage.HeatBetweenLayers[7].Q_flow
storage.HeatBetweenLayers[7].dT
storage.HeatBetweenLayers[7].G
storage.HeatBetweenLayers[8].Q_flow
storage.HeatBetweenLayers[8].dT
storage.HeatBetweenLayers[8].G
storage.HeatBetweenLayers[9].Q_flow
storage.HeatBetweenLayers[9].dT
storage.HeatBetweenLayers[9].G
storage.HeatBuoyancy.nEle
storage.HeatBuoyancy.port_a[1].Q_flow
storage.HeatBuoyancy.port_a[2].Q_flow
storage.HeatBuoyancy.port_a[3].Q_flow
storage.HeatBuoyancy.port_a[4].Q_flow
storage.HeatBuoyancy.port_a[5].Q_flow
storage.HeatBuoyancy.port_a[6].Q_flow
storage.HeatBuoyancy.port_a[7].Q_flow
storage.HeatBuoyancy.port_a[8].Q_flow
storage.HeatBuoyancy.port_a[9].Q_flow
storage.HeatBuoyancy.dT[1]
storage.HeatBuoyancy.dT[2]
storage.HeatBuoyancy.dT[3]
storage.HeatBuoyancy.dT[4]
storage.HeatBuoyancy.dT[5]
storage.HeatBuoyancy.dT[6]
storage.HeatBuoyancy.dT[7]
storage.HeatBuoyancy.dT[8]
storage.HeatBuoyancy.dT[9]
storage.HeatBuoyancy.G
storage.HeatBuoyancy.exp_nEle
storage.HX_2
storage.HX_1
storage.PerfectlyIsolated
storage.AdditionalFluidPorts
storage.UA_wall
storage.UA_top
storage.UA_bot
storage.diameter_int
storage.diameter_ext
storage.ASec
storage.heightLayer
_GlobalScope.storage.X_default[1]
storage.sta_default.p
storage.sta_default.T
storage.vol_HX_1.energyDynamics
storage.vol_HX_1.massDynamics
storage.vol_HX_1.substanceDynamics
storage.vol_HX_1.traceDynamics
storage.vol_HX_1.p_start
storage.vol_HX_1.T_start
storage.vol_HX_1.X_start[1]
storage.vol_HX_1.mSenFac
storage.vol_HX_1.initialize_p
storage.vol_HX_1.prescribedHeatFlowRate
storage.vol_HX_1.simplify_mWat_flow
storage.vol_HX_1.use_C_flow
storage.vol_HX_1.m_flow_nominal
storage.vol_HX_1.nPorts
storage.vol_HX_1.m_flow_small
storage.vol_HX_1.allowFlowReversal
storage.vol_HX_1.V
storage.vol_HX_1.heatPort.T
storage.vol_HX_1.heatPort.Q_flow
storage.vol_HX_1.m
storage.vol_HX_1.rho_start
_GlobalScope.storage.vol_HX_1.X_default[1]
storage.vol_HX_1.state_default.p
storage.vol_HX_1.state_default.T
storage.vol_HX_1.rho_default
storage.vol_HX_1.state_start.p
storage.vol_HX_1.state_start.T
storage.vol_HX_1.useSteadyStateTwoPort
storage.ThermalConductanceHX_1.dT
storage.ThermalConductanceHX_1.G
storage.UA_HX_2
storage.Ele_HX_2
storage.UA_HX_1
storage.Ele_HX_1
storage.port_b1.h_outflow
storage.port_b2.m_flow
storage.port_b2.h_outflow
storage.port_a1.m_flow
storage.port_a2.m_flow
storage.T_start
storage.T[1]
storage.T[2]
storage.T[3]
storage.T[4]
storage.T[5]
storage.T[6]
storage.T[7]
storage.T[8]
storage.T[9]
storage.T[10]
storage.vol_bot.energyDynamics
storage.vol_bot.massDynamics
storage.vol_bot.substanceDynamics
storage.vol_bot.traceDynamics
storage.vol_bot.p_start
storage.vol_bot.T_start
storage.vol_bot.X_start[1]
storage.vol_bot.mSenFac
storage.vol_bot.initialize_p
storage.vol_bot.prescribedHeatFlowRate
storage.vol_bot.simplify_mWat_flow
storage.vol_bot.use_C_flow
storage.vol_bot.m_flow_nominal
storage.vol_bot.nPorts
storage.vol_bot.m_flow_small
storage.vol_bot.allowFlowReversal
storage.vol_bot.V
storage.vol_bot.ports[1].m_flow
storage.vol_bot.ports[2].m_flow
storage.vol_bot.ports[3].m_flow
storage.vol_bot.rho_start
_GlobalScope.storage.vol_bot.X_default[1]
storage.vol_bot.state_default.p
storage.vol_bot.state_default.T
storage.vol_bot.rho_default
storage.vol_bot.state_start.p
storage.vol_bot.state_start.T
storage.vol_bot.useSteadyStateTwoPort
storage.vol_top.energyDynamics
storage.vol_top.massDynamics
storage.vol_top.substanceDynamics
storage.vol_top.traceDynamics
storage.vol_top.p_start
storage.vol_top.T_start
storage.vol_top.X_start[1]
storage.vol_top.mSenFac
storage.vol_top.initialize_p
storage.vol_top.prescribedHeatFlowRate
storage.vol_top.simplify_mWat_flow
storage.vol_top.use_C_flow
storage.vol_top.m_flow_nominal
storage.vol_top.nPorts
storage.vol_top.m_flow_small
storage.vol_top.allowFlowReversal
storage.vol_top.V
storage.vol_top.ports[2].m_flow
storage.vol_top.heatPort.Q_flow
storage.vol_top.rho_start
_GlobalScope.storage.vol_top.X_default[1]
storage.vol_top.state_default.p
storage.vol_top.state_default.T
storage.vol_top.rho_default
storage.vol_top.state_start.p
storage.vol_top.state_start.T
storage.vol_top.useSteadyStateTwoPort
storage.pip[1].allowFlowReversal
storage.pip[1].port_a.m_flow
storage.pip[1].port_a.h_outflow
storage.pip[1].port_b.m_flow
storage.pip[1].m_flow_nominal
storage.pip[1].m_flow_small
storage.pip[1].show_T
storage.pip[1].m_flow
storage.pip[1].dp
storage.pip[1].from_dp
storage.pip[2].allowFlowReversal
storage.pip[2].port_a.m_flow
storage.pip[2].port_a.h_outflow
storage.pip[2].port_b.m_flow
storage.pip[2].m_flow_nominal
storage.pip[2].m_flow_small
storage.pip[2].show_T
storage.pip[2].m_flow
storage.pip[2].dp
storage.pip[2].from_dp
storage.pip[3].allowFlowReversal
storage.pip[3].port_a.m_flow
storage.pip[3].port_a.h_outflow
storage.pip[3].port_b.m_flow
storage.pip[3].m_flow_nominal
storage.pip[3].m_flow_small
storage.pip[3].show_T
storage.pip[3].m_flow
storage.pip[3].dp
storage.pip[3].from_dp
storage.pip[4].allowFlowReversal
storage.pip[4].port_a.m_flow
storage.pip[4].port_a.h_outflow
storage.pip[4].port_b.m_flow
storage.pip[4].m_flow_nominal
storage.pip[4].m_flow_small
storage.pip[4].show_T
storage.pip[4].m_flow
storage.pip[4].dp
storage.pip[4].from_dp
storage.pip[5].allowFlowReversal
storage.pip[5].port_b.h_outflow
storage.pip[5].m_flow_nominal
storage.pip[5].m_flow_small
storage.pip[5].show_T
storage.pip[5].dp
storage.pip[5].from_dp
storage.pip[6].allowFlowReversal
storage.pip[6].port_a.m_flow
storage.pip[6].port_a.h_outflow
storage.pip[6].port_b.m_flow
storage.pip[6].m_flow_nominal
storage.pip[6].m_flow_small
storage.pip[6].show_T
storage.pip[6].m_flow
storage.pip[6].dp
storage.pip[6].from_dp
storage.pip[7].allowFlowReversal
storage.pip[7].port_a.m_flow
storage.pip[7].port_a.h_outflow
storage.pip[7].port_b.m_flow
storage.pip[7].m_flow_nominal
storage.pip[7].m_flow_small
storage.pip[7].show_T
storage.pip[7].m_flow
storage.pip[7].dp
storage.pip[7].from_dp
storage.pip[8].allowFlowReversal
storage.pip[8].port_a.m_flow
storage.pip[8].port_a.h_outflow
storage.pip[8].port_b.m_flow
storage.pip[8].m_flow_nominal
storage.pip[8].m_flow_small
storage.pip[8].show_T
storage.pip[8].m_flow
storage.pip[8].dp
storage.pip[8].from_dp
collector.allowFlowReversal
collector.port_a.m_flow
collector.port_a.p
collector.port_a.h_outflow
collector.port_a.der(h_outflow)
collector.port_b.p
collector.port_b.h_outflow
collector.port_b.der(h_outflow)
collector.m_flow_nominal
collector.m_flow_small
collector.show_T
collector.dp
collector.sta_a.T
collector.sta_b.T
collector.energyDynamics
collector.massDynamics
collector.substanceDynamics
collector.traceDynamics
collector.p_start
collector.T_start
collector.X_start[1]
collector.mSenFac
collector.nEle
collector.width
collector.height
collector.angleDegTil
collector.angleDegAzi
collector.dp_nominal
collector.heatPortCon.Q_flow
collector.thermalCollectorCon.m
collector.thermalCollectorCon.port_a[1].Q_flow
collector.thermalCollectorCon.port_a[2].Q_flow
collector.thermalCollectorCon.port_a[3].Q_flow
collector.thermalCollectorCon.port_a[4].Q_flow
collector.thermalCollectorCon.port_a[5].Q_flow
collector.thermalCollectorCon.port_a[6].Q_flow
collector.thermalCollectorCon.port_a[7].Q_flow
collector.thermalCollectorCon.port_a[8].Q_flow
collector.thermalCollectorCon.port_a[9].Q_flow
collector.thermalCollectorCon.port_a[10].Q_flow
collector.replicatorQrad.nout
collector.replicatorQrad.u
collector.collectorData.C_0
collector.collectorData.C_1
collector.collectorData.C_2
collector.collectorData.V_A
collector.collectorData.A
collector.collectorData.IAMC
collector.collectorData.C_A
collector.res.allowFlowReversal
collector.res.m_flow_nominal
collector.res.m_flow_small
collector.res.show_T
collector.res.dp
collector.res.from_dp
collector.res.dp_nominal
collector.res.homotopyInitialization
collector.res.linearized
collector.res.m_flow_turbulent
collector.res.sta_default.p
collector.res.sta_default.T
collector.res.eta_default
collector.res.m_flow_nominal_pos
collector.res.dp_nominal_pos
_GlobalScope.collector.res.X_default[1]
collector.res.use_dh
collector.res.dh
collector.res.ReC
collector.res.deltaM
collector.res.k
collector.res.computeFlowResistance
collector.homotopyInitialization
collector.from_dp
collector.linearized
collector.AColData
collector.V
collector.C
collector.use_GSC_in
collector.GSC_constant
collector.A
collector.IAM
collector.IrrTot
collector.QCon[1].y
collector.QCon[2].y
collector.QCon[3].y
collector.QCon[4].y
collector.QCon[5].y
collector.QCon[6].y
collector.QCon[7].y
collector.QCon[8].y
collector.QCon[9].y
collector.QCon[10].y
collector.preSumCon[1].T_ref
collector.preSumCon[1].alpha
collector.preSumCon[2].T_ref
collector.preSumCon[2].alpha
collector.preSumCon[3].T_ref
collector.preSumCon[3].alpha
collector.preSumCon[4].T_ref
collector.preSumCon[4].alpha
collector.preSumCon[5].T_ref
collector.preSumCon[5].alpha
collector.preSumCon[6].T_ref
collector.preSumCon[6].alpha
collector.preSumCon[7].T_ref
collector.preSumCon[7].alpha
collector.preSumCon[8].T_ref
collector.preSumCon[8].alpha
collector.preSumCon[9].T_ref
collector.preSumCon[9].alpha
collector.preSumCon[10].T_ref
collector.preSumCon[10].alpha
collector.preConRad[1].T_ref
collector.preConRad[1].alpha
collector.preConRad[1].Q_flow
collector.preConRad[1].port.Q_flow
collector.preConRad[2].T_ref
collector.preConRad[2].alpha
collector.preConRad[2].Q_flow
collector.preConRad[2].port.Q_flow
collector.preConRad[3].T_ref
collector.preConRad[3].alpha
collector.preConRad[3].Q_flow
collector.preConRad[3].port.Q_flow
collector.preConRad[4].T_ref
collector.preConRad[4].alpha
collector.preConRad[4].Q_flow
collector.preConRad[4].port.Q_flow
collector.preConRad[5].T_ref
collector.preConRad[5].alpha
collector.preConRad[5].Q_flow
collector.preConRad[5].port.Q_flow
collector.preConRad[6].T_ref
collector.preConRad[6].alpha
collector.preConRad[6].Q_flow
collector.preConRad[6].port.Q_flow
collector.preConRad[7].T_ref
collector.preConRad[7].alpha
collector.preConRad[7].Q_flow
collector.preConRad[7].port.Q_flow
collector.preConRad[8].T_ref
collector.preConRad[8].alpha
collector.preConRad[8].Q_flow
collector.preConRad[8].port.Q_flow
collector.preConRad[9].T_ref
collector.preConRad[9].alpha
collector.preConRad[9].Q_flow
collector.preConRad[9].port.Q_flow
collector.preConRad[10].T_ref
collector.preConRad[10].alpha
collector.preConRad[10].Q_flow
collector.preConRad[10].port.Q_flow
collector.sumConRad[1].nin
collector.sumConRad[1].k[1]
collector.sumConRad[1].k[2]
collector.sumConRad[2].nin
collector.sumConRad[2].k[1]
collector.sumConRad[2].k[2]
collector.sumConRad[3].nin
collector.sumConRad[3].k[1]
collector.sumConRad[3].k[2]
collector.sumConRad[4].nin
collector.sumConRad[4].k[1]
collector.sumConRad[4].k[2]
collector.sumConRad[5].nin
collector.sumConRad[5].k[1]
collector.sumConRad[5].k[2]
collector.sumConRad[6].nin
collector.sumConRad[6].k[1]
collector.sumConRad[6].k[2]
collector.sumConRad[7].nin
collector.sumConRad[7].k[1]
collector.sumConRad[7].k[2]
collector.sumConRad[8].nin
collector.sumConRad[8].k[1]
collector.sumConRad[8].k[2]
collector.sumConRad[9].nin
collector.sumConRad[9].k[1]
collector.sumConRad[9].k[2]
collector.sumConRad[10].nin
collector.sumConRad[10].k[1]
collector.sumConRad[10].k[2]
collector.IAMC
collector.C_0
collector.C_1
collector.C_2
collector.IrrDir
collector.IrrDif
collector.inc
pump2.energyDynamics
pump2.massDynamics
pump2.substanceDynamics
pump2.traceDynamics
pump2.p_start
pump2.T_start
pump2.X_start[1]
pump2.mSenFac
pump2.allowFlowReversal
pump2.port_a.p
pump2.port_a.h_outflow
pump2.port_b.h_outflow
pump2.m_flow_nominal
pump2.m_flow_small
pump2.show_T
pump2.dp
pump2.per.pressure.V_flow[1]
pump2.per.pressure.V_flow[2]
pump2.per.pressure.dp[1]
pump2.per.pressure.dp[2]
pump2.per.use_powerCharacteristic
pump2.per.hydraulicEfficiency.V_flow[1]
pump2.per.hydraulicEfficiency.eta[1]
pump2.per.motorEfficiency.V_flow[1]
pump2.per.motorEfficiency.eta[1]
pump2.per.power.V_flow[1]
pump2.per.power.P[1]
pump2.per.motorCooledByFluid
pump2.per.speed_nominal
pump2.per.constantSpeed
pump2.per.speeds[1]
pump2.per.speed_rpm_nominal
pump2.per.constantSpeed_rpm
pump2.per.speeds_rpm[1]
pump2.per.havePressureCurve
pump2.inputType
pump2.constInput
pump2.stageInputs[1]
pump2.computePowerUsingSimilarityLaws
pump2.addPowerToMedium
pump2.nominalValuesDefineDefaultPressureCurve
pump2.tau
pump2.filteredSpeed
pump2.riseTime
pump2.init
pump2.y_start
pump2.y_actual
pump2.P
pump2.heatPort.T
pump2.heatPort.Q_flow
pump2.VMachine_flow
pump2.dpMachine
pump2.eta
pump2.etaHyd
pump2.etaMot
pump2.preVar
pump2.speedIsInput
pump2.nOri
pump2.haveVMax
pump2.V_flow_max
pump2.rho_default
pump2.sta_start.p
pump2.sta_start.T
pump2.h_outflow_start
pump2.vol.energyDynamics
pump2.vol.massDynamics
pump2.vol.substanceDynamics
pump2.vol.traceDynamics
pump2.vol.p_start
pump2.vol.T_start
pump2.vol.X_start[1]
pump2.vol.mSenFac
pump2.vol.initialize_p
pump2.vol.prescribedHeatFlowRate
pump2.vol.simplify_mWat_flow
pump2.vol.use_C_flow
pump2.vol.m_flow_nominal
pump2.vol.nPorts
pump2.vol.m_flow_small
pump2.vol.allowFlowReversal
pump2.vol.V
pump2.vol.heatPort.Q_flow
pump2.vol.rho_start
_GlobalScope.pump2.vol.X_default[1]
pump2.vol.state_default.p
pump2.vol.state_default.T
pump2.vol.rho_default
pump2.vol.state_start.p
pump2.vol.state_start.T
pump2.vol.useSteadyStateTwoPort
pump2.vol.tau
pump2.vol.V_nominal
pump2.filter.analogFilter
pump2.filter.filterType
pump2.filter.order
pump2.filter.f_cut
pump2.filter.gain
pump2.filter.A_ripple
pump2.filter.f_min
pump2.filter.normalized
pump2.filter.init
pump2.filter.nx
pump2.filter.x_start[1]
pump2.filter.x_start[2]
pump2.filter.y_start
pump2.filter.u_nominal
pump2.filter.x[1]
pump2.filter.der(x[1])
pump2.filter.x[2]
pump2.filter.der(x[2])
pump2.filter.ncr
pump2.filter.nc0
pump2.filter.na
pump2.filter.nr
pump2.filter.cr[1]
pump2.filter.cr[2]
pump2.filter.r[1]
pump2.filter.r[2]
pump2.filter.uu[1]
pump2.preSou.allowFlowReversal
pump2.preSou.port_a.h_outflow
pump2.preSou.dp_start
pump2.preSou.m_flow_start
pump2.preSou.m_flow_small
pump2.preSou.show_T
pump2.preSou.show_V_flow
pump2.preSou.V_flow
_GlobalScope.pump2.preSou.X_default[1]
pump2.preSou.control_m_flow
pump2.preSou.dp_internal
pump2.heaDis.homotopyInitialization
pump2.heaDis.motorCooledByFluid
pump2.heaDis.delta_V_flow
pump2.heaDis.Q_flow
pump2.heaDis.WHyd
pump2.heaDis.QThe_flow
pump2.PToMed.k1
pump2.PToMed.k2
pump2.prePow.T_ref
pump2.prePow.alpha
pump2.rho_inlet.y
pump2.senMasFlo.allowFlowReversal
pump2.senMasFlo.m_flow_nominal
pump2.senMasFlo.m_flow_small
_GlobalScope.pump2.senMasFlo.X_default[1]
pump2.senRelPre.port_a.m_flow
pump2.senRelPre.port_a.h_outflow
pump2.senRelPre.port_b.m_flow
pump2.senRelPre.port_b.h_outflow
pump2.senRelPre.p_rel
pump2.eff.per.pressure.V_flow[1]
pump2.eff.per.pressure.V_flow[2]
pump2.eff.per.pressure.dp[1]
pump2.eff.per.pressure.dp[2]
pump2.eff.per.use_powerCharacteristic
pump2.eff.per.hydraulicEfficiency.V_flow[1]
pump2.eff.per.hydraulicEfficiency.eta[1]
pump2.eff.per.motorEfficiency.V_flow[1]
pump2.eff.per.motorEfficiency.eta[1]
pump2.eff.per.power.V_flow[1]
pump2.eff.per.power.P[1]
pump2.eff.per.motorCooledByFluid
pump2.eff.per.speed_nominal
pump2.eff.per.constantSpeed
pump2.eff.per.speeds[1]
pump2.eff.per.speed_rpm_nominal
pump2.eff.per.constantSpeed_rpm
pump2.eff.per.speeds_rpm[1]
pump2.eff.per.havePressureCurve
pump2.eff.preVar
pump2.eff.computePowerUsingSimilarityLaws
pump2.eff.V_flow_nominal
pump2.eff.rho_default
pump2.eff.haveVMax
pump2.eff.V_flow_max
pump2.eff.nOri
pump2.eff.homotopyInitialization
pump2.eff.y_out
pump2.eff.rho
pump2.eff.WFlo
pump2.eff.r_N
pump2.eff.r_V
pump2.eff.preSpe
pump2.eff.prePre
pump2.eff.motDer[1]
pump2.eff.hydDer[1]
pump2.eff.VDelta_flow
pump2.eff.dpDelta
pump2.eff.delta
pump2.eff.cBar[1]
pump2.eff.cBar[2]
pump2.eff.dpMax
pump2.eff.kRes
pump2.eff.curve
pump2.eff.pCur1.n
pump2.eff.pCur1.V_flow[1]
pump2.eff.pCur1.V_flow[2]
pump2.eff.pCur1.dp[1]
pump2.eff.pCur1.dp[2]
pump2.eff.pCur2.n
pump2.eff.pCur2.V_flow[1]
pump2.eff.pCur2.V_flow[2]
pump2.eff.pCur2.V_flow[3]
pump2.eff.pCur2.dp[1]
pump2.eff.pCur2.dp[2]
pump2.eff.pCur2.dp[3]
pump2.eff.pCur3.n
pump2.eff.pCur3.V_flow[1]
pump2.eff.pCur3.V_flow[2]
pump2.eff.pCur3.V_flow[3]
pump2.eff.pCur3.V_flow[4]
pump2.eff.pCur3.dp[1]
pump2.eff.pCur3.dp[2]
pump2.eff.pCur3.dp[3]
pump2.eff.pCur3.dp[4]
pump2.eff.preDer1[1]
pump2.eff.preDer1[2]
pump2.eff.preDer2[1]
pump2.eff.preDer2[2]
pump2.eff.preDer2[3]
pump2.eff.preDer3[1]
pump2.eff.preDer3[2]
pump2.eff.preDer3[3]
pump2.eff.preDer3[4]
pump2.eff.powDer[1]
pump2.eff.haveMinimumDecrease
pump2.eff.haveDPMax
pump2.dp_nominal
pump2.m_flow_start
pump2.constantMassFlowRate
pump2.massFlowRates[1]
pipe4.energyDynamics
pipe4.massDynamics
pipe4.substanceDynamics
pipe4.traceDynamics
pipe4.p_start
pipe4.T_start
pipe4.X_start[1]
pipe4.mSenFac
pipe4.allowFlowReversal
pipe4.port_a.h_outflow
pipe4.port_b.h_outflow
pipe4.m_flow_nominal
pipe4.m_flow_small
pipe4.show_T
pipe4.dp
pipe4.sta_a.T
pipe4.sta_b.T
pipe4.computeFlowResistance
pipe4.from_dp
pipe4.dp_nominal
pipe4.linearizeFlowResistance
pipe4.deltaM
pipe4.nNodes
pipe4.thicknessIns
pipe4.lambdaIns
pipe4.diameter
pipe4.length
pipe4.ReC
pipe4.useMultipleHeatPorts
pipe4.res.allowFlowReversal
pipe4.res.port_b.h_outflow
pipe4.res.m_flow_nominal
pipe4.res.m_flow_small
pipe4.res.show_T
pipe4.res.dp
pipe4.res.sta_a.T
pipe4.res.sta_b.T
pipe4.res.from_dp
pipe4.res.dp_nominal
pipe4.res.homotopyInitialization
pipe4.res.linearized
pipe4.res.m_flow_turbulent
pipe4.res.sta_default.p
pipe4.res.sta_default.T
pipe4.res.eta_default
pipe4.res.m_flow_nominal_pos
pipe4.res.dp_nominal_pos
_GlobalScope.pipe4.res.X_default[1]
pipe4.res.use_dh
pipe4.res.dh
pipe4.res.ReC
pipe4.res.deltaM
pipe4.res.k
pipe4.res.computeFlowResistance
pipe4.vol[1].energyDynamics
pipe4.vol[1].massDynamics
pipe4.vol[1].substanceDynamics
pipe4.vol[1].traceDynamics
pipe4.vol[1].p_start
pipe4.vol[1].T_start
pipe4.vol[1].X_start[1]
pipe4.vol[1].mSenFac
pipe4.vol[1].initialize_p
pipe4.vol[1].prescribedHeatFlowRate
pipe4.vol[1].simplify_mWat_flow
pipe4.vol[1].use_C_flow
pipe4.vol[1].m_flow_nominal
pipe4.vol[1].nPorts
pipe4.vol[1].m_flow_small
pipe4.vol[1].allowFlowReversal
pipe4.vol[1].V
pipe4.vol[1].heatPort.T
pipe4.vol[1].heatPort.Q_flow
pipe4.vol[1].m
pipe4.vol[1].rho_start
_GlobalScope.pipe4.vol.X_default[1]
pipe4.vol[1].state_default.p
pipe4.vol[1].state_default.T
pipe4.vol[1].rho_default
pipe4.vol[1].state_start.p
pipe4.vol[1].state_start.T
pipe4.vol[1].useSteadyStateTwoPort
pipe4.vol[2].energyDynamics
pipe4.vol[2].massDynamics
pipe4.vol[2].substanceDynamics
pipe4.vol[2].traceDynamics
pipe4.vol[2].p_start
pipe4.vol[2].T_start
pipe4.vol[2].X_start[1]
pipe4.vol[2].mSenFac
pipe4.vol[2].initialize_p
pipe4.vol[2].prescribedHeatFlowRate
pipe4.vol[2].simplify_mWat_flow
pipe4.vol[2].use_C_flow
pipe4.vol[2].m_flow_nominal
pipe4.vol[2].nPorts
pipe4.vol[2].m_flow_small
pipe4.vol[2].allowFlowReversal
pipe4.vol[2].V
pipe4.vol[2].heatPort.T
pipe4.vol[2].heatPort.Q_flow
pipe4.vol[2].m
pipe4.vol[2].rho_start
pipe4.vol[2].state_default.p
pipe4.vol[2].state_default.T
pipe4.vol[2].rho_default
pipe4.vol[2].state_start.p
pipe4.vol[2].state_start.T
pipe4.vol[2].useSteadyStateTwoPort
pipe4.conPipWal[1].dT
pipe4.conPipWal[1].G
pipe4.conPipWal[2].dT
pipe4.conPipWal[2].G
pipe4.colAllToOne.m
pipe4.heatPort.Q_flow
pipe4.VPipe
_GlobalScope.pipe4.X_default[1]
pipe4.state_default.p
pipe4.state_default.T
pipe4.rho_default
pipe4.mu_default
pipe4.v_nominal
pipe4.roughness
pipe4.dpStraightPipe_nominal
pipe5.energyDynamics
pipe5.massDynamics
pipe5.substanceDynamics
pipe5.traceDynamics
pipe5.p_start
pipe5.T_start
pipe5.X_start[1]
pipe5.mSenFac
pipe5.allowFlowReversal
pipe5.port_a.h_outflow
pipe5.port_b.h_outflow
pipe5.m_flow_nominal
pipe5.m_flow_small
pipe5.show_T
pipe5.dp
pipe5.sta_a.T
pipe5.sta_b.T
pipe5.computeFlowResistance
pipe5.from_dp
pipe5.dp_nominal
pipe5.linearizeFlowResistance
pipe5.deltaM
pipe5.nNodes
pipe5.thicknessIns
pipe5.lambdaIns
pipe5.diameter
pipe5.length
pipe5.ReC
pipe5.useMultipleHeatPorts
pipe5.res.allowFlowReversal
pipe5.res.m_flow_nominal
pipe5.res.m_flow_small
pipe5.res.show_T
pipe5.res.dp
pipe5.res.sta_a.T
pipe5.res.sta_b.T
pipe5.res.from_dp
pipe5.res.dp_nominal
pipe5.res.homotopyInitialization
pipe5.res.linearized
pipe5.res.m_flow_turbulent
pipe5.res.sta_default.p
pipe5.res.sta_default.T
pipe5.res.eta_default
pipe5.res.m_flow_nominal_pos
pipe5.res.dp_nominal_pos
_GlobalScope.pipe5.res.X_default[1]
pipe5.res.use_dh
pipe5.res.dh
pipe5.res.ReC
pipe5.res.deltaM
pipe5.res.k
pipe5.res.computeFlowResistance
pipe5.vol[1].energyDynamics
pipe5.vol[1].massDynamics
pipe5.vol[1].substanceDynamics
pipe5.vol[1].traceDynamics
pipe5.vol[1].p_start
pipe5.vol[1].T_start
pipe5.vol[1].X_start[1]
pipe5.vol[1].mSenFac
pipe5.vol[1].initialize_p
pipe5.vol[1].prescribedHeatFlowRate
pipe5.vol[1].simplify_mWat_flow
pipe5.vol[1].use_C_flow
pipe5.vol[1].m_flow_nominal
pipe5.vol[1].nPorts
pipe5.vol[1].m_flow_small
pipe5.vol[1].allowFlowReversal
pipe5.vol[1].V
pipe5.vol[1].heatPort.T
pipe5.vol[1].heatPort.Q_flow
pipe5.vol[1].m
pipe5.vol[1].rho_start
_GlobalScope.pipe5.vol.X_default[1]
pipe5.vol[1].state_default.p
pipe5.vol[1].state_default.T
pipe5.vol[1].rho_default
pipe5.vol[1].state_start.p
pipe5.vol[1].state_start.T
pipe5.vol[1].useSteadyStateTwoPort
pipe5.vol[2].energyDynamics
pipe5.vol[2].massDynamics
pipe5.vol[2].substanceDynamics
pipe5.vol[2].traceDynamics
pipe5.vol[2].p_start
pipe5.vol[2].T_start
pipe5.vol[2].X_start[1]
pipe5.vol[2].mSenFac
pipe5.vol[2].initialize_p
pipe5.vol[2].prescribedHeatFlowRate
pipe5.vol[2].simplify_mWat_flow
pipe5.vol[2].use_C_flow
pipe5.vol[2].m_flow_nominal
pipe5.vol[2].nPorts
pipe5.vol[2].m_flow_small
pipe5.vol[2].allowFlowReversal
pipe5.vol[2].V
pipe5.vol[2].heatPort.T
pipe5.vol[2].heatPort.Q_flow
pipe5.vol[2].m
pipe5.vol[2].rho_start
pipe5.vol[2].state_default.p
pipe5.vol[2].state_default.T
pipe5.vol[2].rho_default
pipe5.vol[2].state_start.p
pipe5.vol[2].state_start.T
pipe5.vol[2].useSteadyStateTwoPort
pipe5.conPipWal[1].dT
pipe5.conPipWal[1].G
pipe5.conPipWal[2].dT
pipe5.conPipWal[2].G
pipe5.colAllToOne.m
pipe5.heatPort.Q_flow
pipe5.VPipe
_GlobalScope.pipe5.X_default[1]
pipe5.state_default.p
pipe5.state_default.T
pipe5.rho_default
pipe5.mu_default
pipe5.v_nominal
pipe5.roughness
pipe5.dpStraightPipe_nominal
colOn.k
exp2.energyDynamics
exp2.massDynamics
exp2.substanceDynamics
exp2.traceDynamics
exp2.p_start
exp2.T_start
exp2.X_start[1]
exp2.mSenFac
exp2.V_start
exp2.p
exp2.port_a.h_outflow
exp2.m
exp2.der(m)
exp2.state_start.p
exp2.state_start.T
exp2.rho_start
exp2.H
exp2.der(H)
control.uLow
control.uHigh
control.pre_y_start
control.u
control.y
switch1.u2
switch1.y
ColOff.k
add.k1
add.k2
HDirTilColl.til
HDirTilColl.lat
HDirTilColl.azi
HDirTilColl.incAng.lat
HDirTilColl.incAng.azi
HDirTilColl.incAng.til
HDirTilColl.incAng.decAng.decAng
HDirTilColl.incAng.decAng.k1
HDirTilColl.incAng.decAng.k2
HDirTilColl.incAng.solHouAng.solHouAng
HDirTilColl.incAng.incAng.lat
HDirTilColl.incAng.incAng.azi
HDirTilColl.incAng.incAng.til
HDirTilColl.incAng.incAng.dec_c
HDirTilColl.incAng.incAng.dec_s
HDirTilColl.incAng.incAng.sol_c
HDirTilColl.incAng.incAng.sol_s
HDirTilColl.incAng.incAng.lat_c
HDirTilColl.incAng.incAng.lat_s
HDifTilColl.til
HDifTilColl.rho
HDifTilColl.lat
HDifTilColl.azi
HDifTilColl.outSkyCon
HDifTilColl.outGroCon
HDifTilColl.add.u1
HDifTilColl.add.u2
HDifTilColl.add.k1
HDifTilColl.add.k2
HDifTilColl.HDifTil.rho
HDifTilColl.HDifTil.til
HDifTilColl.HDifTil.briCof1
HDifTilColl.HDifTil.briCof2
HDifTilColl.HDifTil.incAng
HDifTilColl.HDifTil.a
HDifTilColl.HDifTil.b
HDifTilColl.HDifTil.bMin
HDifTilColl.skyCle.skyCle
HDifTilColl.skyCle.k
HDifTilColl.skyCle.tmp1
HDifTilColl.briCoe.skyBri
HDifTilColl.briCoe.F11
HDifTilColl.briCoe.F12
HDifTilColl.briCoe.F13
HDifTilColl.briCoe.F21
HDifTilColl.briCoe.F22
HDifTilColl.briCoe.F23
HDifTilColl.briCoe.d
HDifTilColl.briCoe.a1
HDifTilColl.briCoe.a2
HDifTilColl.briCoe.a3
HDifTilColl.briCoe.a4
HDifTilColl.briCoe.a5
HDifTilColl.briCoe.a6
HDifTilColl.briCoe.a7
HDifTilColl.briCoe.a8
HDifTilColl.briCoe.b2
HDifTilColl.briCoe.b3
HDifTilColl.briCoe.b4
HDifTilColl.briCoe.b5
HDifTilColl.briCoe.b6
HDifTilColl.briCoe.b7
HDifTilColl.relAirMas.relAirMas
HDifTilColl.relAirMas.zenLim
HDifTilColl.relAirMas.zenDeg
HDifTilColl.incAng.lat
HDifTilColl.incAng.azi
HDifTilColl.incAng.til
HDifTilColl.incAng.decAng.decAng
HDifTilColl.incAng.decAng.k1
HDifTilColl.incAng.decAng.k2
HDifTilColl.incAng.solHouAng.solHouAng
HDifTilColl.incAng.incAng.lat
HDifTilColl.incAng.incAng.azi
HDifTilColl.incAng.incAng.til
HDifTilColl.incAng.incAng.dec_c
HDifTilColl.incAng.incAng.dec_s
HDifTilColl.incAng.incAng.sol_c
HDifTilColl.incAng.incAng.sol_s
HDifTilColl.incAng.incAng.lat_c
HDifTilColl.incAng.incAng.lat_s
weaDat.computeWetBulbTemperature
weaDat.pAtmSou
weaDat.pAtm
weaDat.ceiHeiSou
weaDat.ceiHei
weaDat.totSkyCovSou
weaDat.totSkyCov
weaDat.opaSkyCovSou
weaDat.opaSkyCov
weaDat.TDryBulSou
weaDat.TDryBul
weaDat.TDewPoiSou
weaDat.TDewPoi
weaDat.TBlaSkySou
weaDat.TBlaSky
weaDat.relHumSou
weaDat.relHum
weaDat.winSpeSou
weaDat.winSpe
weaDat.winDirSou
weaDat.winDir
weaDat.HInfHorSou
weaDat.HInfHor
weaDat.HSou
weaDat.lon
weaDat.lat
weaDat.timZon
weaDat.calTSky
weaDat.epsCos
weaDat.datRea.nout
weaDat.datRea.u
weaDat.datRea.y[1]
weaDat.datRea.y[2]
weaDat.datRea.y[3]
weaDat.datRea.y[4]
weaDat.datRea.y[5]
weaDat.datRea.y[6]
weaDat.datRea.y[7]
weaDat.datRea.y[8]
weaDat.datRea.y[9]
weaDat.datRea.y[10]
weaDat.datRea.y[11]
weaDat.datRea.y[13]
weaDat.datRea.y[14]
weaDat.datRea.y[15]
weaDat.datRea.y[17]
weaDat.datRea.y[18]
weaDat.datRea.y[19]
weaDat.datRea.y[20]
weaDat.datRea.y[21]
weaDat.datRea.y[22]
weaDat.datRea.y[23]
weaDat.datRea.y[24]
weaDat.datRea.y[25]
weaDat.datRea.tableOnFile
weaDat.datRea.verboseRead
weaDat.datRea.columns[1]
weaDat.datRea.columns[2]
weaDat.datRea.columns[3]
weaDat.datRea.columns[4]
weaDat.datRea.columns[5]
weaDat.datRea.columns[6]
weaDat.datRea.columns[7]
weaDat.datRea.columns[8]
weaDat.datRea.columns[9]
weaDat.datRea.columns[10]
weaDat.datRea.columns[11]
weaDat.datRea.columns[12]
weaDat.datRea.columns[13]
weaDat.datRea.columns[14]
weaDat.datRea.columns[15]
weaDat.datRea.columns[16]
weaDat.datRea.columns[17]
weaDat.datRea.columns[18]
weaDat.datRea.columns[19]
weaDat.datRea.columns[20]
weaDat.datRea.columns[21]
weaDat.datRea.columns[22]
weaDat.datRea.columns[23]
weaDat.datRea.columns[24]
weaDat.datRea.columns[25]
weaDat.datRea.smoothness
weaDat.datRea.tableID.id
weaDat.datRea.tableOnFileRead
weaDat.cheTemDryBul.TMin
weaDat.cheTemDryBul.TMax
weaDat.cheTemDewPoi.TMin
weaDat.cheTemDewPoi.TMax
weaDat.chePre.PMin
weaDat.chePre.PMax
weaDat.cheTotSkyCov.delta
weaDat.cheTotSkyCov.nMin
weaDat.cheTotSkyCov.nMax
weaDat.cheOpaSkyCov.delta
weaDat.cheOpaSkyCov.nMin
weaDat.cheOpaSkyCov.nMax
weaDat.cheGloHorRad.HMin
weaDat.cheDifHorRad.HMin
weaDat.cheDirNorRad.HMin
weaDat.cheCeiHei.ceiHeiMin
weaDat.cheWinSpe.winSpeMin
weaDat.cheHorRad.HMin
weaDat.cheWinDir.delta
weaDat.cheWinDir.nMin
weaDat.cheWinDir.nMax
weaDat.TBlaSkyCom.calTSky
weaDat.TBlaSkyCom.TDewPoiK
weaDat.TBlaSkyCom.epsSky
weaDat.TBlaSkyCom.nOpa10
weaDat.add.u1
weaDat.add.y
weaDat.add.k1
weaDat.add.k2
weaDat.con30mins.k
weaDat.con30mins.y
weaDat.locTim.timZon
weaDat.locTim.lon
weaDat.locTim.locTim
weaDat.locTim.diff
weaDat.datRea1.nout
weaDat.datRea1.u
weaDat.datRea1.tableOnFile
weaDat.datRea1.verboseRead
weaDat.datRea1.columns[1]
weaDat.datRea1.columns[2]
weaDat.datRea1.columns[3]
weaDat.datRea1.columns[4]
weaDat.datRea1.smoothness
weaDat.datRea1.tableID.id
weaDat.datRea1.tableOnFileRead
weaDat.conTim1.year
weaDat.conTim1.tStart
weaDat.conTim.year
weaDat.conTim.tStart
weaDat.eqnTim.eqnTim
weaDat.eqnTim.Bt
weaDat.ceiHei_in_internal
weaDat.totSkyCov_in_internal
weaDat.opaSkyCov_in_internal
weaDat.relHum_in_internal
weaDat.winSpe_in_internal
weaDat.winDir_in_internal
weaDat.HGloHor_in_internal
weaDat.HDifHor_in_internal
weaDat.HDirNor_in_internal
weaDat.HInfHor_in_internal
weaDat.conHorRad.Hou
weaDat.conDirNorRad.Hou
weaDat.conGloHorRad.Hou
weaDat.conDifHorRad.Hou
weaDat.cheRelHum.delta
weaDat.cheRelHum.relHumMin
weaDat.cheRelHum.relHumMax
weaDat.zenAng.lat
weaDat.decAng.k1
weaDat.decAng.k2
weaDat.latitude.latitude
weaDat.latitude.y
weaDat.longitude.longitude
weaDat.longitude.y
weaDat.conTotSkyCov.k
weaDat.conOpaSkyCov.k
weaDat.cheTemBlaSky.TMin
weaDat.cheTemBlaSky.TMax
HDifTil[1].til
HDifTil[1].H
HDifTil[1].rho
HDifTil[1].lat
HDifTil[1].azi
HDifTil[1].outSkyCon
HDifTil[1].outGroCon
HDifTil[1].add.k1
HDifTil[1].add.k2
HDifTil[1].HDifTil.rho
HDifTil[1].HDifTil.til
HDifTil[1].HDifTil.briCof1
HDifTil[1].HDifTil.briCof2
HDifTil[1].HDifTil.incAng
HDifTil[1].HDifTil.a
HDifTil[1].HDifTil.b
HDifTil[1].HDifTil.bMin
HDifTil[1].skyCle.skyCle
HDifTil[1].skyCle.k
HDifTil[1].skyCle.tmp1
HDifTil[1].briCoe.skyBri
HDifTil[1].briCoe.F11
HDifTil[1].briCoe.F12
HDifTil[1].briCoe.F13
HDifTil[1].briCoe.F21
HDifTil[1].briCoe.F22
HDifTil[1].briCoe.F23
HDifTil[1].briCoe.d
HDifTil[1].briCoe.a1
HDifTil[1].briCoe.a2
HDifTil[1].briCoe.a3
HDifTil[1].briCoe.a4
HDifTil[1].briCoe.a5
HDifTil[1].briCoe.a6
HDifTil[1].briCoe.a7
HDifTil[1].briCoe.a8
HDifTil[1].briCoe.b2
HDifTil[1].briCoe.b3
HDifTil[1].briCoe.b4
HDifTil[1].briCoe.b5
HDifTil[1].briCoe.b6
HDifTil[1].briCoe.b7
HDifTil[1].relAirMas.relAirMas
HDifTil[1].relAirMas.zenLim
HDifTil[1].relAirMas.zenDeg
HDifTil[1].incAng.lat
HDifTil[1].incAng.azi
HDifTil[1].incAng.til
HDifTil[1].incAng.decAng.decAng
HDifTil[1].incAng.decAng.k1
HDifTil[1].incAng.decAng.k2
HDifTil[1].incAng.solHouAng.solHouAng
HDifTil[1].incAng.incAng.lat
HDifTil[1].incAng.incAng.azi
HDifTil[1].incAng.incAng.til
HDifTil[1].incAng.incAng.dec_c
HDifTil[1].incAng.incAng.dec_s
HDifTil[1].incAng.incAng.sol_c
HDifTil[1].incAng.incAng.sol_s
HDifTil[1].incAng.incAng.lat_c
HDifTil[1].incAng.incAng.lat_s
HDifTil[2].til
HDifTil[2].H
HDifTil[2].rho
HDifTil[2].lat
HDifTil[2].azi
HDifTil[2].outSkyCon
HDifTil[2].outGroCon
HDifTil[2].add.k1
HDifTil[2].add.k2
HDifTil[2].HDifTil.rho
HDifTil[2].HDifTil.til
HDifTil[2].HDifTil.briCof1
HDifTil[2].HDifTil.briCof2
HDifTil[2].HDifTil.incAng
HDifTil[2].HDifTil.a
HDifTil[2].HDifTil.b
HDifTil[2].HDifTil.bMin
HDifTil[2].skyCle.skyCle
HDifTil[2].skyCle.k
HDifTil[2].skyCle.tmp1
HDifTil[2].briCoe.skyBri
HDifTil[2].briCoe.F11
HDifTil[2].briCoe.F12
HDifTil[2].briCoe.F13
HDifTil[2].briCoe.F21
HDifTil[2].briCoe.F22
HDifTil[2].briCoe.F23
HDifTil[2].briCoe.d
HDifTil[2].briCoe.a1
HDifTil[2].briCoe.a2
HDifTil[2].briCoe.a3
HDifTil[2].briCoe.a4
HDifTil[2].briCoe.a5
HDifTil[2].briCoe.a6
HDifTil[2].briCoe.a7
HDifTil[2].briCoe.a8
HDifTil[2].briCoe.b2
HDifTil[2].briCoe.b3
HDifTil[2].briCoe.b4
HDifTil[2].briCoe.b5
HDifTil[2].briCoe.b6
HDifTil[2].briCoe.b7
HDifTil[2].relAirMas.relAirMas
HDifTil[2].relAirMas.zenLim
HDifTil[2].relAirMas.zenDeg
HDifTil[2].incAng.lat
HDifTil[2].incAng.azi
HDifTil[2].incAng.til
HDifTil[2].incAng.decAng.decAng
HDifTil[2].incAng.decAng.k1
HDifTil[2].incAng.decAng.k2
HDifTil[2].incAng.solHouAng.solHouAng
HDifTil[2].incAng.incAng.lat
HDifTil[2].incAng.incAng.azi
HDifTil[2].incAng.incAng.til
HDifTil[2].incAng.incAng.dec_c
HDifTil[2].incAng.incAng.dec_s
HDifTil[2].incAng.incAng.sol_c
HDifTil[2].incAng.incAng.sol_s
HDifTil[2].incAng.incAng.lat_c
HDifTil[2].incAng.incAng.lat_s
HDifTil[3].til
HDifTil[3].H
HDifTil[3].rho
HDifTil[3].lat
HDifTil[3].azi
HDifTil[3].outSkyCon
HDifTil[3].outGroCon
HDifTil[3].add.k1
HDifTil[3].add.k2
HDifTil[3].HDifTil.rho
HDifTil[3].HDifTil.til
HDifTil[3].HDifTil.briCof1
HDifTil[3].HDifTil.briCof2
HDifTil[3].HDifTil.incAng
HDifTil[3].HDifTil.a
HDifTil[3].HDifTil.b
HDifTil[3].HDifTil.bMin
HDifTil[3].skyCle.skyCle
HDifTil[3].skyCle.k
HDifTil[3].skyCle.tmp1
HDifTil[3].briCoe.skyBri
HDifTil[3].briCoe.F11
HDifTil[3].briCoe.F12
HDifTil[3].briCoe.F13
HDifTil[3].briCoe.F21
HDifTil[3].briCoe.F22
HDifTil[3].briCoe.F23
HDifTil[3].briCoe.d
HDifTil[3].briCoe.a1
HDifTil[3].briCoe.a2
HDifTil[3].briCoe.a3
HDifTil[3].briCoe.a4
HDifTil[3].briCoe.a5
HDifTil[3].briCoe.a6
HDifTil[3].briCoe.a7
HDifTil[3].briCoe.a8
HDifTil[3].briCoe.b2
HDifTil[3].briCoe.b3
HDifTil[3].briCoe.b4
HDifTil[3].briCoe.b5
HDifTil[3].briCoe.b6
HDifTil[3].briCoe.b7
HDifTil[3].relAirMas.relAirMas
HDifTil[3].relAirMas.zenLim
HDifTil[3].relAirMas.zenDeg
HDifTil[3].incAng.lat
HDifTil[3].incAng.azi
HDifTil[3].incAng.til
HDifTil[3].incAng.decAng.decAng
HDifTil[3].incAng.decAng.k1
HDifTil[3].incAng.decAng.k2
HDifTil[3].incAng.solHouAng.solHouAng
HDifTil[3].incAng.incAng.lat
HDifTil[3].incAng.incAng.azi
HDifTil[3].incAng.incAng.til
HDifTil[3].incAng.incAng.dec_c
HDifTil[3].incAng.incAng.dec_s
HDifTil[3].incAng.incAng.sol_c
HDifTil[3].incAng.incAng.sol_s
HDifTil[3].incAng.incAng.lat_c
HDifTil[3].incAng.incAng.lat_s
HDifTil[4].til
HDifTil[4].H
HDifTil[4].rho
HDifTil[4].lat
HDifTil[4].azi
HDifTil[4].outSkyCon
HDifTil[4].outGroCon
HDifTil[4].add.k1
HDifTil[4].add.k2
HDifTil[4].HDifTil.rho
HDifTil[4].HDifTil.til
HDifTil[4].HDifTil.briCof1
HDifTil[4].HDifTil.briCof2
HDifTil[4].HDifTil.incAng
HDifTil[4].HDifTil.a
HDifTil[4].HDifTil.b
HDifTil[4].HDifTil.bMin
HDifTil[4].skyCle.skyCle
HDifTil[4].skyCle.k
HDifTil[4].skyCle.tmp1
HDifTil[4].briCoe.skyBri
HDifTil[4].briCoe.F11
HDifTil[4].briCoe.F12
HDifTil[4].briCoe.F13
HDifTil[4].briCoe.F21
HDifTil[4].briCoe.F22
HDifTil[4].briCoe.F23
HDifTil[4].briCoe.d
HDifTil[4].briCoe.a1
HDifTil[4].briCoe.a2
HDifTil[4].briCoe.a3
HDifTil[4].briCoe.a4
HDifTil[4].briCoe.a5
HDifTil[4].briCoe.a6
HDifTil[4].briCoe.a7
HDifTil[4].briCoe.a8
HDifTil[4].briCoe.b2
HDifTil[4].briCoe.b3
HDifTil[4].briCoe.b4
HDifTil[4].briCoe.b5
HDifTil[4].briCoe.b6
HDifTil[4].briCoe.b7
HDifTil[4].relAirMas.relAirMas
HDifTil[4].relAirMas.zenLim
HDifTil[4].relAirMas.zenDeg
HDifTil[4].incAng.lat
HDifTil[4].incAng.azi
HDifTil[4].incAng.til
HDifTil[4].incAng.decAng.decAng
HDifTil[4].incAng.decAng.k1
HDifTil[4].incAng.decAng.k2
HDifTil[4].incAng.solHouAng.solHouAng
HDifTil[4].incAng.incAng.lat
HDifTil[4].incAng.incAng.azi
HDifTil[4].incAng.incAng.til
HDifTil[4].incAng.incAng.dec_c
HDifTil[4].incAng.incAng.dec_s
HDifTil[4].incAng.incAng.sol_c
HDifTil[4].incAng.incAng.sol_s
HDifTil[4].incAng.incAng.lat_c
HDifTil[4].incAng.incAng.lat_s
HDirTil[1].til
HDirTil[1].lat
HDirTil[1].azi
HDirTil[1].incAng.lat
HDirTil[1].incAng.azi
HDirTil[1].incAng.til
HDirTil[1].incAng.decAng.decAng
HDirTil[1].incAng.decAng.k1
HDirTil[1].incAng.decAng.k2
HDirTil[1].incAng.solHouAng.solHouAng
HDirTil[1].incAng.incAng.lat
HDirTil[1].incAng.incAng.azi
HDirTil[1].incAng.incAng.til
HDirTil[1].incAng.incAng.dec_c
HDirTil[1].incAng.incAng.dec_s
HDirTil[1].incAng.incAng.sol_c
HDirTil[1].incAng.incAng.sol_s
HDirTil[1].incAng.incAng.lat_c
HDirTil[1].incAng.incAng.lat_s
HDirTil[2].til
HDirTil[2].lat
HDirTil[2].azi
HDirTil[2].incAng.lat
HDirTil[2].incAng.azi
HDirTil[2].incAng.til
HDirTil[2].incAng.decAng.decAng
HDirTil[2].incAng.decAng.k1
HDirTil[2].incAng.decAng.k2
HDirTil[2].incAng.solHouAng.solHouAng
HDirTil[2].incAng.incAng.lat
HDirTil[2].incAng.incAng.azi
HDirTil[2].incAng.incAng.til
HDirTil[2].incAng.incAng.dec_c
HDirTil[2].incAng.incAng.dec_s
HDirTil[2].incAng.incAng.sol_c
HDirTil[2].incAng.incAng.sol_s
HDirTil[2].incAng.incAng.lat_c
HDirTil[2].incAng.incAng.lat_s
HDirTil[3].til
HDirTil[3].lat
HDirTil[3].azi
HDirTil[3].incAng.lat
HDirTil[3].incAng.azi
HDirTil[3].incAng.til
HDirTil[3].incAng.decAng.decAng
HDirTil[3].incAng.decAng.k1
HDirTil[3].incAng.decAng.k2
HDirTil[3].incAng.solHouAng.solHouAng
HDirTil[3].incAng.incAng.lat
HDirTil[3].incAng.incAng.azi
HDirTil[3].incAng.incAng.til
HDirTil[3].incAng.incAng.dec_c
HDirTil[3].incAng.incAng.dec_s
HDirTil[3].incAng.incAng.sol_c
HDirTil[3].incAng.incAng.sol_s
HDirTil[3].incAng.incAng.lat_c
HDirTil[3].incAng.incAng.lat_s
HDirTil[4].til
HDirTil[4].lat
HDirTil[4].azi
HDirTil[4].incAng.lat
HDirTil[4].incAng.azi
HDirTil[4].incAng.til
HDirTil[4].incAng.decAng.decAng
HDirTil[4].incAng.decAng.k1
HDirTil[4].incAng.decAng.k2
HDirTil[4].incAng.solHouAng.solHouAng
HDirTil[4].incAng.incAng.lat
HDirTil[4].incAng.incAng.azi
HDirTil[4].incAng.incAng.til
HDirTil[4].incAng.incAng.dec_c
HDirTil[4].incAng.incAng.dec_s
HDirTil[4].incAng.incAng.sol_c
HDirTil[4].incAng.incAng.sol_s
HDirTil[4].incAng.incAng.lat_c
HDirTil[4].incAng.incAng.lat_s
corGDoublePane.n
corGDoublePane.UWin
corGDoublePane.HSkyDifTil[1]
corGDoublePane.HSkyDifTil[2]
corGDoublePane.HSkyDifTil[3]
corGDoublePane.HSkyDifTil[4]
corGDoublePane.HDirTil[1]
corGDoublePane.HDirTil[2]
corGDoublePane.HDirTil[3]
corGDoublePane.HDirTil[4]
corGDoublePane.HGroDifTil[1]
corGDoublePane.HGroDifTil[2]
corGDoublePane.HGroDifTil[3]
corGDoublePane.HGroDifTil[4]
corGDoublePane.inc[1]
corGDoublePane.inc[2]
corGDoublePane.inc[3]
corGDoublePane.inc[4]
corGDoublePane.solarRadWinTrans[1]
corGDoublePane.solarRadWinTrans[2]
corGDoublePane.solarRadWinTrans[3]
corGDoublePane.solarRadWinTrans[4]
corGDoublePane.A0
corGDoublePane.A1
corGDoublePane.A2
corGDoublePane.A3
corGDoublePane.A4
corGDoublePane.A5
corGDoublePane.A6
corGDoublePane.g_dir0
corGDoublePane.Ta_diff
corGDoublePane.Tai_diff
corGDoublePane.Ta1_diff
corGDoublePane.rho_T1_diff
corGDoublePane.rho_11_diff
corGDoublePane.rho_1_diff
corGDoublePane.XN2_diff
corGDoublePane.Ta2_diff
corGDoublePane.a1_diff
corGDoublePane.Q21_diff
corGDoublePane.Q22_diff
corGDoublePane.Qsek2_diff
corGDoublePane.CorG_diff
corGDoublePane.CorG_gr
corGDoublePane.Ta_dir[1]
corGDoublePane.Ta_dir[2]
corGDoublePane.Ta_dir[3]
corGDoublePane.Ta_dir[4]
corGDoublePane.Tai_dir[1]
corGDoublePane.Tai_dir[2]
corGDoublePane.Tai_dir[3]
corGDoublePane.Tai_dir[4]
corGDoublePane.Ta1_dir[1]
corGDoublePane.Ta1_dir[2]
corGDoublePane.Ta1_dir[3]
corGDoublePane.Ta1_dir[4]
corGDoublePane.rho_T1_dir[1]
corGDoublePane.rho_T1_dir[2]
corGDoublePane.rho_T1_dir[3]
corGDoublePane.rho_T1_dir[4]
corGDoublePane.rho_11_dir[1]
corGDoublePane.rho_11_dir[2]
corGDoublePane.rho_11_dir[3]
corGDoublePane.rho_11_dir[4]
corGDoublePane.rho_1_dir[1]
corGDoublePane.rho_1_dir[2]
corGDoublePane.rho_1_dir[3]
corGDoublePane.rho_1_dir[4]
corGDoublePane.XN2_dir[1]
corGDoublePane.XN2_dir[2]
corGDoublePane.XN2_dir[3]
corGDoublePane.XN2_dir[4]
corGDoublePane.Ta2_dir[1]
corGDoublePane.Ta2_dir[2]
corGDoublePane.Ta2_dir[3]
corGDoublePane.Ta2_dir[4]
corGDoublePane.a1_dir[1]
corGDoublePane.a1_dir[2]
corGDoublePane.a1_dir[3]
corGDoublePane.a1_dir[4]
corGDoublePane.Q21_dir[1]
corGDoublePane.Q21_dir[2]
corGDoublePane.Q21_dir[3]
corGDoublePane.Q21_dir[4]
corGDoublePane.Q22_dir[1]
corGDoublePane.Q22_dir[2]
corGDoublePane.Q22_dir[3]
corGDoublePane.Q22_dir[4]
corGDoublePane.Qsek2_dir[1]
corGDoublePane.Qsek2_dir[2]
corGDoublePane.Qsek2_dir[3]
corGDoublePane.Qsek2_dir[4]
corGDoublePane.CorG_dir[1]
corGDoublePane.CorG_dir[2]
corGDoublePane.CorG_dir[3]
corGDoublePane.CorG_dir[4]
building.energyDynamics
building.massDynamics
building.substanceDynamics
building.traceDynamics
building.p_start
building.T_start
building.X_start[1]
building.mSenFac
building.VAir
building.alphaRad
building.nOrientations
building.nPorts
building.AWin[1]
building.AWin[2]
building.AWin[3]
building.AWin[4]
building.ATransparent[1]
building.ATransparent[2]
building.ATransparent[3]
building.ATransparent[4]
building.alphaWin
building.RWin
building.gWin
building.ratioWinConRad
building.indoorPortWin
building.AExt[1]
building.AExt[2]
building.AExt[3]
building.AExt[4]
building.alphaExt
building.nExt
building.RExt[1]
building.RExtRem
building.CExt[1]
building.indoorPortExtWalls
building.ports[1].m_flow
building.ports[1].p
building.ports[1].h_outflow
building.ports[2].m_flow
building.volAir.energyDynamics
building.volAir.massDynamics
building.volAir.substanceDynamics
building.volAir.traceDynamics
building.volAir.p_start
building.volAir.T_start
building.volAir.X_start[1]
building.volAir.mSenFac
building.volAir.initialize_p
building.volAir.prescribedHeatFlowRate
building.volAir.simplify_mWat_flow
building.volAir.use_C_flow
building.volAir.m_flow_nominal
building.volAir.nPorts
building.volAir.m_flow_small
building.volAir.allowFlowReversal
building.volAir.V
building.volAir.heatPort.Q_flow
building.volAir.rho_start
_GlobalScope.building.volAir.X_default[1]
building.volAir.state_default.p
building.volAir.state_default.T
building.volAir.rho_default
building.volAir.state_start.p
building.volAir.state_start.T
building.volAir.useSteadyStateTwoPort
building.ATot
building.ATotExt
building.ATotWin
building.AArray[1]
building.AArray[2]
building.AArray[3]
building.AArray[4]
building.AArray[5]
building.dimension
building.splitFactor[1, 1]
building.splitFactor[2, 1]
building.splitFactor[3, 1]
building.splitFactor[4, 1]
building.splitFactor[5, 1]
building.splitFactorSolRad[1, 1]
building.splitFactorSolRad[1, 2]
building.splitFactorSolRad[1, 3]
building.splitFactorSolRad[1, 4]
building.splitFactorSolRad[2, 1]
building.splitFactorSolRad[2, 2]
building.splitFactorSolRad[2, 3]
building.splitFactorSolRad[2, 4]
building.splitFactorSolRad[3, 1]
building.splitFactorSolRad[3, 2]
building.splitFactorSolRad[3, 3]
building.splitFactorSolRad[3, 4]
building.splitFactorSolRad[4, 1]
building.splitFactorSolRad[4, 2]
building.splitFactorSolRad[4, 3]
building.splitFactorSolRad[4, 4]
building.splitFactorSolRad[5, 1]
building.splitFactorSolRad[5, 2]
building.splitFactorSolRad[5, 3]
building.splitFactorSolRad[5, 4]
building.convExtWall.Q_flow
building.convExtWall.dT
building.convExtWall.solid.T
building.alphaExtWallConst.k
building.convWin.Q_flow
building.convWin.dT
building.convWin.solid.T
building.alphaWinConst.k
building.eRadSol[1].k
building.eRadSol[1].y
building.eRadSol[2].k
building.eRadSol[2].y
building.eRadSol[3].k
building.eRadSol[3].y
building.eRadSol[4].k
building.eRadSol[4].y
building.eConvSol[1].k
building.eConvSol[2].k
building.eConvSol[3].k
building.eConvSol[4].k
building.resExtWallWin.Q_flow
building.resExtWallWin.dT
building.resExtWallWin.G
building.sumSolRad.nin
building.sumSolRad.u[1]
building.sumSolRad.u[2]
building.sumSolRad.u[3]
building.sumSolRad.u[4]
building.sumSolRad.y
building.sumSolRad.k[1]
building.sumSolRad.k[2]
building.sumSolRad.k[3]
building.sumSolRad.k[4]
building.AInt
building.alphaInt
building.nInt
building.RInt[1]
building.CInt[1]
building.indoorPortIntWalls
building.intWallRC.n
building.intWallRC.RInt[1]
building.intWallRC.CInt[1]
building.intWallRC.T_start
building.intWallRC.port_a.T
building.intWallRC.port_a.Q_flow
building.intWallRC.thermCapInt[1].C
building.intWallRC.thermCapInt[1].T
building.intWallRC.thermCapInt[1].der(T)
building.intWallRC.thermResInt[1].dT
building.intWallRC.thermResInt[1].R
building.convIntWall.Q_flow
building.convIntWall.dT
building.alphaIntWall.k
building.resExtWallIntWall.Q_flow
building.resExtWallIntWall.dT
building.resExtWallIntWall.G
building.resIntWallWin.Q_flow
building.resIntWallWin.dT
building.resIntWallWin.G
building.AFloor
building.alphaFloor
building.nFloor
building.RFloor[1]
building.RFloorRem
building.CFloor[1]
building.indoorPortFloor
building.floorRC.n
building.floorRC.RExt[1]
building.floorRC.RExtRem
building.floorRC.CExt[1]
building.floorRC.T_start
building.floorRC.port_a.T
building.floorRC.port_a.Q_flow
building.floorRC.thermCapExt[1].C
building.floorRC.thermCapExt[1].T
building.floorRC.thermCapExt[1].der(T)
building.floorRC.thermCapExt[1].port.Q_flow
building.floorRC.thermResExt[1].dT
building.floorRC.thermResExt[1].R
building.floorRC.thermResExtRem.dT
building.floorRC.thermResExtRem.R
building.convFloor.Q_flow
building.convFloor.dT
building.alphaFloorConst.k
building.resExtWallFloor.Q_flow
building.resExtWallFloor.dT
building.resExtWallFloor.G
building.resIntWallFloor.Q_flow
building.resIntWallFloor.dT
building.resIntWallFloor.G
building.resFloorWin.Q_flow
building.resFloorWin.dT
building.resFloorWin.G
building.ARoof
building.alphaRoof
building.nRoof
building.RRoof[1]
building.RRoofRem
building.CRoof[1]
building.indoorPortRoof
building.roofRC.n
building.roofRC.RExt[1]
building.roofRC.RExtRem
building.roofRC.CExt[1]
building.roofRC.T_start
building.roofRC.port_b.T
building.roofRC.port_b.Q_flow
building.roofRC.thermCapExt[1].C
building.roofRC.thermCapExt[1].T
building.roofRC.thermCapExt[1].der(T)
building.roofRC.thermCapExt[1].port.Q_flow
building.roofRC.thermResExt[1].dT
building.roofRC.thermResExt[1].R
building.roofRC.thermResExtRem.dT
building.roofRC.thermResExtRem.R
building.convRoof.Q_flow
building.convRoof.dT
building.alphaRoofConst.k
building.resIntRoof.Q_flow
building.resIntRoof.dT
building.resIntRoof.G
building.resRoofWin.Q_flow
building.resRoofWin.dT
building.resRoofWin.G
building.resRoofFloor.Q_flow
building.resRoofFloor.dT
building.resRoofFloor.G
building.resExtWallRoof.Q_flow
building.resExtWallRoof.dT
building.resExtWallRoof.G
eqAirTemp.aExt
eqAirTemp.eExt
eqAirTemp.n
eqAirTemp.wfWall[1]
eqAirTemp.wfWall[2]
eqAirTemp.wfWall[3]
eqAirTemp.wfWall[4]
eqAirTemp.wfWin[1]
eqAirTemp.wfWin[2]
eqAirTemp.wfWin[3]
eqAirTemp.wfWin[4]
eqAirTemp.wfGro
eqAirTemp.TGro
eqAirTemp.alphaWallOut
eqAirTemp.alphaRadWall
eqAirTemp.withLongwave
eqAirTemp.TEqWall[1]
eqAirTemp.TEqWall[2]
eqAirTemp.TEqWall[3]
eqAirTemp.TEqWall[4]
eqAirTemp.TEqWin[1]
eqAirTemp.TEqWin[2]
eqAirTemp.TEqWin[3]
eqAirTemp.TEqWin[4]
eqAirTemp.delTEqLW
eqAirTemp.delTEqSW[1]
eqAirTemp.delTEqSW[2]
eqAirTemp.delTEqSW[3]
eqAirTemp.delTEqSW[4]
eqAirTemp.HSol[1]
eqAirTemp.HSol[2]
eqAirTemp.HSol[3]
eqAirTemp.HSol[4]
eqAirTemp.TEqAir
eqAirTemp.aWin
eqAirTemp.eWin
eqAirTemp.alphaWinOut
eqAirTemp.alphaRadWin
eqAirTemp.delTEqLWWin
eqAirTemp.delTEqSWWin[1]
eqAirTemp.delTEqSWWin[2]
eqAirTemp.delTEqSWWin[3]
eqAirTemp.delTEqSWWin[4]
eqAirTemp.TEqAirWin
solRad[1].k1
solRad[1].k2
solRad[2].k1
solRad[2].k2
solRad[3].k1
solRad[3].k2
solRad[4].k1
solRad[4].k2
prescribedTemperature1.port.Q_flow
prescribedTemperature2.port.Q_flow
thermalConductorWin.dT
thermalConductorWin.solid.T
thermalConductorWall.dT
thermalConductorWall.solid.T
const2[1].k
const2[2].k
const2[3].k
const2[4].k
alphaWall.k
alphaWin.k
sourcesRad.T_ref
sourcesRad.alpha
sourcesRad.port.Q_flow
sourcesConv.T_ref
sourcesConv.alpha
sourcesConv.port.Q_flow
prescribedTemperatureFloor.port.Q_flow
TSoil.k
eqAirTempVDI.aExt
eqAirTempVDI.eExt
eqAirTempVDI.n
eqAirTempVDI.wfWall[1]
eqAirTempVDI.wfWin[1]
eqAirTempVDI.wfGro
eqAirTempVDI.TGro
eqAirTempVDI.alphaWallOut
eqAirTempVDI.alphaRadWall
eqAirTempVDI.withLongwave
eqAirTempVDI.TEqWall[1]
eqAirTempVDI.TEqWin[1]
eqAirTempVDI.delTEqLW
eqAirTempVDI.delTEqSW[1]
eqAirTempVDI.HSol[1]
eqAirTempVDI.TEqAir
prescribedTemperatureRoof.port.Q_flow
thermalConductorRoof.dT
thermalConductorRoof.solid.T
alphaRoof.k
const3[1].k
solRadRoof[1].u1
solRadRoof[1].u2
solRadRoof[1].k1
solRadRoof[1].k2
HDirTilRoof[1].til
HDirTilRoof[1].lat
HDirTilRoof[1].azi
HDirTilRoof[1].inc
HDirTilRoof[1].incAng.lat
HDirTilRoof[1].incAng.azi
HDirTilRoof[1].incAng.til
HDirTilRoof[1].incAng.decAng.decAng
HDirTilRoof[1].incAng.decAng.k1
HDirTilRoof[1].incAng.decAng.k2
HDirTilRoof[1].incAng.solHouAng.solHouAng
HDirTilRoof[1].incAng.incAng.lat
HDirTilRoof[1].incAng.incAng.azi
HDirTilRoof[1].incAng.incAng.til
HDirTilRoof[1].incAng.incAng.dec_c
HDirTilRoof[1].incAng.incAng.dec_s
HDirTilRoof[1].incAng.incAng.sol_c
HDirTilRoof[1].incAng.incAng.sol_s
HDirTilRoof[1].incAng.incAng.lat_c
HDirTilRoof[1].incAng.incAng.lat_s
HDifTilRoof[1].til
HDifTilRoof[1].rho
HDifTilRoof[1].lat
HDifTilRoof[1].azi
HDifTilRoof[1].outSkyCon
HDifTilRoof[1].outGroCon
HDifTilRoof[1].add.u1
HDifTilRoof[1].add.u2
HDifTilRoof[1].add.k1
HDifTilRoof[1].add.k2
HDifTilRoof[1].HDifTil.rho
HDifTilRoof[1].HDifTil.til
HDifTilRoof[1].HDifTil.briCof1
HDifTilRoof[1].HDifTil.briCof2
HDifTilRoof[1].HDifTil.incAng
HDifTilRoof[1].HDifTil.a
HDifTilRoof[1].HDifTil.b
HDifTilRoof[1].HDifTil.bMin
HDifTilRoof[1].skyCle.skyCle
HDifTilRoof[1].skyCle.k
HDifTilRoof[1].skyCle.tmp1
HDifTilRoof[1].briCoe.skyBri
HDifTilRoof[1].briCoe.F11
HDifTilRoof[1].briCoe.F12
HDifTilRoof[1].briCoe.F13
HDifTilRoof[1].briCoe.F21
HDifTilRoof[1].briCoe.F22
HDifTilRoof[1].briCoe.F23
HDifTilRoof[1].briCoe.d
HDifTilRoof[1].briCoe.a1
HDifTilRoof[1].briCoe.a2
HDifTilRoof[1].briCoe.a3
HDifTilRoof[1].briCoe.a4
HDifTilRoof[1].briCoe.a5
HDifTilRoof[1].briCoe.a6
HDifTilRoof[1].briCoe.a7
HDifTilRoof[1].briCoe.a8
HDifTilRoof[1].briCoe.b2
HDifTilRoof[1].briCoe.b3
HDifTilRoof[1].briCoe.b4
HDifTilRoof[1].briCoe.b5
HDifTilRoof[1].briCoe.b6
HDifTilRoof[1].briCoe.b7
HDifTilRoof[1].relAirMas.relAirMas
HDifTilRoof[1].relAirMas.zenLim
HDifTilRoof[1].relAirMas.zenDeg
HDifTilRoof[1].incAng.lat
HDifTilRoof[1].incAng.azi
HDifTilRoof[1].incAng.til
HDifTilRoof[1].incAng.decAng.decAng
HDifTilRoof[1].incAng.decAng.k1
HDifTilRoof[1].incAng.decAng.k2
HDifTilRoof[1].incAng.solHouAng.solHouAng
HDifTilRoof[1].incAng.incAng.lat
HDifTilRoof[1].incAng.incAng.azi
HDifTilRoof[1].incAng.incAng.til
HDifTilRoof[1].incAng.incAng.dec_c
HDifTilRoof[1].incAng.incAng.dec_s
HDifTilRoof[1].incAng.incAng.sol_c
HDifTilRoof[1].incAng.incAng.sol_s
HDifTilRoof[1].incAng.incAng.lat_c
HDifTilRoof[1].incAng.incAng.lat_s
intSou.k
ventilationIn.nPorts
ventilationIn.medium.d
ventilationIn.medium.X[1]
ventilationIn.medium.u
ventilationIn.medium.R
ventilationIn.medium.MM
ventilationIn.medium.preferredMediumStates
ventilationIn.medium.standardOrderComponents
ventilationIn.medium.T_degC
ventilationIn.medium.p_bar
ventilationIn.ports[1].h_outflow
ventilationIn.flowDirection
ventilationIn.use_m_flow_in
ventilationIn.use_T_in
ventilationIn.use_X_in
ventilationIn.use_C_in
ventilationIn.m_flow
ventilationIn.T
ventilationIn.X[1]
ventilationIn.X_in_internal[1]
ventilationOut.nPorts
ventilationOut.medium.d
ventilationOut.medium.X[1]
ventilationOut.medium.u
ventilationOut.medium.R
ventilationOut.medium.MM
ventilationOut.medium.preferredMediumStates
ventilationOut.medium.standardOrderComponents
ventilationOut.medium.T_degC
ventilationOut.medium.p_bar
ventilationOut.ports[1].h_outflow
ventilationOut.flowDirection
ventilationOut.use_m_flow_in
ventilationOut.use_T_in
ventilationOut.use_X_in
ventilationOut.use_C_in
ventilationOut.m_flow
ventilationOut.T
ventilationOut.X[1]
ventilationOut.X_in_internal[1]
gain.k
gain1.k
airchange.k
cutOverheating.u2
lessThreshold.threshold
pipe1.vol[1].dynBal.energyDynamics
pipe1.vol[1].dynBal.massDynamics
pipe1.vol[1].dynBal.substanceDynamics
pipe1.vol[1].dynBal.traceDynamics
pipe1.vol[1].dynBal.p_start
pipe1.vol[1].dynBal.T_start
pipe1.vol[1].dynBal.X_start[1]
pipe1.vol[1].dynBal.mSenFac
pipe1.vol[1].dynBal.initialize_p
pipe1.vol[1].dynBal.simplify_mWat_flow
pipe1.vol[1].dynBal.nPorts
pipe1.vol[1].dynBal.use_mWat_flow
pipe1.vol[1].dynBal.use_C_flow
pipe1.vol[1].dynBal.mOut
pipe1.vol[1].dynBal.medium.T
pipe1.vol[1].dynBal.medium.d
pipe1.vol[1].dynBal.medium.X[1]
pipe1.vol[1].dynBal.medium.R
pipe1.vol[1].dynBal.medium.MM
pipe1.vol[1].dynBal.medium.preferredMediumStates
pipe1.vol[1].dynBal.medium.standardOrderComponents
pipe1.vol[1].dynBal.medium.T_degC
pipe1.vol[1].dynBal.medium.p_bar
pipe1.vol[1].dynBal.U
pipe1.vol[1].dynBal.der(U)
pipe1.vol[1].dynBal.m
pipe1.vol[1].dynBal.der(m)
pipe1.vol[1].dynBal.mb_flow
pipe1.vol[1].dynBal.Hb_flow
pipe1.vol[1].dynBal.fluidVolume
pipe1.vol[1].dynBal.CSen
pipe1.vol[1].dynBal.ports_H_flow[1]
pipe1.vol[1].dynBal.ports_H_flow[2]
pipe1.vol[1].dynBal.cp_default
pipe1.vol[1].dynBal.rho_start
pipe1.vol[1].dynBal.computeCSen
_GlobalScope.pipe1.vol.dynBal.X_default[1]
pipe1.vol[1].dynBal.state_default.p
pipe1.vol[1].dynBal.state_default.T
pipe1.vol[1].dynBal.rho_default
pipe1.vol[1].dynBal.hStart
pipe1.vol[1].dynBal.mWat_flow_internal
pipe1.vol[2].dynBal.energyDynamics
pipe1.vol[2].dynBal.massDynamics
pipe1.vol[2].dynBal.substanceDynamics
pipe1.vol[2].dynBal.traceDynamics
pipe1.vol[2].dynBal.p_start
pipe1.vol[2].dynBal.T_start
pipe1.vol[2].dynBal.X_start[1]
pipe1.vol[2].dynBal.mSenFac
pipe1.vol[2].dynBal.initialize_p
pipe1.vol[2].dynBal.simplify_mWat_flow
pipe1.vol[2].dynBal.nPorts
pipe1.vol[2].dynBal.use_mWat_flow
pipe1.vol[2].dynBal.use_C_flow
pipe1.vol[2].dynBal.mOut
pipe1.vol[2].dynBal.medium.T
pipe1.vol[2].dynBal.medium.d
pipe1.vol[2].dynBal.medium.X[1]
pipe1.vol[2].dynBal.medium.R
pipe1.vol[2].dynBal.medium.MM
pipe1.vol[2].dynBal.medium.preferredMediumStates
pipe1.vol[2].dynBal.medium.standardOrderComponents
pipe1.vol[2].dynBal.medium.T_degC
pipe1.vol[2].dynBal.medium.p_bar
pipe1.vol[2].dynBal.U
pipe1.vol[2].dynBal.der(U)
pipe1.vol[2].dynBal.m
pipe1.vol[2].dynBal.der(m)
pipe1.vol[2].dynBal.mb_flow
pipe1.vol[2].dynBal.Hb_flow
pipe1.vol[2].dynBal.fluidVolume
pipe1.vol[2].dynBal.CSen
pipe1.vol[2].dynBal.ports_H_flow[1]
pipe1.vol[2].dynBal.ports_H_flow[2]
pipe1.vol[2].dynBal.cp_default
pipe1.vol[2].dynBal.rho_start
pipe1.vol[2].dynBal.computeCSen
pipe1.vol[2].dynBal.state_default.p
pipe1.vol[2].dynBal.state_default.T
pipe1.vol[2].dynBal.rho_default
pipe1.vol[2].dynBal.hStart
pipe1.vol[2].dynBal.mWat_flow_internal
radiator.vol[1].dynBal.energyDynamics
radiator.vol[1].dynBal.massDynamics
radiator.vol[1].dynBal.substanceDynamics
radiator.vol[1].dynBal.traceDynamics
radiator.vol[1].dynBal.p_start
radiator.vol[1].dynBal.T_start
radiator.vol[1].dynBal.X_start[1]
radiator.vol[1].dynBal.mSenFac
radiator.vol[1].dynBal.initialize_p
radiator.vol[1].dynBal.simplify_mWat_flow
radiator.vol[1].dynBal.nPorts
radiator.vol[1].dynBal.use_mWat_flow
radiator.vol[1].dynBal.use_C_flow
radiator.vol[1].dynBal.mOut
radiator.vol[1].dynBal.medium.T
radiator.vol[1].dynBal.medium.d
radiator.vol[1].dynBal.medium.X[1]
radiator.vol[1].dynBal.medium.R
radiator.vol[1].dynBal.medium.MM
radiator.vol[1].dynBal.medium.preferredMediumStates
radiator.vol[1].dynBal.medium.standardOrderComponents
radiator.vol[1].dynBal.medium.T_degC
radiator.vol[1].dynBal.medium.p_bar
radiator.vol[1].dynBal.U
radiator.vol[1].dynBal.der(U)
radiator.vol[1].dynBal.m
radiator.vol[1].dynBal.der(m)
radiator.vol[1].dynBal.mb_flow
radiator.vol[1].dynBal.Hb_flow
radiator.vol[1].dynBal.fluidVolume
radiator.vol[1].dynBal.CSen
radiator.vol[1].dynBal.ports_H_flow[1]
radiator.vol[1].dynBal.ports_H_flow[2]
radiator.vol[1].dynBal.cp_default
radiator.vol[1].dynBal.rho_start
radiator.vol[1].dynBal.computeCSen
_GlobalScope.radiator.vol.dynBal.X_default[1]
radiator.vol[1].dynBal.state_default.p
radiator.vol[1].dynBal.state_default.T
radiator.vol[1].dynBal.rho_default
radiator.vol[1].dynBal.hStart
radiator.vol[1].dynBal.mWat_flow_internal
radiator.vol[2].dynBal.energyDynamics
radiator.vol[2].dynBal.massDynamics
radiator.vol[2].dynBal.substanceDynamics
radiator.vol[2].dynBal.traceDynamics
radiator.vol[2].dynBal.p_start
radiator.vol[2].dynBal.T_start
radiator.vol[2].dynBal.X_start[1]
radiator.vol[2].dynBal.mSenFac
radiator.vol[2].dynBal.initialize_p
radiator.vol[2].dynBal.simplify_mWat_flow
radiator.vol[2].dynBal.nPorts
radiator.vol[2].dynBal.use_mWat_flow
radiator.vol[2].dynBal.use_C_flow
radiator.vol[2].dynBal.mOut
radiator.vol[2].dynBal.medium.T
radiator.vol[2].dynBal.medium.d
radiator.vol[2].dynBal.medium.X[1]
radiator.vol[2].dynBal.medium.R
radiator.vol[2].dynBal.medium.MM
radiator.vol[2].dynBal.medium.preferredMediumStates
radiator.vol[2].dynBal.medium.standardOrderComponents
radiator.vol[2].dynBal.medium.T_degC
radiator.vol[2].dynBal.medium.p_bar
radiator.vol[2].dynBal.U
radiator.vol[2].dynBal.der(U)
radiator.vol[2].dynBal.m
radiator.vol[2].dynBal.der(m)
radiator.vol[2].dynBal.mb_flow
radiator.vol[2].dynBal.Hb_flow
radiator.vol[2].dynBal.fluidVolume
radiator.vol[2].dynBal.CSen
radiator.vol[2].dynBal.ports_H_flow[1]
radiator.vol[2].dynBal.ports_H_flow[2]
radiator.vol[2].dynBal.cp_default
radiator.vol[2].dynBal.rho_start
radiator.vol[2].dynBal.computeCSen
radiator.vol[2].dynBal.state_default.p
radiator.vol[2].dynBal.state_default.T
radiator.vol[2].dynBal.rho_default
radiator.vol[2].dynBal.hStart
radiator.vol[2].dynBal.mWat_flow_internal
radiator.vol[3].dynBal.energyDynamics
radiator.vol[3].dynBal.massDynamics
radiator.vol[3].dynBal.substanceDynamics
radiator.vol[3].dynBal.traceDynamics
radiator.vol[3].dynBal.p_start
radiator.vol[3].dynBal.T_start
radiator.vol[3].dynBal.X_start[1]
radiator.vol[3].dynBal.mSenFac
radiator.vol[3].dynBal.initialize_p
radiator.vol[3].dynBal.simplify_mWat_flow
radiator.vol[3].dynBal.nPorts
radiator.vol[3].dynBal.use_mWat_flow
radiator.vol[3].dynBal.use_C_flow
radiator.vol[3].dynBal.mOut
radiator.vol[3].dynBal.medium.T
radiator.vol[3].dynBal.medium.d
radiator.vol[3].dynBal.medium.X[1]
radiator.vol[3].dynBal.medium.R
radiator.vol[3].dynBal.medium.MM
radiator.vol[3].dynBal.medium.preferredMediumStates
radiator.vol[3].dynBal.medium.standardOrderComponents
radiator.vol[3].dynBal.medium.T_degC
radiator.vol[3].dynBal.medium.p_bar
radiator.vol[3].dynBal.U
radiator.vol[3].dynBal.der(U)
radiator.vol[3].dynBal.m
radiator.vol[3].dynBal.der(m)
radiator.vol[3].dynBal.mb_flow
radiator.vol[3].dynBal.Hb_flow
radiator.vol[3].dynBal.fluidVolume
radiator.vol[3].dynBal.CSen
radiator.vol[3].dynBal.ports_H_flow[1]
radiator.vol[3].dynBal.ports_H_flow[2]
radiator.vol[3].dynBal.cp_default
radiator.vol[3].dynBal.rho_start
radiator.vol[3].dynBal.computeCSen
radiator.vol[3].dynBal.state_default.p
radiator.vol[3].dynBal.state_default.T
radiator.vol[3].dynBal.rho_default
radiator.vol[3].dynBal.hStart
radiator.vol[3].dynBal.mWat_flow_internal
radiator.vol[4].dynBal.energyDynamics
radiator.vol[4].dynBal.massDynamics
radiator.vol[4].dynBal.substanceDynamics
radiator.vol[4].dynBal.traceDynamics
radiator.vol[4].dynBal.p_start
radiator.vol[4].dynBal.T_start
radiator.vol[4].dynBal.X_start[1]
radiator.vol[4].dynBal.mSenFac
radiator.vol[4].dynBal.initialize_p
radiator.vol[4].dynBal.simplify_mWat_flow
radiator.vol[4].dynBal.nPorts
radiator.vol[4].dynBal.use_mWat_flow
radiator.vol[4].dynBal.use_C_flow
radiator.vol[4].dynBal.mOut
radiator.vol[4].dynBal.medium.T
radiator.vol[4].dynBal.medium.d
radiator.vol[4].dynBal.medium.X[1]
radiator.vol[4].dynBal.medium.R
radiator.vol[4].dynBal.medium.MM
radiator.vol[4].dynBal.medium.preferredMediumStates
radiator.vol[4].dynBal.medium.standardOrderComponents
radiator.vol[4].dynBal.medium.T_degC
radiator.vol[4].dynBal.medium.p_bar
radiator.vol[4].dynBal.U
radiator.vol[4].dynBal.der(U)
radiator.vol[4].dynBal.m
radiator.vol[4].dynBal.der(m)
radiator.vol[4].dynBal.mb_flow
radiator.vol[4].dynBal.Hb_flow
radiator.vol[4].dynBal.fluidVolume
radiator.vol[4].dynBal.CSen
radiator.vol[4].dynBal.ports_H_flow[1]
radiator.vol[4].dynBal.ports_H_flow[2]
radiator.vol[4].dynBal.cp_default
radiator.vol[4].dynBal.rho_start
radiator.vol[4].dynBal.computeCSen
radiator.vol[4].dynBal.state_default.p
radiator.vol[4].dynBal.state_default.T
radiator.vol[4].dynBal.rho_default
radiator.vol[4].dynBal.hStart
radiator.vol[4].dynBal.mWat_flow_internal
radiator.vol[5].dynBal.energyDynamics
radiator.vol[5].dynBal.massDynamics
radiator.vol[5].dynBal.substanceDynamics
radiator.vol[5].dynBal.traceDynamics
radiator.vol[5].dynBal.p_start
radiator.vol[5].dynBal.T_start
radiator.vol[5].dynBal.X_start[1]
radiator.vol[5].dynBal.mSenFac
radiator.vol[5].dynBal.initialize_p
radiator.vol[5].dynBal.simplify_mWat_flow
radiator.vol[5].dynBal.nPorts
radiator.vol[5].dynBal.use_mWat_flow
radiator.vol[5].dynBal.use_C_flow
radiator.vol[5].dynBal.mOut
radiator.vol[5].dynBal.medium.T
radiator.vol[5].dynBal.medium.d
radiator.vol[5].dynBal.medium.X[1]
radiator.vol[5].dynBal.medium.R
radiator.vol[5].dynBal.medium.MM
radiator.vol[5].dynBal.medium.preferredMediumStates
radiator.vol[5].dynBal.medium.standardOrderComponents
radiator.vol[5].dynBal.medium.T_degC
radiator.vol[5].dynBal.medium.p_bar
radiator.vol[5].dynBal.U
radiator.vol[5].dynBal.der(U)
radiator.vol[5].dynBal.m
radiator.vol[5].dynBal.der(m)
radiator.vol[5].dynBal.mb_flow
radiator.vol[5].dynBal.Hb_flow
radiator.vol[5].dynBal.fluidVolume
radiator.vol[5].dynBal.CSen
radiator.vol[5].dynBal.ports_H_flow[1]
radiator.vol[5].dynBal.ports_H_flow[2]
radiator.vol[5].dynBal.cp_default
radiator.vol[5].dynBal.rho_start
radiator.vol[5].dynBal.computeCSen
radiator.vol[5].dynBal.state_default.p
radiator.vol[5].dynBal.state_default.T
radiator.vol[5].dynBal.rho_default
radiator.vol[5].dynBal.hStart
radiator.vol[5].dynBal.mWat_flow_internal
pipe2.vol[1].dynBal.energyDynamics
pipe2.vol[1].dynBal.massDynamics
pipe2.vol[1].dynBal.substanceDynamics
pipe2.vol[1].dynBal.traceDynamics
pipe2.vol[1].dynBal.p_start
pipe2.vol[1].dynBal.T_start
pipe2.vol[1].dynBal.X_start[1]
pipe2.vol[1].dynBal.mSenFac
pipe2.vol[1].dynBal.initialize_p
pipe2.vol[1].dynBal.simplify_mWat_flow
pipe2.vol[1].dynBal.nPorts
pipe2.vol[1].dynBal.use_mWat_flow
pipe2.vol[1].dynBal.use_C_flow
pipe2.vol[1].dynBal.mOut
pipe2.vol[1].dynBal.medium.T
pipe2.vol[1].dynBal.medium.d
pipe2.vol[1].dynBal.medium.X[1]
pipe2.vol[1].dynBal.medium.R
pipe2.vol[1].dynBal.medium.MM
pipe2.vol[1].dynBal.medium.preferredMediumStates
pipe2.vol[1].dynBal.medium.standardOrderComponents
pipe2.vol[1].dynBal.medium.T_degC
pipe2.vol[1].dynBal.medium.p_bar
pipe2.vol[1].dynBal.U
pipe2.vol[1].dynBal.der(U)
pipe2.vol[1].dynBal.m
pipe2.vol[1].dynBal.der(m)
pipe2.vol[1].dynBal.mb_flow
pipe2.vol[1].dynBal.Hb_flow
pipe2.vol[1].dynBal.fluidVolume
pipe2.vol[1].dynBal.CSen
pipe2.vol[1].dynBal.ports_H_flow[1]
pipe2.vol[1].dynBal.ports_H_flow[2]
pipe2.vol[1].dynBal.cp_default
pipe2.vol[1].dynBal.rho_start
pipe2.vol[1].dynBal.computeCSen
_GlobalScope.pipe2.vol.dynBal.X_default[1]
pipe2.vol[1].dynBal.state_default.p
pipe2.vol[1].dynBal.state_default.T
pipe2.vol[1].dynBal.rho_default
pipe2.vol[1].dynBal.hStart
pipe2.vol[1].dynBal.mWat_flow_internal
pipe2.vol[2].dynBal.energyDynamics
pipe2.vol[2].dynBal.massDynamics
pipe2.vol[2].dynBal.substanceDynamics
pipe2.vol[2].dynBal.traceDynamics
pipe2.vol[2].dynBal.p_start
pipe2.vol[2].dynBal.T_start
pipe2.vol[2].dynBal.X_start[1]
pipe2.vol[2].dynBal.mSenFac
pipe2.vol[2].dynBal.initialize_p
pipe2.vol[2].dynBal.simplify_mWat_flow
pipe2.vol[2].dynBal.nPorts
pipe2.vol[2].dynBal.use_mWat_flow
pipe2.vol[2].dynBal.use_C_flow
pipe2.vol[2].dynBal.mOut
pipe2.vol[2].dynBal.medium.T
pipe2.vol[2].dynBal.medium.d
pipe2.vol[2].dynBal.medium.X[1]
pipe2.vol[2].dynBal.medium.R
pipe2.vol[2].dynBal.medium.MM
pipe2.vol[2].dynBal.medium.preferredMediumStates
pipe2.vol[2].dynBal.medium.standardOrderComponents
pipe2.vol[2].dynBal.medium.T_degC
pipe2.vol[2].dynBal.medium.p_bar
pipe2.vol[2].dynBal.U
pipe2.vol[2].dynBal.der(U)
pipe2.vol[2].dynBal.m
pipe2.vol[2].dynBal.der(m)
pipe2.vol[2].dynBal.mb_flow
pipe2.vol[2].dynBal.Hb_flow
pipe2.vol[2].dynBal.fluidVolume
pipe2.vol[2].dynBal.CSen
pipe2.vol[2].dynBal.ports_H_flow[1]
pipe2.vol[2].dynBal.ports_H_flow[2]
pipe2.vol[2].dynBal.cp_default
pipe2.vol[2].dynBal.rho_start
pipe2.vol[2].dynBal.computeCSen
pipe2.vol[2].dynBal.state_default.p
pipe2.vol[2].dynBal.state_default.T
pipe2.vol[2].dynBal.rho_default
pipe2.vol[2].dynBal.hStart
pipe2.vol[2].dynBal.mWat_flow_internal
pipe3.vol[1].dynBal.energyDynamics
pipe3.vol[1].dynBal.massDynamics
pipe3.vol[1].dynBal.substanceDynamics
pipe3.vol[1].dynBal.traceDynamics
pipe3.vol[1].dynBal.p_start
pipe3.vol[1].dynBal.T_start
pipe3.vol[1].dynBal.X_start[1]
pipe3.vol[1].dynBal.mSenFac
pipe3.vol[1].dynBal.initialize_p
pipe3.vol[1].dynBal.simplify_mWat_flow
pipe3.vol[1].dynBal.nPorts
pipe3.vol[1].dynBal.use_mWat_flow
pipe3.vol[1].dynBal.use_C_flow
pipe3.vol[1].dynBal.mOut
pipe3.vol[1].dynBal.medium.T
pipe3.vol[1].dynBal.medium.d
pipe3.vol[1].dynBal.medium.X[1]
pipe3.vol[1].dynBal.medium.R
pipe3.vol[1].dynBal.medium.MM
pipe3.vol[1].dynBal.medium.preferredMediumStates
pipe3.vol[1].dynBal.medium.standardOrderComponents
pipe3.vol[1].dynBal.medium.T_degC
pipe3.vol[1].dynBal.medium.p_bar
pipe3.vol[1].dynBal.U
pipe3.vol[1].dynBal.der(U)
pipe3.vol[1].dynBal.m
pipe3.vol[1].dynBal.der(m)
pipe3.vol[1].dynBal.mb_flow
pipe3.vol[1].dynBal.Hb_flow
pipe3.vol[1].dynBal.fluidVolume
pipe3.vol[1].dynBal.CSen
pipe3.vol[1].dynBal.ports_H_flow[1]
pipe3.vol[1].dynBal.ports_H_flow[2]
pipe3.vol[1].dynBal.cp_default
pipe3.vol[1].dynBal.rho_start
pipe3.vol[1].dynBal.computeCSen
_GlobalScope.pipe3.vol.dynBal.X_default[1]
pipe3.vol[1].dynBal.state_default.p
pipe3.vol[1].dynBal.state_default.T
pipe3.vol[1].dynBal.rho_default
pipe3.vol[1].dynBal.hStart
pipe3.vol[1].dynBal.mWat_flow_internal
pipe3.vol[2].dynBal.energyDynamics
pipe3.vol[2].dynBal.massDynamics
pipe3.vol[2].dynBal.substanceDynamics
pipe3.vol[2].dynBal.traceDynamics
pipe3.vol[2].dynBal.p_start
pipe3.vol[2].dynBal.T_start
pipe3.vol[2].dynBal.X_start[1]
pipe3.vol[2].dynBal.mSenFac
pipe3.vol[2].dynBal.initialize_p
pipe3.vol[2].dynBal.simplify_mWat_flow
pipe3.vol[2].dynBal.nPorts
pipe3.vol[2].dynBal.use_mWat_flow
pipe3.vol[2].dynBal.use_C_flow
pipe3.vol[2].dynBal.mOut
pipe3.vol[2].dynBal.medium.T
pipe3.vol[2].dynBal.medium.d
pipe3.vol[2].dynBal.medium.X[1]
pipe3.vol[2].dynBal.medium.R
pipe3.vol[2].dynBal.medium.MM
pipe3.vol[2].dynBal.medium.preferredMediumStates
pipe3.vol[2].dynBal.medium.standardOrderComponents
pipe3.vol[2].dynBal.medium.T_degC
pipe3.vol[2].dynBal.medium.p_bar
pipe3.vol[2].dynBal.U
pipe3.vol[2].dynBal.der(U)
pipe3.vol[2].dynBal.m
pipe3.vol[2].dynBal.der(m)
pipe3.vol[2].dynBal.mb_flow
pipe3.vol[2].dynBal.Hb_flow
pipe3.vol[2].dynBal.fluidVolume
pipe3.vol[2].dynBal.CSen
pipe3.vol[2].dynBal.ports_H_flow[1]
pipe3.vol[2].dynBal.ports_H_flow[2]
pipe3.vol[2].dynBal.cp_default
pipe3.vol[2].dynBal.rho_start
pipe3.vol[2].dynBal.computeCSen
pipe3.vol[2].dynBal.state_default.p
pipe3.vol[2].dynBal.state_default.T
pipe3.vol[2].dynBal.rho_default
pipe3.vol[2].dynBal.hStart
pipe3.vol[2].dynBal.mWat_flow_internal
pump1.vol.dynBal.energyDynamics
pump1.vol.dynBal.massDynamics
pump1.vol.dynBal.substanceDynamics
pump1.vol.dynBal.traceDynamics
pump1.vol.dynBal.p_start
pump1.vol.dynBal.T_start
pump1.vol.dynBal.X_start[1]
pump1.vol.dynBal.mSenFac
pump1.vol.dynBal.initialize_p
pump1.vol.dynBal.simplify_mWat_flow
pump1.vol.dynBal.nPorts
pump1.vol.dynBal.use_mWat_flow
pump1.vol.dynBal.use_C_flow
pump1.vol.dynBal.mOut
pump1.vol.dynBal.medium.T
pump1.vol.dynBal.medium.d
pump1.vol.dynBal.medium.X[1]
pump1.vol.dynBal.medium.R
pump1.vol.dynBal.medium.MM
pump1.vol.dynBal.medium.preferredMediumStates
pump1.vol.dynBal.medium.standardOrderComponents
pump1.vol.dynBal.medium.T_degC
pump1.vol.dynBal.medium.p_bar
pump1.vol.dynBal.U
pump1.vol.dynBal.der(U)
pump1.vol.dynBal.m
pump1.vol.dynBal.der(m)
pump1.vol.dynBal.mb_flow
pump1.vol.dynBal.Hb_flow
pump1.vol.dynBal.fluidVolume
pump1.vol.dynBal.CSen
pump1.vol.dynBal.ports_H_flow[1]
pump1.vol.dynBal.ports_H_flow[2]
pump1.vol.dynBal.cp_default
pump1.vol.dynBal.rho_start
pump1.vol.dynBal.computeCSen
_GlobalScope.pump1.vol.dynBal.X_default[1]
pump1.vol.dynBal.state_default.p
pump1.vol.dynBal.state_default.T
pump1.vol.dynBal.rho_default
pump1.vol.dynBal.hStart
pump1.vol.dynBal.mWat_flow_internal
storage.vol[1].energyDynamics
storage.vol[1].massDynamics
storage.vol[1].substanceDynamics
storage.vol[1].traceDynamics
storage.vol[1].p_start
storage.vol[1].T_start
storage.vol[1].X_start[1]
storage.vol[1].mSenFac
storage.vol[1].initialize_p
storage.vol[1].prescribedHeatFlowRate
storage.vol[1].simplify_mWat_flow
storage.vol[1].use_C_flow
storage.vol[1].m_flow_nominal
storage.vol[1].nPorts
storage.vol[1].m_flow_small
storage.vol[1].allowFlowReversal
storage.vol[1].V
storage.vol[1].ports[1].m_flow
storage.vol[1].ports[2].m_flow
storage.vol[1].ports[3].m_flow
storage.vol[1].rho_start
_GlobalScope.storage.vol.X_default[1]
storage.vol[1].state_default.p
storage.vol[1].state_default.T
storage.vol[1].rho_default
storage.vol[1].state_start.p
storage.vol[1].state_start.T
storage.vol[1].useSteadyStateTwoPort
storage.vol[2].energyDynamics
storage.vol[2].massDynamics
storage.vol[2].substanceDynamics
storage.vol[2].traceDynamics
storage.vol[2].p_start
storage.vol[2].T_start
storage.vol[2].X_start[1]
storage.vol[2].mSenFac
storage.vol[2].initialize_p
storage.vol[2].prescribedHeatFlowRate
storage.vol[2].simplify_mWat_flow
storage.vol[2].use_C_flow
storage.vol[2].m_flow_nominal
storage.vol[2].nPorts
storage.vol[2].m_flow_small
storage.vol[2].allowFlowReversal
storage.vol[2].V
storage.vol[2].ports[1].m_flow
storage.vol[2].ports[2].m_flow
storage.vol[2].ports[3].m_flow
storage.vol[2].rho_start
storage.vol[2].state_default.p
storage.vol[2].state_default.T
storage.vol[2].rho_default
storage.vol[2].state_start.p
storage.vol[2].state_start.T
storage.vol[2].useSteadyStateTwoPort
storage.vol[3].energyDynamics
storage.vol[3].massDynamics
storage.vol[3].substanceDynamics
storage.vol[3].traceDynamics
storage.vol[3].p_start
storage.vol[3].T_start
storage.vol[3].X_start[1]
storage.vol[3].mSenFac
storage.vol[3].initialize_p
storage.vol[3].prescribedHeatFlowRate
storage.vol[3].simplify_mWat_flow
storage.vol[3].use_C_flow
storage.vol[3].m_flow_nominal
storage.vol[3].nPorts
storage.vol[3].m_flow_small
storage.vol[3].allowFlowReversal
storage.vol[3].V
storage.vol[3].ports[1].m_flow
storage.vol[3].ports[2].m_flow
storage.vol[3].ports[3].m_flow
storage.vol[3].rho_start
storage.vol[3].state_default.p
storage.vol[3].state_default.T
storage.vol[3].rho_default
storage.vol[3].state_start.p
storage.vol[3].state_start.T
storage.vol[3].useSteadyStateTwoPort
storage.vol[4].energyDynamics
storage.vol[4].massDynamics
storage.vol[4].substanceDynamics
storage.vol[4].traceDynamics
storage.vol[4].p_start
storage.vol[4].T_start
storage.vol[4].X_start[1]
storage.vol[4].mSenFac
storage.vol[4].initialize_p
storage.vol[4].prescribedHeatFlowRate
storage.vol[4].simplify_mWat_flow
storage.vol[4].use_C_flow
storage.vol[4].m_flow_nominal
storage.vol[4].nPorts
storage.vol[4].m_flow_small
storage.vol[4].allowFlowReversal
storage.vol[4].V
storage.vol[4].ports[1].m_flow
storage.vol[4].ports[2].m_flow
storage.vol[4].ports[3].m_flow
storage.vol[4].rho_start
storage.vol[4].state_default.p
storage.vol[4].state_default.T
storage.vol[4].rho_default
storage.vol[4].state_start.p
storage.vol[4].state_start.T
storage.vol[4].useSteadyStateTwoPort
storage.vol[5].energyDynamics
storage.vol[5].massDynamics
storage.vol[5].substanceDynamics
storage.vol[5].traceDynamics
storage.vol[5].p_start
storage.vol[5].T_start
storage.vol[5].X_start[1]
storage.vol[5].mSenFac
storage.vol[5].initialize_p
storage.vol[5].prescribedHeatFlowRate
storage.vol[5].simplify_mWat_flow
storage.vol[5].use_C_flow
storage.vol[5].m_flow_nominal
storage.vol[5].nPorts
storage.vol[5].m_flow_small
storage.vol[5].allowFlowReversal
storage.vol[5].V
storage.vol[5].ports[1].m_flow
storage.vol[5].heatPort.Q_flow
storage.vol[5].rho_start
storage.vol[5].state_default.p
storage.vol[5].state_default.T
storage.vol[5].rho_default
storage.vol[5].state_start.p
storage.vol[5].state_start.T
storage.vol[5].useSteadyStateTwoPort
storage.vol[6].energyDynamics
storage.vol[6].massDynamics
storage.vol[6].substanceDynamics
storage.vol[6].traceDynamics
storage.vol[6].p_start
storage.vol[6].T_start
storage.vol[6].X_start[1]
storage.vol[6].mSenFac
storage.vol[6].initialize_p
storage.vol[6].prescribedHeatFlowRate
storage.vol[6].simplify_mWat_flow
storage.vol[6].use_C_flow
storage.vol[6].m_flow_nominal
storage.vol[6].nPorts
storage.vol[6].m_flow_small
storage.vol[6].allowFlowReversal
storage.vol[6].V
storage.vol[6].ports[3].m_flow
storage.vol[6].heatPort.Q_flow
storage.vol[6].rho_start
storage.vol[6].state_default.p
storage.vol[6].state_default.T
storage.vol[6].rho_default
storage.vol[6].state_start.p
storage.vol[6].state_start.T
storage.vol[6].useSteadyStateTwoPort
storage.vol[7].energyDynamics
storage.vol[7].massDynamics
storage.vol[7].substanceDynamics
storage.vol[7].traceDynamics
storage.vol[7].p_start
storage.vol[7].T_start
storage.vol[7].X_start[1]
storage.vol[7].mSenFac
storage.vol[7].initialize_p
storage.vol[7].prescribedHeatFlowRate
storage.vol[7].simplify_mWat_flow
storage.vol[7].use_C_flow
storage.vol[7].m_flow_nominal
storage.vol[7].nPorts
storage.vol[7].m_flow_small
storage.vol[7].allowFlowReversal
storage.vol[7].V
storage.vol[7].ports[3].m_flow
storage.vol[7].heatPort.Q_flow
storage.vol[7].rho_start
storage.vol[7].state_default.p
storage.vol[7].state_default.T
storage.vol[7].rho_default
storage.vol[7].state_start.p
storage.vol[7].state_start.T
storage.vol[7].useSteadyStateTwoPort
storage.vol[8].energyDynamics
storage.vol[8].massDynamics
storage.vol[8].substanceDynamics
storage.vol[8].traceDynamics
storage.vol[8].p_start
storage.vol[8].T_start
storage.vol[8].X_start[1]
storage.vol[8].mSenFac
storage.vol[8].initialize_p
storage.vol[8].prescribedHeatFlowRate
storage.vol[8].simplify_mWat_flow
storage.vol[8].use_C_flow
storage.vol[8].m_flow_nominal
storage.vol[8].nPorts
storage.vol[8].m_flow_small
storage.vol[8].allowFlowReversal
storage.vol[8].V
storage.vol[8].ports[3].m_flow
storage.vol[8].heatPort.Q_flow
storage.vol[8].rho_start
storage.vol[8].state_default.p
storage.vol[8].state_default.T
storage.vol[8].rho_default
storage.vol[8].state_start.p
storage.vol[8].state_start.T
storage.vol[8].useSteadyStateTwoPort
storage.port_a[1].m_flow
storage.port_a[2].m_flow
storage.port_a[3].m_flow
storage.port_a[4].m_flow
storage.port_a[6].m_flow
storage.port_a[7].m_flow
storage.port_a[8].m_flow
storage.heatPort.Q_flow
storage.thermalCollector.m
storage.thermalCollector.port_b.Q_flow
storage.vol_HX_1.dynBal.energyDynamics
storage.vol_HX_1.dynBal.massDynamics
storage.vol_HX_1.dynBal.substanceDynamics
storage.vol_HX_1.dynBal.traceDynamics
storage.vol_HX_1.dynBal.p_start
storage.vol_HX_1.dynBal.T_start
storage.vol_HX_1.dynBal.X_start[1]
storage.vol_HX_1.dynBal.mSenFac
storage.vol_HX_1.dynBal.initialize_p
storage.vol_HX_1.dynBal.simplify_mWat_flow
storage.vol_HX_1.dynBal.nPorts
storage.vol_HX_1.dynBal.use_mWat_flow
storage.vol_HX_1.dynBal.use_C_flow
storage.vol_HX_1.dynBal.mOut
storage.vol_HX_1.dynBal.medium.T
storage.vol_HX_1.dynBal.medium.d
storage.vol_HX_1.dynBal.medium.X[1]
storage.vol_HX_1.dynBal.medium.R
storage.vol_HX_1.dynBal.medium.MM
storage.vol_HX_1.dynBal.medium.preferredMediumStates
storage.vol_HX_1.dynBal.medium.standardOrderComponents
storage.vol_HX_1.dynBal.medium.T_degC
storage.vol_HX_1.dynBal.medium.p_bar
storage.vol_HX_1.dynBal.U
storage.vol_HX_1.dynBal.der(U)
storage.vol_HX_1.dynBal.m
storage.vol_HX_1.dynBal.der(m)
storage.vol_HX_1.dynBal.mb_flow
storage.vol_HX_1.dynBal.Hb_flow
storage.vol_HX_1.dynBal.fluidVolume
storage.vol_HX_1.dynBal.CSen
storage.vol_HX_1.dynBal.ports_H_flow[1]
storage.vol_HX_1.dynBal.ports_H_flow[2]
storage.vol_HX_1.dynBal.cp_default
storage.vol_HX_1.dynBal.rho_start
storage.vol_HX_1.dynBal.computeCSen
_GlobalScope.storage.vol_HX_1.dynBal.X_default[1]
storage.vol_HX_1.dynBal.state_default.p
storage.vol_HX_1.dynBal.state_default.T
storage.vol_HX_1.dynBal.rho_default
storage.vol_HX_1.dynBal.hStart
storage.vol_HX_1.dynBal.mWat_flow_internal
storage.vol_bot.dynBal.energyDynamics
storage.vol_bot.dynBal.massDynamics
storage.vol_bot.dynBal.substanceDynamics
storage.vol_bot.dynBal.traceDynamics
storage.vol_bot.dynBal.p_start
storage.vol_bot.dynBal.T_start
storage.vol_bot.dynBal.X_start[1]
storage.vol_bot.dynBal.mSenFac
storage.vol_bot.dynBal.initialize_p
storage.vol_bot.dynBal.simplify_mWat_flow
storage.vol_bot.dynBal.nPorts
storage.vol_bot.dynBal.use_mWat_flow
storage.vol_bot.dynBal.use_C_flow
storage.vol_bot.dynBal.ports[1].m_flow
storage.vol_bot.dynBal.ports[2].m_flow
storage.vol_bot.dynBal.ports[3].m_flow
storage.vol_bot.dynBal.medium.T
storage.vol_bot.dynBal.medium.d
storage.vol_bot.dynBal.medium.X[1]
storage.vol_bot.dynBal.medium.R
storage.vol_bot.dynBal.medium.MM
storage.vol_bot.dynBal.medium.preferredMediumStates
storage.vol_bot.dynBal.medium.standardOrderComponents
storage.vol_bot.dynBal.medium.T_degC
storage.vol_bot.dynBal.medium.p_bar
storage.vol_bot.dynBal.U
storage.vol_bot.dynBal.der(U)
storage.vol_bot.dynBal.m
storage.vol_bot.dynBal.der(m)
storage.vol_bot.dynBal.mb_flow
storage.vol_bot.dynBal.Hb_flow
storage.vol_bot.dynBal.fluidVolume
storage.vol_bot.dynBal.CSen
storage.vol_bot.dynBal.ports_H_flow[1]
storage.vol_bot.dynBal.ports_H_flow[2]
storage.vol_bot.dynBal.ports_H_flow[3]
storage.vol_bot.dynBal.cp_default
storage.vol_bot.dynBal.rho_start
storage.vol_bot.dynBal.computeCSen
_GlobalScope.storage.vol_bot.dynBal.X_default[1]
storage.vol_bot.dynBal.state_default.p
storage.vol_bot.dynBal.state_default.T
storage.vol_bot.dynBal.rho_default
storage.vol_bot.dynBal.hStart
storage.vol_bot.dynBal.mWat_flow_internal
storage.vol_top.dynBal.energyDynamics
storage.vol_top.dynBal.massDynamics
storage.vol_top.dynBal.substanceDynamics
storage.vol_top.dynBal.traceDynamics
storage.vol_top.dynBal.p_start
storage.vol_top.dynBal.T_start
storage.vol_top.dynBal.X_start[1]
storage.vol_top.dynBal.mSenFac
storage.vol_top.dynBal.initialize_p
storage.vol_top.dynBal.simplify_mWat_flow
storage.vol_top.dynBal.nPorts
storage.vol_top.dynBal.use_mWat_flow
storage.vol_top.dynBal.use_C_flow
storage.vol_top.dynBal.ports[2].m_flow
storage.vol_top.dynBal.medium.T
storage.vol_top.dynBal.medium.d
storage.vol_top.dynBal.medium.X[1]
storage.vol_top.dynBal.medium.R
storage.vol_top.dynBal.medium.MM
storage.vol_top.dynBal.medium.preferredMediumStates
storage.vol_top.dynBal.medium.standardOrderComponents
storage.vol_top.dynBal.medium.T_degC
storage.vol_top.dynBal.medium.p_bar
storage.vol_top.dynBal.U
storage.vol_top.dynBal.der(U)
storage.vol_top.dynBal.m
storage.vol_top.dynBal.der(m)
storage.vol_top.dynBal.mb_flow
storage.vol_top.dynBal.Hb_flow
storage.vol_top.dynBal.fluidVolume
storage.vol_top.dynBal.CSen
storage.vol_top.dynBal.ports_H_flow[1]
storage.vol_top.dynBal.ports_H_flow[2]
storage.vol_top.dynBal.ports_H_flow[3]
storage.vol_top.dynBal.cp_default
storage.vol_top.dynBal.rho_start
storage.vol_top.dynBal.computeCSen
_GlobalScope.storage.vol_top.dynBal.X_default[1]
storage.vol_top.dynBal.state_default.p
storage.vol_top.dynBal.state_default.T
storage.vol_top.dynBal.rho_default
storage.vol_top.dynBal.hStart
storage.vol_top.dynBal.mWat_flow_internal
collector.vol[1].energyDynamics
collector.vol[1].massDynamics
collector.vol[1].substanceDynamics
collector.vol[1].traceDynamics
collector.vol[1].p_start
collector.vol[1].T_start
collector.vol[1].X_start[1]
collector.vol[1].mSenFac
collector.vol[1].initialize_p
collector.vol[1].prescribedHeatFlowRate
collector.vol[1].simplify_mWat_flow
collector.vol[1].use_C_flow
collector.vol[1].m_flow_nominal
collector.vol[1].nPorts
collector.vol[1].m_flow_small
collector.vol[1].allowFlowReversal
collector.vol[1].V
collector.vol[1].heatPort.Q_flow
collector.vol[1].m
collector.vol[1].rho_start
_GlobalScope.collector.vol.X_default[1]
collector.vol[1].state_default.p
collector.vol[1].state_default.T
collector.vol[1].rho_default
collector.vol[1].state_start.p
collector.vol[1].state_start.T
collector.vol[1].useSteadyStateTwoPort
collector.vol[2].energyDynamics
collector.vol[2].massDynamics
collector.vol[2].substanceDynamics
collector.vol[2].traceDynamics
collector.vol[2].p_start
collector.vol[2].T_start
collector.vol[2].X_start[1]
collector.vol[2].mSenFac
collector.vol[2].initialize_p
collector.vol[2].prescribedHeatFlowRate
collector.vol[2].simplify_mWat_flow
collector.vol[2].use_C_flow
collector.vol[2].m_flow_nominal
collector.vol[2].nPorts
collector.vol[2].m_flow_small
collector.vol[2].allowFlowReversal
collector.vol[2].V
collector.vol[2].ports[1].h_outflow
collector.vol[2].ports[1].der(h_outflow)
collector.vol[2].heatPort.Q_flow
collector.vol[2].m
collector.vol[2].rho_start
collector.vol[2].state_default.p
collector.vol[2].state_default.T
collector.vol[2].rho_default
collector.vol[2].state_start.p
collector.vol[2].state_start.T
collector.vol[2].useSteadyStateTwoPort
collector.vol[3].energyDynamics
collector.vol[3].massDynamics
collector.vol[3].substanceDynamics
collector.vol[3].traceDynamics
collector.vol[3].p_start
collector.vol[3].T_start
collector.vol[3].X_start[1]
collector.vol[3].mSenFac
collector.vol[3].initialize_p
collector.vol[3].prescribedHeatFlowRate
collector.vol[3].simplify_mWat_flow
collector.vol[3].use_C_flow
collector.vol[3].m_flow_nominal
collector.vol[3].nPorts
collector.vol[3].m_flow_small
collector.vol[3].allowFlowReversal
collector.vol[3].V
collector.vol[3].ports[1].h_outflow
collector.vol[3].ports[1].der(h_outflow)
collector.vol[3].heatPort.Q_flow
collector.vol[3].m
collector.vol[3].rho_start
collector.vol[3].state_default.p
collector.vol[3].state_default.T
collector.vol[3].rho_default
collector.vol[3].state_start.p
collector.vol[3].state_start.T
collector.vol[3].useSteadyStateTwoPort
collector.vol[4].energyDynamics
collector.vol[4].massDynamics
collector.vol[4].substanceDynamics
collector.vol[4].traceDynamics
collector.vol[4].p_start
collector.vol[4].T_start
collector.vol[4].X_start[1]
collector.vol[4].mSenFac
collector.vol[4].initialize_p
collector.vol[4].prescribedHeatFlowRate
collector.vol[4].simplify_mWat_flow
collector.vol[4].use_C_flow
collector.vol[4].m_flow_nominal
collector.vol[4].nPorts
collector.vol[4].m_flow_small
collector.vol[4].allowFlowReversal
collector.vol[4].V
collector.vol[4].ports[1].h_outflow
collector.vol[4].ports[1].der(h_outflow)
collector.vol[4].heatPort.Q_flow
collector.vol[4].m
collector.vol[4].rho_start
collector.vol[4].state_default.p
collector.vol[4].state_default.T
collector.vol[4].rho_default
collector.vol[4].state_start.p
collector.vol[4].state_start.T
collector.vol[4].useSteadyStateTwoPort
collector.vol[5].energyDynamics
collector.vol[5].massDynamics
collector.vol[5].substanceDynamics
collector.vol[5].traceDynamics
collector.vol[5].p_start
collector.vol[5].T_start
collector.vol[5].X_start[1]
collector.vol[5].mSenFac
collector.vol[5].initialize_p
collector.vol[5].prescribedHeatFlowRate
collector.vol[5].simplify_mWat_flow
collector.vol[5].use_C_flow
collector.vol[5].m_flow_nominal
collector.vol[5].nPorts
collector.vol[5].m_flow_small
collector.vol[5].allowFlowReversal
collector.vol[5].V
collector.vol[5].ports[1].h_outflow
collector.vol[5].ports[1].der(h_outflow)
collector.vol[5].heatPort.Q_flow
collector.vol[5].m
collector.vol[5].rho_start
collector.vol[5].state_default.p
collector.vol[5].state_default.T
collector.vol[5].rho_default
collector.vol[5].state_start.p
collector.vol[5].state_start.T
collector.vol[5].useSteadyStateTwoPort
collector.vol[6].energyDynamics
collector.vol[6].massDynamics
collector.vol[6].substanceDynamics
collector.vol[6].traceDynamics
collector.vol[6].p_start
collector.vol[6].T_start
collector.vol[6].X_start[1]
collector.vol[6].mSenFac
collector.vol[6].initialize_p
collector.vol[6].prescribedHeatFlowRate
collector.vol[6].simplify_mWat_flow
collector.vol[6].use_C_flow
collector.vol[6].m_flow_nominal
collector.vol[6].nPorts
collector.vol[6].m_flow_small
collector.vol[6].allowFlowReversal
collector.vol[6].V
collector.vol[6].ports[1].h_outflow
collector.vol[6].ports[1].der(h_outflow)
collector.vol[6].heatPort.Q_flow
collector.vol[6].m
collector.vol[6].rho_start
collector.vol[6].state_default.p
collector.vol[6].state_default.T
collector.vol[6].rho_default
collector.vol[6].state_start.p
collector.vol[6].state_start.T
collector.vol[6].useSteadyStateTwoPort
collector.vol[7].energyDynamics
collector.vol[7].massDynamics
collector.vol[7].substanceDynamics
collector.vol[7].traceDynamics
collector.vol[7].p_start
collector.vol[7].T_start
collector.vol[7].X_start[1]
collector.vol[7].mSenFac
collector.vol[7].initialize_p
collector.vol[7].prescribedHeatFlowRate
collector.vol[7].simplify_mWat_flow
collector.vol[7].use_C_flow
collector.vol[7].m_flow_nominal
collector.vol[7].nPorts
collector.vol[7].m_flow_small
collector.vol[7].allowFlowReversal
collector.vol[7].V
collector.vol[7].ports[1].h_outflow
collector.vol[7].ports[1].der(h_outflow)
collector.vol[7].heatPort.Q_flow
collector.vol[7].m
collector.vol[7].rho_start
collector.vol[7].state_default.p
collector.vol[7].state_default.T
collector.vol[7].rho_default
collector.vol[7].state_start.p
collector.vol[7].state_start.T
collector.vol[7].useSteadyStateTwoPort
collector.vol[8].energyDynamics
collector.vol[8].massDynamics
collector.vol[8].substanceDynamics
collector.vol[8].traceDynamics
collector.vol[8].p_start
collector.vol[8].T_start
collector.vol[8].X_start[1]
collector.vol[8].mSenFac
collector.vol[8].initialize_p
collector.vol[8].prescribedHeatFlowRate
collector.vol[8].simplify_mWat_flow
collector.vol[8].use_C_flow
collector.vol[8].m_flow_nominal
collector.vol[8].nPorts
collector.vol[8].m_flow_small
collector.vol[8].allowFlowReversal
collector.vol[8].V
collector.vol[8].ports[1].h_outflow
collector.vol[8].ports[1].der(h_outflow)
collector.vol[8].heatPort.Q_flow
collector.vol[8].m
collector.vol[8].rho_start
collector.vol[8].state_default.p
collector.vol[8].state_default.T
collector.vol[8].rho_default
collector.vol[8].state_start.p
collector.vol[8].state_start.T
collector.vol[8].useSteadyStateTwoPort
collector.vol[9].energyDynamics
collector.vol[9].massDynamics
collector.vol[9].substanceDynamics
collector.vol[9].traceDynamics
collector.vol[9].p_start
collector.vol[9].T_start
collector.vol[9].X_start[1]
collector.vol[9].mSenFac
collector.vol[9].initialize_p
collector.vol[9].prescribedHeatFlowRate
collector.vol[9].simplify_mWat_flow
collector.vol[9].use_C_flow
collector.vol[9].m_flow_nominal
collector.vol[9].nPorts
collector.vol[9].m_flow_small
collector.vol[9].allowFlowReversal
collector.vol[9].V
collector.vol[9].ports[1].h_outflow
collector.vol[9].ports[1].der(h_outflow)
collector.vol[9].heatPort.Q_flow
collector.vol[9].m
collector.vol[9].rho_start
collector.vol[9].state_default.p
collector.vol[9].state_default.T
collector.vol[9].rho_default
collector.vol[9].state_start.p
collector.vol[9].state_start.T
collector.vol[9].useSteadyStateTwoPort
collector.vol[10].energyDynamics
collector.vol[10].massDynamics
collector.vol[10].substanceDynamics
collector.vol[10].traceDynamics
collector.vol[10].p_start
collector.vol[10].T_start
collector.vol[10].X_start[1]
collector.vol[10].mSenFac
collector.vol[10].initialize_p
collector.vol[10].prescribedHeatFlowRate
collector.vol[10].simplify_mWat_flow
collector.vol[10].use_C_flow
collector.vol[10].m_flow_nominal
collector.vol[10].nPorts
collector.vol[10].m_flow_small
collector.vol[10].allowFlowReversal
collector.vol[10].V
collector.vol[10].heatPort.Q_flow
collector.vol[10].m
collector.vol[10].rho_start
collector.vol[10].state_default.p
collector.vol[10].state_default.T
collector.vol[10].rho_default
collector.vol[10].state_start.p
collector.vol[10].state_start.T
collector.vol[10].useSteadyStateTwoPort
collector.cp_solid[1].C
collector.cp_solid[1].T
collector.cp_solid[1].der(T)
collector.cp_solid[1].port.Q_flow
collector.cp_solid[2].C
collector.cp_solid[2].T
collector.cp_solid[2].der(T)
collector.cp_solid[2].port.Q_flow
collector.cp_solid[3].C
collector.cp_solid[3].T
collector.cp_solid[3].der(T)
collector.cp_solid[3].port.Q_flow
collector.cp_solid[4].C
collector.cp_solid[4].T
collector.cp_solid[4].der(T)
collector.cp_solid[4].port.Q_flow
collector.cp_solid[5].C
collector.cp_solid[5].T
collector.cp_solid[5].der(T)
collector.cp_solid[5].port.Q_flow
collector.cp_solid[6].C
collector.cp_solid[6].T
collector.cp_solid[6].der(T)
collector.cp_solid[6].port.Q_flow
collector.cp_solid[7].C
collector.cp_solid[7].T
collector.cp_solid[7].der(T)
collector.cp_solid[7].port.Q_flow
collector.cp_solid[8].C
collector.cp_solid[8].T
collector.cp_solid[8].der(T)
collector.cp_solid[8].port.Q_flow
collector.cp_solid[9].C
collector.cp_solid[9].T
collector.cp_solid[9].der(T)
collector.cp_solid[9].port.Q_flow
collector.cp_solid[10].C
collector.cp_solid[10].T
collector.cp_solid[10].der(T)
collector.cp_solid[10].port.Q_flow
pump2.vol.dynBal.energyDynamics
pump2.vol.dynBal.massDynamics
pump2.vol.dynBal.substanceDynamics
pump2.vol.dynBal.traceDynamics
pump2.vol.dynBal.p_start
pump2.vol.dynBal.T_start
pump2.vol.dynBal.X_start[1]
pump2.vol.dynBal.mSenFac
pump2.vol.dynBal.initialize_p
pump2.vol.dynBal.simplify_mWat_flow
pump2.vol.dynBal.nPorts
pump2.vol.dynBal.use_mWat_flow
pump2.vol.dynBal.use_C_flow
pump2.vol.dynBal.medium.T
pump2.vol.dynBal.medium.d
pump2.vol.dynBal.medium.X[1]
pump2.vol.dynBal.medium.R
pump2.vol.dynBal.medium.MM
pump2.vol.dynBal.medium.preferredMediumStates
pump2.vol.dynBal.medium.standardOrderComponents
pump2.vol.dynBal.medium.T_degC
pump2.vol.dynBal.medium.p_bar
pump2.vol.dynBal.U
pump2.vol.dynBal.der(U)
pump2.vol.dynBal.m
pump2.vol.dynBal.der(m)
pump2.vol.dynBal.mb_flow
pump2.vol.dynBal.Hb_flow
pump2.vol.dynBal.fluidVolume
pump2.vol.dynBal.CSen
pump2.vol.dynBal.ports_H_flow[1]
pump2.vol.dynBal.ports_H_flow[2]
pump2.vol.dynBal.cp_default
pump2.vol.dynBal.rho_start
pump2.vol.dynBal.computeCSen
_GlobalScope.pump2.vol.dynBal.X_default[1]
pump2.vol.dynBal.state_default.p
pump2.vol.dynBal.state_default.T
pump2.vol.dynBal.rho_default
pump2.vol.dynBal.hStart
pump2.vol.dynBal.mWat_flow_internal
pipe4.vol[1].dynBal.energyDynamics
pipe4.vol[1].dynBal.massDynamics
pipe4.vol[1].dynBal.substanceDynamics
pipe4.vol[1].dynBal.traceDynamics
pipe4.vol[1].dynBal.p_start
pipe4.vol[1].dynBal.T_start
pipe4.vol[1].dynBal.X_start[1]
pipe4.vol[1].dynBal.mSenFac
pipe4.vol[1].dynBal.initialize_p
pipe4.vol[1].dynBal.simplify_mWat_flow
pipe4.vol[1].dynBal.nPorts
pipe4.vol[1].dynBal.use_mWat_flow
pipe4.vol[1].dynBal.use_C_flow
pipe4.vol[1].dynBal.mOut
pipe4.vol[1].dynBal.medium.T
pipe4.vol[1].dynBal.medium.d
pipe4.vol[1].dynBal.medium.X[1]
pipe4.vol[1].dynBal.medium.R
pipe4.vol[1].dynBal.medium.MM
pipe4.vol[1].dynBal.medium.preferredMediumStates
pipe4.vol[1].dynBal.medium.standardOrderComponents
pipe4.vol[1].dynBal.medium.T_degC
pipe4.vol[1].dynBal.medium.p_bar
pipe4.vol[1].dynBal.U
pipe4.vol[1].dynBal.der(U)
pipe4.vol[1].dynBal.m
pipe4.vol[1].dynBal.der(m)
pipe4.vol[1].dynBal.mb_flow
pipe4.vol[1].dynBal.Hb_flow
pipe4.vol[1].dynBal.fluidVolume
pipe4.vol[1].dynBal.CSen
pipe4.vol[1].dynBal.ports_H_flow[1]
pipe4.vol[1].dynBal.ports_H_flow[2]
pipe4.vol[1].dynBal.cp_default
pipe4.vol[1].dynBal.rho_start
pipe4.vol[1].dynBal.computeCSen
_GlobalScope.pipe4.vol.dynBal.X_default[1]
pipe4.vol[1].dynBal.state_default.p
pipe4.vol[1].dynBal.state_default.T
pipe4.vol[1].dynBal.rho_default
pipe4.vol[1].dynBal.hStart
pipe4.vol[1].dynBal.mWat_flow_internal
pipe4.vol[2].dynBal.energyDynamics
pipe4.vol[2].dynBal.massDynamics
pipe4.vol[2].dynBal.substanceDynamics
pipe4.vol[2].dynBal.traceDynamics
pipe4.vol[2].dynBal.p_start
pipe4.vol[2].dynBal.T_start
pipe4.vol[2].dynBal.X_start[1]
pipe4.vol[2].dynBal.mSenFac
pipe4.vol[2].dynBal.initialize_p
pipe4.vol[2].dynBal.simplify_mWat_flow
pipe4.vol[2].dynBal.nPorts
pipe4.vol[2].dynBal.use_mWat_flow
pipe4.vol[2].dynBal.use_C_flow
pipe4.vol[2].dynBal.mOut
pipe4.vol[2].dynBal.medium.T
pipe4.vol[2].dynBal.medium.d
pipe4.vol[2].dynBal.medium.X[1]
pipe4.vol[2].dynBal.medium.R
pipe4.vol[2].dynBal.medium.MM
pipe4.vol[2].dynBal.medium.preferredMediumStates
pipe4.vol[2].dynBal.medium.standardOrderComponents
pipe4.vol[2].dynBal.medium.T_degC
pipe4.vol[2].dynBal.medium.p_bar
pipe4.vol[2].dynBal.U
pipe4.vol[2].dynBal.der(U)
pipe4.vol[2].dynBal.m
pipe4.vol[2].dynBal.der(m)
pipe4.vol[2].dynBal.mb_flow
pipe4.vol[2].dynBal.Hb_flow
pipe4.vol[2].dynBal.fluidVolume
pipe4.vol[2].dynBal.CSen
pipe4.vol[2].dynBal.ports_H_flow[1]
pipe4.vol[2].dynBal.ports_H_flow[2]
pipe4.vol[2].dynBal.cp_default
pipe4.vol[2].dynBal.rho_start
pipe4.vol[2].dynBal.computeCSen
pipe4.vol[2].dynBal.state_default.p
pipe4.vol[2].dynBal.state_default.T
pipe4.vol[2].dynBal.rho_default
pipe4.vol[2].dynBal.hStart
pipe4.vol[2].dynBal.mWat_flow_internal
pipe5.vol[1].dynBal.energyDynamics
pipe5.vol[1].dynBal.massDynamics
pipe5.vol[1].dynBal.substanceDynamics
pipe5.vol[1].dynBal.traceDynamics
pipe5.vol[1].dynBal.p_start
pipe5.vol[1].dynBal.T_start
pipe5.vol[1].dynBal.X_start[1]
pipe5.vol[1].dynBal.mSenFac
pipe5.vol[1].dynBal.initialize_p
pipe5.vol[1].dynBal.simplify_mWat_flow
pipe5.vol[1].dynBal.nPorts
pipe5.vol[1].dynBal.use_mWat_flow
pipe5.vol[1].dynBal.use_C_flow
pipe5.vol[1].dynBal.mOut
pipe5.vol[1].dynBal.medium.T
pipe5.vol[1].dynBal.medium.d
pipe5.vol[1].dynBal.medium.X[1]
pipe5.vol[1].dynBal.medium.R
pipe5.vol[1].dynBal.medium.MM
pipe5.vol[1].dynBal.medium.preferredMediumStates
pipe5.vol[1].dynBal.medium.standardOrderComponents
pipe5.vol[1].dynBal.medium.T_degC
pipe5.vol[1].dynBal.medium.p_bar
pipe5.vol[1].dynBal.U
pipe5.vol[1].dynBal.der(U)
pipe5.vol[1].dynBal.m
pipe5.vol[1].dynBal.der(m)
pipe5.vol[1].dynBal.mb_flow
pipe5.vol[1].dynBal.Hb_flow
pipe5.vol[1].dynBal.fluidVolume
pipe5.vol[1].dynBal.CSen
pipe5.vol[1].dynBal.ports_H_flow[1]
pipe5.vol[1].dynBal.ports_H_flow[2]
pipe5.vol[1].dynBal.cp_default
pipe5.vol[1].dynBal.rho_start
pipe5.vol[1].dynBal.computeCSen
_GlobalScope.pipe5.vol.dynBal.X_default[1]
pipe5.vol[1].dynBal.state_default.p
pipe5.vol[1].dynBal.state_default.T
pipe5.vol[1].dynBal.rho_default
pipe5.vol[1].dynBal.hStart
pipe5.vol[1].dynBal.mWat_flow_internal
pipe5.vol[2].dynBal.energyDynamics
pipe5.vol[2].dynBal.massDynamics
pipe5.vol[2].dynBal.substanceDynamics
pipe5.vol[2].dynBal.traceDynamics
pipe5.vol[2].dynBal.p_start
pipe5.vol[2].dynBal.T_start
pipe5.vol[2].dynBal.X_start[1]
pipe5.vol[2].dynBal.mSenFac
pipe5.vol[2].dynBal.initialize_p
pipe5.vol[2].dynBal.simplify_mWat_flow
pipe5.vol[2].dynBal.nPorts
pipe5.vol[2].dynBal.use_mWat_flow
pipe5.vol[2].dynBal.use_C_flow
pipe5.vol[2].dynBal.mOut
pipe5.vol[2].dynBal.medium.T
pipe5.vol[2].dynBal.medium.d
pipe5.vol[2].dynBal.medium.X[1]
pipe5.vol[2].dynBal.medium.R
pipe5.vol[2].dynBal.medium.MM
pipe5.vol[2].dynBal.medium.preferredMediumStates
pipe5.vol[2].dynBal.medium.standardOrderComponents
pipe5.vol[2].dynBal.medium.T_degC
pipe5.vol[2].dynBal.medium.p_bar
pipe5.vol[2].dynBal.U
pipe5.vol[2].dynBal.der(U)
pipe5.vol[2].dynBal.m
pipe5.vol[2].dynBal.der(m)
pipe5.vol[2].dynBal.mb_flow
pipe5.vol[2].dynBal.Hb_flow
pipe5.vol[2].dynBal.fluidVolume
pipe5.vol[2].dynBal.CSen
pipe5.vol[2].dynBal.ports_H_flow[1]
pipe5.vol[2].dynBal.ports_H_flow[2]
pipe5.vol[2].dynBal.cp_default
pipe5.vol[2].dynBal.rho_start
pipe5.vol[2].dynBal.computeCSen
pipe5.vol[2].dynBal.state_default.p
pipe5.vol[2].dynBal.state_default.T
pipe5.vol[2].dynBal.rho_default
pipe5.vol[2].dynBal.hStart
pipe5.vol[2].dynBal.mWat_flow_internal
building.intGainsConv.Q_flow
building.intGainsRad.Q_flow
building.volAir.dynBal.energyDynamics
building.volAir.dynBal.massDynamics
building.volAir.dynBal.substanceDynamics
building.volAir.dynBal.traceDynamics
building.volAir.dynBal.p_start
building.volAir.dynBal.T_start
building.volAir.dynBal.X_start[1]
building.volAir.dynBal.mSenFac
building.volAir.dynBal.initialize_p
building.volAir.dynBal.simplify_mWat_flow
building.volAir.dynBal.nPorts
building.volAir.dynBal.use_mWat_flow
building.volAir.dynBal.use_C_flow
building.volAir.dynBal.medium.d
building.volAir.dynBal.medium.T
building.volAir.dynBal.medium.X[1]
building.volAir.dynBal.medium.u
building.volAir.dynBal.medium.R
building.volAir.dynBal.medium.MM
building.volAir.dynBal.medium.preferredMediumStates
building.volAir.dynBal.medium.standardOrderComponents
building.volAir.dynBal.medium.T_degC
building.volAir.dynBal.medium.p_bar
building.volAir.dynBal.U
building.volAir.dynBal.der(U)
building.volAir.dynBal.m
building.volAir.dynBal.der(m)
building.volAir.dynBal.Hb_flow
building.volAir.dynBal.fluidVolume
building.volAir.dynBal.CSen
building.volAir.dynBal.ports_H_flow[1]
building.volAir.dynBal.ports_H_flow[2]
building.volAir.dynBal.cp_default
building.volAir.dynBal.rho_start
building.volAir.dynBal.computeCSen
_GlobalScope.building.volAir.dynBal.X_default[1]
building.volAir.dynBal.state_default.p
building.volAir.dynBal.state_default.T
building.volAir.dynBal.rho_default
building.volAir.dynBal.hStart
building.volAir.dynBal.mWat_flow_internal
building.resWin.dT
building.resWin.R
building.convHeatSol.T_ref
building.convHeatSol.alpha
building.convHeatSol.port.Q_flow
building.radHeatSol[1].T_ref
building.radHeatSol[1].alpha
building.radHeatSol[2].T_ref
building.radHeatSol[2].alpha
building.radHeatSol[3].T_ref
building.radHeatSol[3].alpha
building.radHeatSol[4].T_ref
building.radHeatSol[4].alpha
building.thermSplitterIntGains.nOut
building.thermSplitterIntGains.nIn
building.thermSplitterIntGains.splitFactor[1, 1]
building.thermSplitterIntGains.splitFactor[2, 1]
building.thermSplitterIntGains.splitFactor[3, 1]
building.thermSplitterIntGains.splitFactor[4, 1]
building.thermSplitterIntGains.splitFactor[5, 1]
building.thermSplitterIntGains.portOut[1].Q_flow
building.thermSplitterIntGains.portOut[2].Q_flow
building.thermSplitterIntGains.portOut[3].Q_flow
building.thermSplitterIntGains.portOut[4].Q_flow
building.thermSplitterIntGains.portOut[5].Q_flow
building.thermSplitterSolRad.nOut
building.thermSplitterSolRad.nIn
building.thermSplitterSolRad.splitFactor[1, 1]
building.thermSplitterSolRad.splitFactor[1, 2]
building.thermSplitterSolRad.splitFactor[1, 3]
building.thermSplitterSolRad.splitFactor[1, 4]
building.thermSplitterSolRad.splitFactor[2, 1]
building.thermSplitterSolRad.splitFactor[2, 2]
building.thermSplitterSolRad.splitFactor[2, 3]
building.thermSplitterSolRad.splitFactor[2, 4]
building.thermSplitterSolRad.splitFactor[3, 1]
building.thermSplitterSolRad.splitFactor[3, 2]
building.thermSplitterSolRad.splitFactor[3, 3]
building.thermSplitterSolRad.splitFactor[3, 4]
building.thermSplitterSolRad.splitFactor[4, 1]
building.thermSplitterSolRad.splitFactor[4, 2]
building.thermSplitterSolRad.splitFactor[4, 3]
building.thermSplitterSolRad.splitFactor[4, 4]
building.thermSplitterSolRad.splitFactor[5, 1]
building.thermSplitterSolRad.splitFactor[5, 2]
building.thermSplitterSolRad.splitFactor[5, 3]
building.thermSplitterSolRad.splitFactor[5, 4]
building.thermSplitterSolRad.portIn[1].T
building.thermSplitterSolRad.portIn[1].Q_flow
building.thermSplitterSolRad.portIn[2].T
building.thermSplitterSolRad.portIn[2].Q_flow
building.thermSplitterSolRad.portIn[3].T
building.thermSplitterSolRad.portIn[3].Q_flow
building.thermSplitterSolRad.portIn[4].T
building.thermSplitterSolRad.portIn[4].Q_flow
building.thermSplitterSolRad.portOut[1].Q_flow
building.thermSplitterSolRad.portOut[2].Q_flow
building.thermSplitterSolRad.portOut[3].Q_flow
building.thermSplitterSolRad.portOut[4].Q_flow
building.thermSplitterSolRad.portOut[5].Q_flow
building.extWallRC.n
building.extWallRC.RExt[1]
building.extWallRC.RExtRem
building.extWallRC.CExt[1]
building.extWallRC.T_start
building.extWallRC.port_a.Q_flow
building.extWallRC.thermCapExt[1].C
building.extWallRC.thermCapExt[1].T
building.extWallRC.thermCapExt[1].der(T)
building.extWallRC.thermCapExt[1].port.Q_flow
building.extWallRC.thermResExt[1].dT
building.extWallRC.thermResExt[1].R
building.extWallRC.thermResExtRem.dT
building.extWallRC.thermResExtRem.R
building.senTAir.port.Q_flow
building.senTRad.port.Q_flow
storage.vol[1].dynBal.energyDynamics
storage.vol[1].dynBal.massDynamics
storage.vol[1].dynBal.substanceDynamics
storage.vol[1].dynBal.traceDynamics
storage.vol[1].dynBal.p_start
storage.vol[1].dynBal.T_start
storage.vol[1].dynBal.X_start[1]
storage.vol[1].dynBal.mSenFac
storage.vol[1].dynBal.initialize_p
storage.vol[1].dynBal.simplify_mWat_flow
storage.vol[1].dynBal.nPorts
storage.vol[1].dynBal.use_mWat_flow
storage.vol[1].dynBal.use_C_flow
storage.vol[1].dynBal.ports[1].m_flow
storage.vol[1].dynBal.ports[2].m_flow
storage.vol[1].dynBal.ports[3].m_flow
storage.vol[1].dynBal.medium.T
storage.vol[1].dynBal.medium.d
storage.vol[1].dynBal.medium.X[1]
storage.vol[1].dynBal.medium.R
storage.vol[1].dynBal.medium.MM
storage.vol[1].dynBal.medium.preferredMediumStates
storage.vol[1].dynBal.medium.standardOrderComponents
storage.vol[1].dynBal.medium.T_degC
storage.vol[1].dynBal.medium.p_bar
storage.vol[1].dynBal.U
storage.vol[1].dynBal.der(U)
storage.vol[1].dynBal.m
storage.vol[1].dynBal.der(m)
storage.vol[1].dynBal.mb_flow
storage.vol[1].dynBal.Hb_flow
storage.vol[1].dynBal.fluidVolume
storage.vol[1].dynBal.CSen
storage.vol[1].dynBal.ports_H_flow[1]
storage.vol[1].dynBal.ports_H_flow[2]
storage.vol[1].dynBal.ports_H_flow[3]
storage.vol[1].dynBal.cp_default
storage.vol[1].dynBal.rho_start
storage.vol[1].dynBal.computeCSen
_GlobalScope.storage.vol.dynBal.X_default[1]
storage.vol[1].dynBal.state_default.p
storage.vol[1].dynBal.state_default.T
storage.vol[1].dynBal.rho_default
storage.vol[1].dynBal.hStart
storage.vol[1].dynBal.mWat_flow_internal
storage.vol[2].dynBal.energyDynamics
storage.vol[2].dynBal.massDynamics
storage.vol[2].dynBal.substanceDynamics
storage.vol[2].dynBal.traceDynamics
storage.vol[2].dynBal.p_start
storage.vol[2].dynBal.T_start
storage.vol[2].dynBal.X_start[1]
storage.vol[2].dynBal.mSenFac
storage.vol[2].dynBal.initialize_p
storage.vol[2].dynBal.simplify_mWat_flow
storage.vol[2].dynBal.nPorts
storage.vol[2].dynBal.use_mWat_flow
storage.vol[2].dynBal.use_C_flow
storage.vol[2].dynBal.ports[1].m_flow
storage.vol[2].dynBal.ports[2].m_flow
storage.vol[2].dynBal.ports[3].m_flow
storage.vol[2].dynBal.medium.T
storage.vol[2].dynBal.medium.d
storage.vol[2].dynBal.medium.X[1]
storage.vol[2].dynBal.medium.R
storage.vol[2].dynBal.medium.MM
storage.vol[2].dynBal.medium.preferredMediumStates
storage.vol[2].dynBal.medium.standardOrderComponents
storage.vol[2].dynBal.medium.T_degC
storage.vol[2].dynBal.medium.p_bar
storage.vol[2].dynBal.U
storage.vol[2].dynBal.der(U)
storage.vol[2].dynBal.m
storage.vol[2].dynBal.der(m)
storage.vol[2].dynBal.mb_flow
storage.vol[2].dynBal.Hb_flow
storage.vol[2].dynBal.fluidVolume
storage.vol[2].dynBal.CSen
storage.vol[2].dynBal.ports_H_flow[1]
storage.vol[2].dynBal.ports_H_flow[2]
storage.vol[2].dynBal.ports_H_flow[3]
storage.vol[2].dynBal.cp_default
storage.vol[2].dynBal.rho_start
storage.vol[2].dynBal.computeCSen
storage.vol[2].dynBal.state_default.p
storage.vol[2].dynBal.state_default.T
storage.vol[2].dynBal.rho_default
storage.vol[2].dynBal.hStart
storage.vol[2].dynBal.mWat_flow_internal
storage.vol[3].dynBal.energyDynamics
storage.vol[3].dynBal.massDynamics
storage.vol[3].dynBal.substanceDynamics
storage.vol[3].dynBal.traceDynamics
storage.vol[3].dynBal.p_start
storage.vol[3].dynBal.T_start
storage.vol[3].dynBal.X_start[1]
storage.vol[3].dynBal.mSenFac
storage.vol[3].dynBal.initialize_p
storage.vol[3].dynBal.simplify_mWat_flow
storage.vol[3].dynBal.nPorts
storage.vol[3].dynBal.use_mWat_flow
storage.vol[3].dynBal.use_C_flow
storage.vol[3].dynBal.ports[1].m_flow
storage.vol[3].dynBal.ports[2].m_flow
storage.vol[3].dynBal.ports[3].m_flow
storage.vol[3].dynBal.medium.T
storage.vol[3].dynBal.medium.d
storage.vol[3].dynBal.medium.X[1]
storage.vol[3].dynBal.medium.R
storage.vol[3].dynBal.medium.MM
storage.vol[3].dynBal.medium.preferredMediumStates
storage.vol[3].dynBal.medium.standardOrderComponents
storage.vol[3].dynBal.medium.T_degC
storage.vol[3].dynBal.medium.p_bar
storage.vol[3].dynBal.U
storage.vol[3].dynBal.der(U)
storage.vol[3].dynBal.m
storage.vol[3].dynBal.der(m)
storage.vol[3].dynBal.mb_flow
storage.vol[3].dynBal.Hb_flow
storage.vol[3].dynBal.fluidVolume
storage.vol[3].dynBal.CSen
storage.vol[3].dynBal.ports_H_flow[1]
storage.vol[3].dynBal.ports_H_flow[2]
storage.vol[3].dynBal.ports_H_flow[3]
storage.vol[3].dynBal.cp_default
storage.vol[3].dynBal.rho_start
storage.vol[3].dynBal.computeCSen
storage.vol[3].dynBal.state_default.p
storage.vol[3].dynBal.state_default.T
storage.vol[3].dynBal.rho_default
storage.vol[3].dynBal.hStart
storage.vol[3].dynBal.mWat_flow_internal
storage.vol[4].dynBal.energyDynamics
storage.vol[4].dynBal.massDynamics
storage.vol[4].dynBal.substanceDynamics
storage.vol[4].dynBal.traceDynamics
storage.vol[4].dynBal.p_start
storage.vol[4].dynBal.T_start
storage.vol[4].dynBal.X_start[1]
storage.vol[4].dynBal.mSenFac
storage.vol[4].dynBal.initialize_p
storage.vol[4].dynBal.simplify_mWat_flow
storage.vol[4].dynBal.nPorts
storage.vol[4].dynBal.use_mWat_flow
storage.vol[4].dynBal.use_C_flow
storage.vol[4].dynBal.ports[1].m_flow
storage.vol[4].dynBal.ports[2].m_flow
storage.vol[4].dynBal.ports[3].m_flow
storage.vol[4].dynBal.medium.T
storage.vol[4].dynBal.medium.d
storage.vol[4].dynBal.medium.X[1]
storage.vol[4].dynBal.medium.R
storage.vol[4].dynBal.medium.MM
storage.vol[4].dynBal.medium.preferredMediumStates
storage.vol[4].dynBal.medium.standardOrderComponents
storage.vol[4].dynBal.medium.T_degC
storage.vol[4].dynBal.medium.p_bar
storage.vol[4].dynBal.U
storage.vol[4].dynBal.der(U)
storage.vol[4].dynBal.m
storage.vol[4].dynBal.der(m)
storage.vol[4].dynBal.mb_flow
storage.vol[4].dynBal.Hb_flow
storage.vol[4].dynBal.fluidVolume
storage.vol[4].dynBal.CSen
storage.vol[4].dynBal.ports_H_flow[1]
storage.vol[4].dynBal.ports_H_flow[2]
storage.vol[4].dynBal.ports_H_flow[3]
storage.vol[4].dynBal.cp_default
storage.vol[4].dynBal.rho_start
storage.vol[4].dynBal.computeCSen
storage.vol[4].dynBal.state_default.p
storage.vol[4].dynBal.state_default.T
storage.vol[4].dynBal.rho_default
storage.vol[4].dynBal.hStart
storage.vol[4].dynBal.mWat_flow_internal
storage.vol[5].dynBal.energyDynamics
storage.vol[5].dynBal.massDynamics
storage.vol[5].dynBal.substanceDynamics
storage.vol[5].dynBal.traceDynamics
storage.vol[5].dynBal.p_start
storage.vol[5].dynBal.T_start
storage.vol[5].dynBal.X_start[1]
storage.vol[5].dynBal.mSenFac
storage.vol[5].dynBal.initialize_p
storage.vol[5].dynBal.simplify_mWat_flow
storage.vol[5].dynBal.nPorts
storage.vol[5].dynBal.use_mWat_flow
storage.vol[5].dynBal.use_C_flow
storage.vol[5].dynBal.ports[1].m_flow
storage.vol[5].dynBal.medium.T
storage.vol[5].dynBal.medium.d
storage.vol[5].dynBal.medium.X[1]
storage.vol[5].dynBal.medium.R
storage.vol[5].dynBal.medium.MM
storage.vol[5].dynBal.medium.preferredMediumStates
storage.vol[5].dynBal.medium.standardOrderComponents
storage.vol[5].dynBal.medium.T_degC
storage.vol[5].dynBal.medium.p_bar
storage.vol[5].dynBal.U
storage.vol[5].dynBal.der(U)
storage.vol[5].dynBal.m
storage.vol[5].dynBal.der(m)
storage.vol[5].dynBal.mb_flow
storage.vol[5].dynBal.Hb_flow
storage.vol[5].dynBal.fluidVolume
storage.vol[5].dynBal.CSen
storage.vol[5].dynBal.ports_H_flow[1]
storage.vol[5].dynBal.ports_H_flow[2]
storage.vol[5].dynBal.ports_H_flow[3]
storage.vol[5].dynBal.cp_default
storage.vol[5].dynBal.rho_start
storage.vol[5].dynBal.computeCSen
storage.vol[5].dynBal.state_default.p
storage.vol[5].dynBal.state_default.T
storage.vol[5].dynBal.rho_default
storage.vol[5].dynBal.hStart
storage.vol[5].dynBal.mWat_flow_internal
storage.vol[6].dynBal.energyDynamics
storage.vol[6].dynBal.massDynamics
storage.vol[6].dynBal.substanceDynamics
storage.vol[6].dynBal.traceDynamics
storage.vol[6].dynBal.p_start
storage.vol[6].dynBal.T_start
storage.vol[6].dynBal.X_start[1]
storage.vol[6].dynBal.mSenFac
storage.vol[6].dynBal.initialize_p
storage.vol[6].dynBal.simplify_mWat_flow
storage.vol[6].dynBal.nPorts
storage.vol[6].dynBal.use_mWat_flow
storage.vol[6].dynBal.use_C_flow
storage.vol[6].dynBal.ports[3].m_flow
storage.vol[6].dynBal.medium.T
storage.vol[6].dynBal.medium.d
storage.vol[6].dynBal.medium.X[1]
storage.vol[6].dynBal.medium.R
storage.vol[6].dynBal.medium.MM
storage.vol[6].dynBal.medium.preferredMediumStates
storage.vol[6].dynBal.medium.standardOrderComponents
storage.vol[6].dynBal.medium.T_degC
storage.vol[6].dynBal.medium.p_bar
storage.vol[6].dynBal.U
storage.vol[6].dynBal.der(U)
storage.vol[6].dynBal.m
storage.vol[6].dynBal.der(m)
storage.vol[6].dynBal.mb_flow
storage.vol[6].dynBal.Hb_flow
storage.vol[6].dynBal.fluidVolume
storage.vol[6].dynBal.CSen
storage.vol[6].dynBal.ports_H_flow[1]
storage.vol[6].dynBal.ports_H_flow[2]
storage.vol[6].dynBal.ports_H_flow[3]
storage.vol[6].dynBal.cp_default
storage.vol[6].dynBal.rho_start
storage.vol[6].dynBal.computeCSen
storage.vol[6].dynBal.state_default.p
storage.vol[6].dynBal.state_default.T
storage.vol[6].dynBal.rho_default
storage.vol[6].dynBal.hStart
storage.vol[6].dynBal.mWat_flow_internal
storage.vol[7].dynBal.energyDynamics
storage.vol[7].dynBal.massDynamics
storage.vol[7].dynBal.substanceDynamics
storage.vol[7].dynBal.traceDynamics
storage.vol[7].dynBal.p_start
storage.vol[7].dynBal.T_start
storage.vol[7].dynBal.X_start[1]
storage.vol[7].dynBal.mSenFac
storage.vol[7].dynBal.initialize_p
storage.vol[7].dynBal.simplify_mWat_flow
storage.vol[7].dynBal.nPorts
storage.vol[7].dynBal.use_mWat_flow
storage.vol[7].dynBal.use_C_flow
storage.vol[7].dynBal.ports[3].m_flow
storage.vol[7].dynBal.medium.T
storage.vol[7].dynBal.medium.d
storage.vol[7].dynBal.medium.X[1]
storage.vol[7].dynBal.medium.R
storage.vol[7].dynBal.medium.MM
storage.vol[7].dynBal.medium.preferredMediumStates
storage.vol[7].dynBal.medium.standardOrderComponents
storage.vol[7].dynBal.medium.T_degC
storage.vol[7].dynBal.medium.p_bar
storage.vol[7].dynBal.U
storage.vol[7].dynBal.der(U)
storage.vol[7].dynBal.m
storage.vol[7].dynBal.der(m)
storage.vol[7].dynBal.mb_flow
storage.vol[7].dynBal.Hb_flow
storage.vol[7].dynBal.fluidVolume
storage.vol[7].dynBal.CSen
storage.vol[7].dynBal.ports_H_flow[1]
storage.vol[7].dynBal.ports_H_flow[2]
storage.vol[7].dynBal.ports_H_flow[3]
storage.vol[7].dynBal.cp_default
storage.vol[7].dynBal.rho_start
storage.vol[7].dynBal.computeCSen
storage.vol[7].dynBal.state_default.p
storage.vol[7].dynBal.state_default.T
storage.vol[7].dynBal.rho_default
storage.vol[7].dynBal.hStart
storage.vol[7].dynBal.mWat_flow_internal
storage.vol[8].dynBal.energyDynamics
storage.vol[8].dynBal.massDynamics
storage.vol[8].dynBal.substanceDynamics
storage.vol[8].dynBal.traceDynamics
storage.vol[8].dynBal.p_start
storage.vol[8].dynBal.T_start
storage.vol[8].dynBal.X_start[1]
storage.vol[8].dynBal.mSenFac
storage.vol[8].dynBal.initialize_p
storage.vol[8].dynBal.simplify_mWat_flow
storage.vol[8].dynBal.nPorts
storage.vol[8].dynBal.use_mWat_flow
storage.vol[8].dynBal.use_C_flow
storage.vol[8].dynBal.ports[3].m_flow
storage.vol[8].dynBal.medium.T
storage.vol[8].dynBal.medium.d
storage.vol[8].dynBal.medium.X[1]
storage.vol[8].dynBal.medium.R
storage.vol[8].dynBal.medium.MM
storage.vol[8].dynBal.medium.preferredMediumStates
storage.vol[8].dynBal.medium.standardOrderComponents
storage.vol[8].dynBal.medium.T_degC
storage.vol[8].dynBal.medium.p_bar
storage.vol[8].dynBal.U
storage.vol[8].dynBal.der(U)
storage.vol[8].dynBal.m
storage.vol[8].dynBal.der(m)
storage.vol[8].dynBal.mb_flow
storage.vol[8].dynBal.Hb_flow
storage.vol[8].dynBal.fluidVolume
storage.vol[8].dynBal.CSen
storage.vol[8].dynBal.ports_H_flow[1]
storage.vol[8].dynBal.ports_H_flow[2]
storage.vol[8].dynBal.ports_H_flow[3]
storage.vol[8].dynBal.cp_default
storage.vol[8].dynBal.rho_start
storage.vol[8].dynBal.computeCSen
storage.vol[8].dynBal.state_default.p
storage.vol[8].dynBal.state_default.T
storage.vol[8].dynBal.rho_default
storage.vol[8].dynBal.hStart
storage.vol[8].dynBal.mWat_flow_internal
collector.vol[1].dynBal.energyDynamics
collector.vol[1].dynBal.massDynamics
collector.vol[1].dynBal.substanceDynamics
collector.vol[1].dynBal.traceDynamics
collector.vol[1].dynBal.p_start
collector.vol[1].dynBal.T_start
collector.vol[1].dynBal.X_start[1]
collector.vol[1].dynBal.mSenFac
collector.vol[1].dynBal.initialize_p
collector.vol[1].dynBal.simplify_mWat_flow
collector.vol[1].dynBal.nPorts
collector.vol[1].dynBal.use_mWat_flow
collector.vol[1].dynBal.use_C_flow
collector.vol[1].dynBal.mOut
collector.vol[1].dynBal.medium.T
collector.vol[1].dynBal.medium.d
collector.vol[1].dynBal.medium.X[1]
collector.vol[1].dynBal.medium.R
collector.vol[1].dynBal.medium.MM
collector.vol[1].dynBal.medium.preferredMediumStates
collector.vol[1].dynBal.medium.standardOrderComponents
collector.vol[1].dynBal.medium.T_degC
collector.vol[1].dynBal.medium.p_bar
collector.vol[1].dynBal.U
collector.vol[1].dynBal.der(U)
collector.vol[1].dynBal.m
collector.vol[1].dynBal.der(m)
collector.vol[1].dynBal.mb_flow
collector.vol[1].dynBal.Hb_flow
collector.vol[1].dynBal.fluidVolume
collector.vol[1].dynBal.CSen
collector.vol[1].dynBal.ports_H_flow[1]
collector.vol[1].dynBal.ports_H_flow[2]
collector.vol[1].dynBal.cp_default
collector.vol[1].dynBal.rho_start
collector.vol[1].dynBal.computeCSen
_GlobalScope.collector.vol.dynBal.X_default[1]
collector.vol[1].dynBal.state_default.p
collector.vol[1].dynBal.state_default.T
collector.vol[1].dynBal.rho_default
collector.vol[1].dynBal.hStart
collector.vol[1].dynBal.mWat_flow_internal
collector.vol[2].dynBal.energyDynamics
collector.vol[2].dynBal.massDynamics
collector.vol[2].dynBal.substanceDynamics
collector.vol[2].dynBal.traceDynamics
collector.vol[2].dynBal.p_start
collector.vol[2].dynBal.T_start
collector.vol[2].dynBal.X_start[1]
collector.vol[2].dynBal.mSenFac
collector.vol[2].dynBal.initialize_p
collector.vol[2].dynBal.simplify_mWat_flow
collector.vol[2].dynBal.nPorts
collector.vol[2].dynBal.use_mWat_flow
collector.vol[2].dynBal.use_C_flow
collector.vol[2].dynBal.mOut
collector.vol[2].dynBal.medium.T
collector.vol[2].dynBal.medium.d
collector.vol[2].dynBal.medium.X[1]
collector.vol[2].dynBal.medium.R
collector.vol[2].dynBal.medium.MM
collector.vol[2].dynBal.medium.preferredMediumStates
collector.vol[2].dynBal.medium.standardOrderComponents
collector.vol[2].dynBal.medium.T_degC
collector.vol[2].dynBal.medium.p_bar
collector.vol[2].dynBal.U
collector.vol[2].dynBal.der(U)
collector.vol[2].dynBal.m
collector.vol[2].dynBal.der(m)
collector.vol[2].dynBal.mb_flow
collector.vol[2].dynBal.Hb_flow
collector.vol[2].dynBal.fluidVolume
collector.vol[2].dynBal.CSen
collector.vol[2].dynBal.ports_H_flow[1]
collector.vol[2].dynBal.ports_H_flow[2]
collector.vol[2].dynBal.cp_default
collector.vol[2].dynBal.rho_start
collector.vol[2].dynBal.computeCSen
collector.vol[2].dynBal.state_default.p
collector.vol[2].dynBal.state_default.T
collector.vol[2].dynBal.rho_default
collector.vol[2].dynBal.hStart
collector.vol[2].dynBal.mWat_flow_internal
collector.vol[3].dynBal.energyDynamics
collector.vol[3].dynBal.massDynamics
collector.vol[3].dynBal.substanceDynamics
collector.vol[3].dynBal.traceDynamics
collector.vol[3].dynBal.p_start
collector.vol[3].dynBal.T_start
collector.vol[3].dynBal.X_start[1]
collector.vol[3].dynBal.mSenFac
collector.vol[3].dynBal.initialize_p
collector.vol[3].dynBal.simplify_mWat_flow
collector.vol[3].dynBal.nPorts
collector.vol[3].dynBal.use_mWat_flow
collector.vol[3].dynBal.use_C_flow
collector.vol[3].dynBal.mOut
collector.vol[3].dynBal.medium.T
collector.vol[3].dynBal.medium.d
collector.vol[3].dynBal.medium.X[1]
collector.vol[3].dynBal.medium.R
collector.vol[3].dynBal.medium.MM
collector.vol[3].dynBal.medium.preferredMediumStates
collector.vol[3].dynBal.medium.standardOrderComponents
collector.vol[3].dynBal.medium.T_degC
collector.vol[3].dynBal.medium.p_bar
collector.vol[3].dynBal.U
collector.vol[3].dynBal.der(U)
collector.vol[3].dynBal.m
collector.vol[3].dynBal.der(m)
collector.vol[3].dynBal.mb_flow
collector.vol[3].dynBal.Hb_flow
collector.vol[3].dynBal.fluidVolume
collector.vol[3].dynBal.CSen
collector.vol[3].dynBal.ports_H_flow[1]
collector.vol[3].dynBal.ports_H_flow[2]
collector.vol[3].dynBal.cp_default
collector.vol[3].dynBal.rho_start
collector.vol[3].dynBal.computeCSen
collector.vol[3].dynBal.state_default.p
collector.vol[3].dynBal.state_default.T
collector.vol[3].dynBal.rho_default
collector.vol[3].dynBal.hStart
collector.vol[3].dynBal.mWat_flow_internal
collector.vol[4].dynBal.energyDynamics
collector.vol[4].dynBal.massDynamics
collector.vol[4].dynBal.substanceDynamics
collector.vol[4].dynBal.traceDynamics
collector.vol[4].dynBal.p_start
collector.vol[4].dynBal.T_start
collector.vol[4].dynBal.X_start[1]
collector.vol[4].dynBal.mSenFac
collector.vol[4].dynBal.initialize_p
collector.vol[4].dynBal.simplify_mWat_flow
collector.vol[4].dynBal.nPorts
collector.vol[4].dynBal.use_mWat_flow
collector.vol[4].dynBal.use_C_flow
collector.vol[4].dynBal.mOut
collector.vol[4].dynBal.medium.T
collector.vol[4].dynBal.medium.d
collector.vol[4].dynBal.medium.X[1]
collector.vol[4].dynBal.medium.R
collector.vol[4].dynBal.medium.MM
collector.vol[4].dynBal.medium.preferredMediumStates
collector.vol[4].dynBal.medium.standardOrderComponents
collector.vol[4].dynBal.medium.T_degC
collector.vol[4].dynBal.medium.p_bar
collector.vol[4].dynBal.U
collector.vol[4].dynBal.der(U)
collector.vol[4].dynBal.m
collector.vol[4].dynBal.der(m)
collector.vol[4].dynBal.mb_flow
collector.vol[4].dynBal.Hb_flow
collector.vol[4].dynBal.fluidVolume
collector.vol[4].dynBal.CSen
collector.vol[4].dynBal.ports_H_flow[1]
collector.vol[4].dynBal.ports_H_flow[2]
collector.vol[4].dynBal.cp_default
collector.vol[4].dynBal.rho_start
collector.vol[4].dynBal.computeCSen
collector.vol[4].dynBal.state_default.p
collector.vol[4].dynBal.state_default.T
collector.vol[4].dynBal.rho_default
collector.vol[4].dynBal.hStart
collector.vol[4].dynBal.mWat_flow_internal
collector.vol[5].dynBal.energyDynamics
collector.vol[5].dynBal.massDynamics
collector.vol[5].dynBal.substanceDynamics
collector.vol[5].dynBal.traceDynamics
collector.vol[5].dynBal.p_start
collector.vol[5].dynBal.T_start
collector.vol[5].dynBal.X_start[1]
collector.vol[5].dynBal.mSenFac
collector.vol[5].dynBal.initialize_p
collector.vol[5].dynBal.simplify_mWat_flow
collector.vol[5].dynBal.nPorts
collector.vol[5].dynBal.use_mWat_flow
collector.vol[5].dynBal.use_C_flow
collector.vol[5].dynBal.mOut
collector.vol[5].dynBal.medium.T
collector.vol[5].dynBal.medium.d
collector.vol[5].dynBal.medium.X[1]
collector.vol[5].dynBal.medium.R
collector.vol[5].dynBal.medium.MM
collector.vol[5].dynBal.medium.preferredMediumStates
collector.vol[5].dynBal.medium.standardOrderComponents
collector.vol[5].dynBal.medium.T_degC
collector.vol[5].dynBal.medium.p_bar
collector.vol[5].dynBal.U
collector.vol[5].dynBal.der(U)
collector.vol[5].dynBal.m
collector.vol[5].dynBal.der(m)
collector.vol[5].dynBal.mb_flow
collector.vol[5].dynBal.Hb_flow
collector.vol[5].dynBal.fluidVolume
collector.vol[5].dynBal.CSen
collector.vol[5].dynBal.ports_H_flow[1]
collector.vol[5].dynBal.ports_H_flow[2]
collector.vol[5].dynBal.cp_default
collector.vol[5].dynBal.rho_start
collector.vol[5].dynBal.computeCSen
collector.vol[5].dynBal.state_default.p
collector.vol[5].dynBal.state_default.T
collector.vol[5].dynBal.rho_default
collector.vol[5].dynBal.hStart
collector.vol[5].dynBal.mWat_flow_internal
collector.vol[6].dynBal.energyDynamics
collector.vol[6].dynBal.massDynamics
collector.vol[6].dynBal.substanceDynamics
collector.vol[6].dynBal.traceDynamics
collector.vol[6].dynBal.p_start
collector.vol[6].dynBal.T_start
collector.vol[6].dynBal.X_start[1]
collector.vol[6].dynBal.mSenFac
collector.vol[6].dynBal.initialize_p
collector.vol[6].dynBal.simplify_mWat_flow
collector.vol[6].dynBal.nPorts
collector.vol[6].dynBal.use_mWat_flow
collector.vol[6].dynBal.use_C_flow
collector.vol[6].dynBal.mOut
collector.vol[6].dynBal.medium.T
collector.vol[6].dynBal.medium.d
collector.vol[6].dynBal.medium.X[1]
collector.vol[6].dynBal.medium.R
collector.vol[6].dynBal.medium.MM
collector.vol[6].dynBal.medium.preferredMediumStates
collector.vol[6].dynBal.medium.standardOrderComponents
collector.vol[6].dynBal.medium.T_degC
collector.vol[6].dynBal.medium.p_bar
collector.vol[6].dynBal.U
collector.vol[6].dynBal.der(U)
collector.vol[6].dynBal.m
collector.vol[6].dynBal.der(m)
collector.vol[6].dynBal.mb_flow
collector.vol[6].dynBal.Hb_flow
collector.vol[6].dynBal.fluidVolume
collector.vol[6].dynBal.CSen
collector.vol[6].dynBal.ports_H_flow[1]
collector.vol[6].dynBal.ports_H_flow[2]
collector.vol[6].dynBal.cp_default
collector.vol[6].dynBal.rho_start
collector.vol[6].dynBal.computeCSen
collector.vol[6].dynBal.state_default.p
collector.vol[6].dynBal.state_default.T
collector.vol[6].dynBal.rho_default
collector.vol[6].dynBal.hStart
collector.vol[6].dynBal.mWat_flow_internal
collector.vol[7].dynBal.energyDynamics
collector.vol[7].dynBal.massDynamics
collector.vol[7].dynBal.substanceDynamics
collector.vol[7].dynBal.traceDynamics
collector.vol[7].dynBal.p_start
collector.vol[7].dynBal.T_start
collector.vol[7].dynBal.X_start[1]
collector.vol[7].dynBal.mSenFac
collector.vol[7].dynBal.initialize_p
collector.vol[7].dynBal.simplify_mWat_flow
collector.vol[7].dynBal.nPorts
collector.vol[7].dynBal.use_mWat_flow
collector.vol[7].dynBal.use_C_flow
collector.vol[7].dynBal.mOut
collector.vol[7].dynBal.medium.T
collector.vol[7].dynBal.medium.d
collector.vol[7].dynBal.medium.X[1]
collector.vol[7].dynBal.medium.R
collector.vol[7].dynBal.medium.MM
collector.vol[7].dynBal.medium.preferredMediumStates
collector.vol[7].dynBal.medium.standardOrderComponents
collector.vol[7].dynBal.medium.T_degC
collector.vol[7].dynBal.medium.p_bar
collector.vol[7].dynBal.U
collector.vol[7].dynBal.der(U)
collector.vol[7].dynBal.m
collector.vol[7].dynBal.der(m)
collector.vol[7].dynBal.mb_flow
collector.vol[7].dynBal.Hb_flow
collector.vol[7].dynBal.fluidVolume
collector.vol[7].dynBal.CSen
collector.vol[7].dynBal.ports_H_flow[1]
collector.vol[7].dynBal.ports_H_flow[2]
collector.vol[7].dynBal.cp_default
collector.vol[7].dynBal.rho_start
collector.vol[7].dynBal.computeCSen
collector.vol[7].dynBal.state_default.p
collector.vol[7].dynBal.state_default.T
collector.vol[7].dynBal.rho_default
collector.vol[7].dynBal.hStart
collector.vol[7].dynBal.mWat_flow_internal
collector.vol[8].dynBal.energyDynamics
collector.vol[8].dynBal.massDynamics
collector.vol[8].dynBal.substanceDynamics
collector.vol[8].dynBal.traceDynamics
collector.vol[8].dynBal.p_start
collector.vol[8].dynBal.T_start
collector.vol[8].dynBal.X_start[1]
collector.vol[8].dynBal.mSenFac
collector.vol[8].dynBal.initialize_p
collector.vol[8].dynBal.simplify_mWat_flow
collector.vol[8].dynBal.nPorts
collector.vol[8].dynBal.use_mWat_flow
collector.vol[8].dynBal.use_C_flow
collector.vol[8].dynBal.mOut
collector.vol[8].dynBal.medium.T
collector.vol[8].dynBal.medium.d
collector.vol[8].dynBal.medium.X[1]
collector.vol[8].dynBal.medium.R
collector.vol[8].dynBal.medium.MM
collector.vol[8].dynBal.medium.preferredMediumStates
collector.vol[8].dynBal.medium.standardOrderComponents
collector.vol[8].dynBal.medium.T_degC
collector.vol[8].dynBal.medium.p_bar
collector.vol[8].dynBal.U
collector.vol[8].dynBal.der(U)
collector.vol[8].dynBal.m
collector.vol[8].dynBal.der(m)
collector.vol[8].dynBal.mb_flow
collector.vol[8].dynBal.Hb_flow
collector.vol[8].dynBal.fluidVolume
collector.vol[8].dynBal.CSen
collector.vol[8].dynBal.ports_H_flow[1]
collector.vol[8].dynBal.ports_H_flow[2]
collector.vol[8].dynBal.cp_default
collector.vol[8].dynBal.rho_start
collector.vol[8].dynBal.computeCSen
collector.vol[8].dynBal.state_default.p
collector.vol[8].dynBal.state_default.T
collector.vol[8].dynBal.rho_default
collector.vol[8].dynBal.hStart
collector.vol[8].dynBal.mWat_flow_internal
collector.vol[9].dynBal.energyDynamics
collector.vol[9].dynBal.massDynamics
collector.vol[9].dynBal.substanceDynamics
collector.vol[9].dynBal.traceDynamics
collector.vol[9].dynBal.p_start
collector.vol[9].dynBal.T_start
collector.vol[9].dynBal.X_start[1]
collector.vol[9].dynBal.mSenFac
collector.vol[9].dynBal.initialize_p
collector.vol[9].dynBal.simplify_mWat_flow
collector.vol[9].dynBal.nPorts
collector.vol[9].dynBal.use_mWat_flow
collector.vol[9].dynBal.use_C_flow
collector.vol[9].dynBal.mOut
collector.vol[9].dynBal.medium.T
collector.vol[9].dynBal.medium.d
collector.vol[9].dynBal.medium.X[1]
collector.vol[9].dynBal.medium.R
collector.vol[9].dynBal.medium.MM
collector.vol[9].dynBal.medium.preferredMediumStates
collector.vol[9].dynBal.medium.standardOrderComponents
collector.vol[9].dynBal.medium.T_degC
collector.vol[9].dynBal.medium.p_bar
collector.vol[9].dynBal.U
collector.vol[9].dynBal.der(U)
collector.vol[9].dynBal.m
collector.vol[9].dynBal.der(m)
collector.vol[9].dynBal.mb_flow
collector.vol[9].dynBal.Hb_flow
collector.vol[9].dynBal.fluidVolume
collector.vol[9].dynBal.CSen
collector.vol[9].dynBal.ports_H_flow[1]
collector.vol[9].dynBal.ports_H_flow[2]
collector.vol[9].dynBal.cp_default
collector.vol[9].dynBal.rho_start
collector.vol[9].dynBal.computeCSen
collector.vol[9].dynBal.state_default.p
collector.vol[9].dynBal.state_default.T
collector.vol[9].dynBal.rho_default
collector.vol[9].dynBal.hStart
collector.vol[9].dynBal.mWat_flow_internal
collector.vol[10].dynBal.energyDynamics
collector.vol[10].dynBal.massDynamics
collector.vol[10].dynBal.substanceDynamics
collector.vol[10].dynBal.traceDynamics
collector.vol[10].dynBal.p_start
collector.vol[10].dynBal.T_start
collector.vol[10].dynBal.X_start[1]
collector.vol[10].dynBal.mSenFac
collector.vol[10].dynBal.initialize_p
collector.vol[10].dynBal.simplify_mWat_flow
collector.vol[10].dynBal.nPorts
collector.vol[10].dynBal.use_mWat_flow
collector.vol[10].dynBal.use_C_flow
collector.vol[10].dynBal.mOut
collector.vol[10].dynBal.medium.T
collector.vol[10].dynBal.medium.d
collector.vol[10].dynBal.medium.X[1]
collector.vol[10].dynBal.medium.R
collector.vol[10].dynBal.medium.MM
collector.vol[10].dynBal.medium.preferredMediumStates
collector.vol[10].dynBal.medium.standardOrderComponents
collector.vol[10].dynBal.medium.T_degC
collector.vol[10].dynBal.medium.p_bar
collector.vol[10].dynBal.U
collector.vol[10].dynBal.der(U)
collector.vol[10].dynBal.m
collector.vol[10].dynBal.der(m)
collector.vol[10].dynBal.mb_flow
collector.vol[10].dynBal.Hb_flow
collector.vol[10].dynBal.fluidVolume
collector.vol[10].dynBal.CSen
collector.vol[10].dynBal.ports_H_flow[1]
collector.vol[10].dynBal.ports_H_flow[2]
collector.vol[10].dynBal.cp_default
collector.vol[10].dynBal.rho_start
collector.vol[10].dynBal.computeCSen
collector.vol[10].dynBal.state_default.p
collector.vol[10].dynBal.state_default.T
collector.vol[10].dynBal.rho_default
collector.vol[10].dynBal.hStart
collector.vol[10].dynBal.mWat_flow_internal
weaDat.weaBus.lon
weaDat.weaBus.lat
weaBus.TDryBul
weaBus.TBlaSky
HDifTilColl.incAng.weaBus.lat
HDifTilColl.incAng.weaBus.lon
HDifTilColl.weaBus.lat
HDifTilColl.weaBus.lon
HDifTilRoof[1].incAng.weaBus.lat
HDifTilRoof[1].incAng.weaBus.lon
HDifTilRoof[1].weaBus.lat
HDifTilRoof[1].weaBus.lon
HDifTil[1].incAng.weaBus.lat
HDifTil[1].incAng.weaBus.lon
HDifTil[1].weaBus.lat
HDifTil[1].weaBus.lon
HDifTil[2].incAng.weaBus.lat
HDifTil[2].incAng.weaBus.lon
HDifTil[2].weaBus.lat
HDifTil[2].weaBus.lon
HDifTil[3].incAng.weaBus.lat
HDifTil[3].incAng.weaBus.lon
HDifTil[3].weaBus.lat
HDifTil[3].weaBus.lon
HDifTil[4].incAng.weaBus.lat
HDifTil[4].incAng.weaBus.lon
HDifTil[4].weaBus.lat
HDifTil[4].weaBus.lon
HDirTilColl.incAng.weaBus.lat
HDirTilColl.incAng.weaBus.lon
HDirTilColl.weaBus.lat
HDirTilColl.weaBus.lon
HDirTilRoof[1].incAng.weaBus.lat
HDirTilRoof[1].incAng.weaBus.lon
HDirTilRoof[1].weaBus.lat
HDirTilRoof[1].weaBus.lon
HDirTil[1].incAng.weaBus.lat
HDirTil[1].incAng.weaBus.lon
HDirTil[1].weaBus.lat
HDirTil[1].weaBus.lon
HDirTil[2].incAng.weaBus.lat
HDirTil[2].incAng.weaBus.lon
HDirTil[2].weaBus.lat
HDirTil[2].weaBus.lon
HDirTil[3].incAng.weaBus.lat
HDirTil[3].incAng.weaBus.lon
HDirTil[3].weaBus.lat
HDirTil[3].weaBus.lon
HDirTil[4].incAng.weaBus.lat
HDirTil[4].incAng.weaBus.lon
HDirTil[4].weaBus.lat
HDirTil[4].weaBus.lon
weaBus.HDifHor
weaBus.HDirNor
weaBus.HGloHor
weaBus.HHorIR
weaBus.TDewPoi
weaBus.celHei
weaBus.cloTim
weaBus.lat
weaBus.lon
weaBus.nOpa
weaBus.nTot
weaBus.pAtm
weaBus.relHum
weaBus.solAlt
weaBus.solDec
weaBus.solHouAng
weaBus.solTim
weaBus.solZen
weaBus.winDir
weaBus.winSpe
CPUtime
EventCounter

double initialValue(5525,6)
 -1       1                       0                       0                
  1   280   # UValueWindows
 -1 3.4999999999999998E-001       0                       0                
  1   280   # UValueFloor
 -1 3.4000000000000002E-001       0                       0                
  1   280   # UValueRoof
  0       0                       0                       0                
  6   256   # UValueWalls
 -1       %VStorage%                       1                      40                
  1   280   # VStorage
 -1       %ACollector%                       4                      40                
  1   280   # ACollector
 -1 %thicknessInsulation% 5.9999999999999998E-002 2.9999999999999999E-001
  1   280   # thicknessInsulation
 -1      20                       0                       0                
  1   280   # lifetimeCollector
  0       0                       0                       0                
  6   256   # costCollector
 -1      20                       0                       0                
  1   280   # lifetimeStorage
  0       0                       0                       0                
  6   256   # costStorage
 -1 1.6000000000000000E-001       0                       0                
  1   280   # energyPrice
  0       0                       0                       0                
  6   256   # costHeaterEnergy
 -1      30                       0                       0                
  1   280   # lifetimeInsulation
  0       0                       0                       0                
  6   256   # costInsulation
 -1 5.0000000000000000E-001       0                       0                
  1   280   # solarfractionSet
 -1    1500                       0                       0                
  1   280   # penaltyFactor
 -1       0                       0                       0                
  2   280   # QHeater
  0       0                       0                       0                
  3   256   # der(QHeater)
 -1 1.0000000000000000E-004       0                       0                
  2   280   # QRadiator
  0       0                       0                       0                
  3   256   # der(QRadiator)
  0       0                       0                       0                
  6   256   # solarfraction
  0       0                       0                       0                
  6   256   # costPenalty
  0       0                       0                       0                
  6   256   # costfunction
 -1       2                       0                       0                
  1   280   # simulationPeriod
  0       0                       0                       0                
  6   256   # evaluationStart
 -1       0                       0                       0                
  2   280   # QHeaterEval
  0       0                       0                       0                
  3   256   # der(QHeaterEval)
 -1 1.0000000000000000E-004       0                       0                
  2   280   # QRadiatorEval
  0       0                       0                       0                
  3   256   # der(QRadiatorEval)
  0       0                       0                       0                
  6   256   # solarfractionEval
  0 1.0000000000000001E-001       0                       0                
  6   256   # m_flow_nominal
  0       2                       1                       4                
  6   258   # exp1.energyDynamics
  0       2                       1                       4                
  6   258   # exp1.massDynamics
  0       2                       1                       4                
  6   258   # exp1.substanceDynamics
  0       2                       1                       4                
  6   258   # exp1.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # exp1.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # exp1.T_start
 -1       1                       0                       1                
  1   280   # exp1.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # exp1.mSenFac
 -1 1.0000000000000001E-001       0                       0                
  1   280   # exp1.V_start
 -1 3.0000000000000000E+005       0                       0                
  1   280   # exp1.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # exp1.port_a.h_outflow
 -1       0                       0                 1.0000000000000000E+100
  2   272   # exp1.m
  0       0                       0                       0                
  3   256   # exp1.der(m)
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # exp1.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # exp1.state_start.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # exp1.rho_start
 -1       0                       0                       0                
  2  1296   # exp1.H
  0       0                       0                       0                
  3  1280   # exp1.der(H)
  0       1                       1                       4                
  6   258   # pipe1.energyDynamics
  0       1                       1                       4                
  6   258   # pipe1.massDynamics
  0       1                       1                       4                
  6   258   # pipe1.substanceDynamics
  0       1                       1                       4                
  6   258   # pipe1.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # pipe1.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # pipe1.T_start
 -1       1                       0                       1                
  1   280   # pipe1.X_start[1]
 -1       1                       1                 1.0000000000000000E+100
  1   280   # pipe1.mSenFac
  0       1                       0                       0                
  6   257   # pipe1.allowFlowReversal
  0       0                 -100000                  100000                
  6   388   # pipe1.port_a.m_flow
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   260   # pipe1.port_a.p
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pipe1.port_a.h_outflow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pipe1.port_b.h_outflow
  0 1.0000000000000001E-001       0                       0                
  6   256   # pipe1.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe1.m_flow_small
  0       1                       0                       0                
  6   257   # pipe1.show_T
  0       0                       0                       0                
  6   256   # pipe1.dp
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe1.sta_a.T
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe1.sta_b.T
  0       1                       0                       0                
  6   257   # pipe1.computeFlowResistance
  0       0                       0                       0                
  6   257   # pipe1.from_dp
  0 1.8795347153484360E+002       0                 1.0000000000000000E+100
  6   256   # pipe1.dp_nominal
  0       0                       0                       0                
  6   257   # pipe1.linearizeFlowResistance
 -1 1.0000000000000001E-001       0                       0                
  1   280   # pipe1.deltaM
  0       2                       1                 1.0000000000000000E+100
  6   258   # pipe1.nNodes
 -1 2.0000000000000000E-002       0                       0                
  1   280   # pipe1.thicknessIns
 -1 4.0000000000000001E-002       0                       0                
  1   280   # pipe1.lambdaIns
  0 2.0000000000000000E-002       0                       0                
  6   256   # pipe1.diameter
  0       1                       0                       0                
  6   256   # pipe1.length
 -1    4000                       0                       0                
  1   280   # pipe1.ReC
  0       0                       0                       0                
  6   257   # pipe1.useMultipleHeatPorts
  0       1                       0                       0                
  6   257   # pipe1.res.allowFlowReversal
  0 1.0000000000000001E-001       0                       0                
  6   256   # pipe1.res.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe1.res.m_flow_small
  0       1                       0                       0                
  6   257   # pipe1.res.show_T
  0       0                       0                       0                
  6   256   # pipe1.res.dp
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe1.res.sta_a.T
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe1.res.sta_b.T
  0       0                       0                       0                
  6   257   # pipe1.res.from_dp
  0 1.8795347153484360E+002       0                       0                
  6   256   # pipe1.res.dp_nominal
  0       1                       0                       0                
  6   257   # pipe1.res.homotopyInitialization
  0       0                       0                       0                
  6   257   # pipe1.res.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # pipe1.res.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # pipe1.res.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # pipe1.res.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # pipe1.res.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # pipe1.res.m_flow_nominal_pos
  0 1.8795347153484360E+002       0                       0                
  6  1280   # pipe1.res.dp_nominal_pos
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe1.res.X_default[1]
  0       1                       0                       0                
  6   257   # pipe1.res.use_dh
  0 2.0000000000000000E-002       0                       0                
  6   256   # pipe1.res.dh
  0       0                       0                 1.0000000000000000E+100
  6   256   # pipe1.res.ReC
  0 2.9999999999999999E-001 1.0000000000000000E-002 1.0000000000000000E+100
  6   256   # pipe1.res.deltaM
  0 7.2941522523157767E-003       0                       0                
  6   256   # pipe1.res.k
  0       1                       0                       0                
  6  1281   # pipe1.res.computeFlowResistance
  0       1                       1                       4                
  6   258   # pipe1.vol[1].energyDynamics
  0       1                       1                       4                
  6   258   # pipe1.vol[1].massDynamics
  0       1                       1                       4                
  6   258   # pipe1.vol[1].substanceDynamics
  0       1                       1                       4                
  6   258   # pipe1.vol[1].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # pipe1.vol[1].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe1.vol[1].T_start
  0       0                       0                       1                
  6   256   # pipe1.vol[1].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pipe1.vol[1].mSenFac
  0       0                       0                       0                
  6   769   # pipe1.vol[1].initialize_p
  0       1                       0                       0                
  6   257   # pipe1.vol[1].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # pipe1.vol[1].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # pipe1.vol[1].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # pipe1.vol[1].m_flow_nominal
  0       2                       0                       0                
  6   258   # pipe1.vol[1].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe1.vol[1].m_flow_small
  0       1                       0                       0                
  6   257   # pipe1.vol[1].allowFlowReversal
  0 1.5707963267948965E-004       0                       0                
  6   256   # pipe1.vol[1].V
  0     300                       1                   10000                
  6   260   # pipe1.vol[1].heatPort.T
  0       0                       0                       0                
  6   388   # pipe1.vol[1].heatPort.Q_flow
  0 1.5638628318084238E-001       0                       0                
  6   256   # pipe1.vol[1].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[1].rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe1.vol.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe1.vol[1].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe1.vol[1].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[1].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe1.vol[1].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe1.vol[1].state_start.T
  0       0                       0                       0                
  6  1281   # pipe1.vol[1].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # pipe1.vol[2].energyDynamics
  0       1                       1                       4                
  6   258   # pipe1.vol[2].massDynamics
  0       1                       1                       4                
  6   258   # pipe1.vol[2].substanceDynamics
  0       1                       1                       4                
  6   258   # pipe1.vol[2].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # pipe1.vol[2].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe1.vol[2].T_start
  0       0                       0                       1                
  6   256   # pipe1.vol[2].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pipe1.vol[2].mSenFac
  0       0                       0                       0                
  6   769   # pipe1.vol[2].initialize_p
  0       1                       0                       0                
  6   257   # pipe1.vol[2].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # pipe1.vol[2].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # pipe1.vol[2].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # pipe1.vol[2].m_flow_nominal
  0       2                       0                       0                
  6   258   # pipe1.vol[2].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe1.vol[2].m_flow_small
  0       1                       0                       0                
  6   257   # pipe1.vol[2].allowFlowReversal
  0 1.5707963267948965E-004       0                       0                
  6   256   # pipe1.vol[2].V
  0     300                       1                   10000                
  6   260   # pipe1.vol[2].heatPort.T
  0       0                       0                       0                
  6   388   # pipe1.vol[2].heatPort.Q_flow
  0 1.5638628318084238E-001       0                       0                
  6   256   # pipe1.vol[2].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[2].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe1.vol[2].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe1.vol[2].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[2].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe1.vol[2].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe1.vol[2].state_start.T
  0       0                       0                       0                
  6  1281   # pipe1.vol[2].useSteadyStateTwoPort
  0       0                       0                       0                
  6   256   # pipe1.conPipWal[1].dT
  0       0                       0                       0                
  6   256   # pipe1.conPipWal[1].G
  0       0                       0                       0                
  6   256   # pipe1.conPipWal[2].dT
  0       0                       0                       0                
  6   256   # pipe1.conPipWal[2].G
  0       2                       1                 1.0000000000000000E+100
  6   258   # pipe1.colAllToOne.m
  0       0                       0                       0                
  6   388   # pipe1.heatPort.Q_flow
  0 3.1415926535897931E-004       0                       0                
  6  1280   # pipe1.VPipe
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe1.X_default[1]
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # pipe1.state_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # pipe1.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe1.rho_default
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # pipe1.mu_default
 -1 1.4999999999999999E-001       0                       0                
  1  1304   # pipe1.v_nominal
  0 2.5000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # pipe1.roughness
  0 9.3976735767421800E+001       0                       0                
  6  1280   # pipe1.dpStraightPipe_nominal
  0       1                       0                       0                
  6   257   # heater.allowFlowReversal
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # heater.port_a.h_outflow
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   260   # heater.port_b.p
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # heater.port_b.h_outflow
  0 1.0000000000000001E-001       0                       0                
  6   256   # heater.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # heater.m_flow_small
  0       0                       0                       0                
  6   257   # heater.show_T
  0       0                       0                       0                
  6   256   # heater.dp
  0       1                       0                       0                
  6   257   # heater.computeFlowResistance
  0       0                       0                       0                
  6   257   # heater.from_dp
  0      10                       0                 1.0000000000000000E+100
  6   256   # heater.dp_nominal
  0       0                       0                       0                
  6   257   # heater.linearizeFlowResistance
  0 1.0000000000000001E-001       0                       0                
  6   256   # heater.deltaM
  0 9.9999999999999995E+059       0                       0                
  6   256   # heater.Q_flow_maxHeat
  0       0                       0                       0                
  6   256   # heater.Q_flow_maxCool
 -1      10                       0                 1.0000000000000000E+100
  1   280   # heater.tau
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # heater.T_start
  0       4                       1                       4                
  6   258   # heater.energyDynamics
  0       1                       0                       0                
  6   257   # heater.homotopyInitialization
  0       1                       0                       0                
  6  1281   # heater.preDro.allowFlowReversal
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # heater.preDro.port_b.h_outflow
  0 1.0000000000000001E-001       0                       0                
  6  1280   # heater.preDro.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # heater.preDro.m_flow_small
  0       0                       0                       0                
  6  1281   # heater.preDro.show_T
  0       0                       0                       0                
  6  1280   # heater.preDro.dp
  0       0                       0                       0                
  6  1281   # heater.preDro.from_dp
  0      10                       0                       0                
  6  1280   # heater.preDro.dp_nominal
  0       1                       0                       0                
  6  1281   # heater.preDro.homotopyInitialization
  0       0                       0                       0                
  6  1281   # heater.preDro.linearized
  0 1.0000000000000002E-002       0                 1.0000000000000000E+100
  6  1280   # heater.preDro.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # heater.preDro.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # heater.preDro.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # heater.preDro.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # heater.preDro.m_flow_nominal_pos
  0      10                       0                       0                
  6  1280   # heater.preDro.dp_nominal_pos
  0       1                       0                       1                
  6  1280   # _GlobalScope.heater.preDro.X_default[1]
  0       0                       0                       0                
  6  1281   # heater.preDro.use_dh
 -1       1                       0                       0                
  1  1304   # heater.preDro.dh
 -1    4000                       0                 1.0000000000000000E+100
  1  1304   # heater.preDro.ReC
  0 1.0000000000000001E-001 1.0000000000000000E-002 1.0000000000000000E+100
  6  1280   # heater.preDro.deltaM
  0 3.1622776601683791E-002       0                       0                
  6  1280   # heater.preDro.k
  0       1                       0                       0                
  6  1281   # heater.preDro.computeFlowResistance
  0       1                       0                       0                
  6  1281   # heater.heaCoo.allowFlowReversal
  0       0                       0                       0                
  6  1280   # heater.heaCoo.dp_start
 -1       0                 -100000                  100000                
  1  1304   # heater.heaCoo.m_flow_start
  0 1.0000000000000001E-005 -100000                  100000                
  6  1280   # heater.heaCoo.m_flow_small
  0       0                       0                       0                
  6  1281   # heater.heaCoo.show_T
  0       0                       0                       0                
  6  1281   # heater.heaCoo.show_V_flow
  0       0                       0                       0                
  6  1280   # heater.heaCoo.dp
  0       1                       0                       1                
  6  1280   # _GlobalScope.heater.heaCoo.X_default[1]
  0 9.9999999999999995E+059       0                       0                
  6  1280   # heater.heaCoo.Q_flow_maxHeat
  0       0                       0                       0                
  6  1280   # heater.heaCoo.Q_flow_maxCool
  0 1.0000000000000001E-001       0                       0                
  6  1280   # heater.heaCoo.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # heater.heaCoo.tau
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6  1280   # heater.heaCoo.T_start
  0       4                       1                       4                
  6  1282   # heater.heaCoo.energyDynamics
 -1    4184                       0                       0                
  1  1304   # heater.heaCoo.cp_default
  0       0                       0                       0                
  6  1281   # heater.heaCoo.restrictHeat
  0       1                       0                       0                
  6  1281   # heater.heaCoo.restrictCool
  0       0                       0                       0                
  6  1280   # heater.heaCoo.deltah
  0       0                       0                       0                
  6  1281   # heater.heaCoo.dynamic
  0       0                       0                       0                
  6  1280   # heater.heaCoo.m_flow_pos
  0       0                       0                       0                
  6  1280   # heater.heaCoo.m_flow_limited
  0       0                       0                       0                
  6  1280   # heater.heaCoo.hSet
  0       0                       0                       0                
  6  1280   # heater.heaCoo.dhSetAct
  0       1                       0                       0                
  6  1280   # heater.heaCoo.k
  0       1                       0                       0                
  6  1280   # heater.heaCoo.mNor_flow
  0       1                       0                       0                
  6   257   # radiator.allowFlowReversal
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # radiator.port_a.h_outflow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # radiator.port_b.h_outflow
  0 1.0000000000000001E-001       0                       0                
  6   256   # radiator.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # radiator.m_flow_small
  0       1                       0                       0                
  6   257   # radiator.show_T
  0       0                       0                       0                
  6   256   # radiator.dp
  0 2.9314999999999998E+002       1                   10000                
  6   256   # radiator.sta_a.T
  0 2.9314999999999998E+002       1                   10000                
  6   256   # radiator.sta_b.T
  0       2                       1                       4                
  6   258   # radiator.energyDynamics
  0       2                       1                       4                
  6   258   # radiator.massDynamics
  0       2                       1                       4                
  6   258   # radiator.substanceDynamics
  0       2                       1                       4                
  6   258   # radiator.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # radiator.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # radiator.T_start
  0       1                       0                       1                
  6   256   # radiator.X_start[1]
  0 1.0000024006538475E+000       1                 1.0000000000000000E+100
  6   256   # radiator.mSenFac
  0       5                       1                 1.0000000000000000E+100
  6   258   # radiator.nEle
 -1       0                       0                       1                
  1   280   # radiator.fraRad
 -1   10000                       0                       0                
  1   280   # radiator.Q_flow_nominal
 -1 3.1814999999999998E+002       0                 1.0000000000000000E+100
  1   280   # radiator.T_a_nominal
  0 3.0314999999999998E+002       0                 1.0000000000000000E+100
  6   256   # radiator.T_b_nominal
  0 2.9314999999999998E+002       0                 1.0000000000000000E+100
  6   256   # radiator.TAir_nominal
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # radiator.TRad_nominal
 -1 1.3000000000000000E+000       0                       0                
  1   280   # radiator.n
  0 5.0000000000000001E-003       0                       0                
  6   256   # radiator.VWat
  0 1.0000000000000000E-004       0                 1.0000000000000000E+100
  6   256   # radiator.mDry
  0       1                       0                       0                
  6   257   # radiator.homotopyInitialization
  0       0                       0                       0                
  6   256   # radiator.QCon_flow
  0       0                       0                       0                
  6   256   # radiator.QRad_flow
  0     300                 2.7314999999999998E+002 3.7314999999999998E+002
  6   260   # radiator.heatPortCon.T
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   260   # radiator.heatPortRad.T
  0       2                       1                       4                
  6   258   # radiator.vol[1].energyDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[1].massDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[1].substanceDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[1].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # radiator.vol[1].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # radiator.vol[1].T_start
  0       1                       0                       1                
  6   256   # radiator.vol[1].X_start[1]
  0 1.0000024006538475E+000       1                 1.0000000000000000E+100
  6   256   # radiator.vol[1].mSenFac
  0       0                       0                       0                
  6   769   # radiator.vol[1].initialize_p
  0       0                       0                       0                
  6   257   # radiator.vol[1].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # radiator.vol[1].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # radiator.vol[1].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # radiator.vol[1].m_flow_nominal
  0       2                       0                       0                
  6   258   # radiator.vol[1].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # radiator.vol[1].m_flow_small
  0       1                       0                       0                
  6   257   # radiator.vol[1].allowFlowReversal
  0 1.0000000000000000E-003       0                       0                
  6   256   # radiator.vol[1].V
  0     300                       1                   10000                
  6   260   # radiator.vol[1].heatPort.T
  0       0                       0                       0                
  6   388   # radiator.vol[1].heatPort.Q_flow
  0 9.9558600000000008E-001       0                       0                
  6   256   # radiator.vol[1].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[1].rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.radiator.vol.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[1].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[1].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[1].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[1].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[1].state_start.T
  0       0                       0                       0                
  6  1281   # radiator.vol[1].useSteadyStateTwoPort
  0       2                       1                       4                
  6   258   # radiator.vol[2].energyDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[2].massDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[2].substanceDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[2].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # radiator.vol[2].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # radiator.vol[2].T_start
  0       1                       0                       1                
  6   256   # radiator.vol[2].X_start[1]
  0 1.0000024006538475E+000       1                 1.0000000000000000E+100
  6   256   # radiator.vol[2].mSenFac
  0       0                       0                       0                
  6   769   # radiator.vol[2].initialize_p
  0       0                       0                       0                
  6   257   # radiator.vol[2].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # radiator.vol[2].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # radiator.vol[2].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # radiator.vol[2].m_flow_nominal
  0       2                       0                       0                
  6   258   # radiator.vol[2].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # radiator.vol[2].m_flow_small
  0       1                       0                       0                
  6   257   # radiator.vol[2].allowFlowReversal
  0 1.0000000000000000E-003       0                       0                
  6   256   # radiator.vol[2].V
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # radiator.vol[2].ports[1].h_outflow
  0     300                       1                   10000                
  6   260   # radiator.vol[2].heatPort.T
  0       0                       0                       0                
  6   388   # radiator.vol[2].heatPort.Q_flow
  0 9.9558600000000008E-001       0                       0                
  6   256   # radiator.vol[2].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[2].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[2].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[2].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[2].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[2].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[2].state_start.T
  0       0                       0                       0                
  6  1281   # radiator.vol[2].useSteadyStateTwoPort
  0       2                       1                       4                
  6   258   # radiator.vol[3].energyDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[3].massDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[3].substanceDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[3].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # radiator.vol[3].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # radiator.vol[3].T_start
  0       1                       0                       1                
  6   256   # radiator.vol[3].X_start[1]
  0 1.0000024006538475E+000       1                 1.0000000000000000E+100
  6   256   # radiator.vol[3].mSenFac
  0       0                       0                       0                
  6   769   # radiator.vol[3].initialize_p
  0       0                       0                       0                
  6   257   # radiator.vol[3].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # radiator.vol[3].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # radiator.vol[3].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # radiator.vol[3].m_flow_nominal
  0       2                       0                       0                
  6   258   # radiator.vol[3].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # radiator.vol[3].m_flow_small
  0       1                       0                       0                
  6   257   # radiator.vol[3].allowFlowReversal
  0 1.0000000000000000E-003       0                       0                
  6   256   # radiator.vol[3].V
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # radiator.vol[3].ports[1].h_outflow
  0     300                       1                   10000                
  6   260   # radiator.vol[3].heatPort.T
  0       0                       0                       0                
  6   388   # radiator.vol[3].heatPort.Q_flow
  0 9.9558600000000008E-001       0                       0                
  6   256   # radiator.vol[3].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[3].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[3].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[3].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[3].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[3].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[3].state_start.T
  0       0                       0                       0                
  6  1281   # radiator.vol[3].useSteadyStateTwoPort
  0       2                       1                       4                
  6   258   # radiator.vol[4].energyDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[4].massDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[4].substanceDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[4].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # radiator.vol[4].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # radiator.vol[4].T_start
  0       1                       0                       1                
  6   256   # radiator.vol[4].X_start[1]
  0 1.0000024006538475E+000       1                 1.0000000000000000E+100
  6   256   # radiator.vol[4].mSenFac
  0       0                       0                       0                
  6   769   # radiator.vol[4].initialize_p
  0       0                       0                       0                
  6   257   # radiator.vol[4].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # radiator.vol[4].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # radiator.vol[4].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # radiator.vol[4].m_flow_nominal
  0       2                       0                       0                
  6   258   # radiator.vol[4].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # radiator.vol[4].m_flow_small
  0       1                       0                       0                
  6   257   # radiator.vol[4].allowFlowReversal
  0 1.0000000000000000E-003       0                       0                
  6   256   # radiator.vol[4].V
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # radiator.vol[4].ports[1].h_outflow
  0     300                       1                   10000                
  6   260   # radiator.vol[4].heatPort.T
  0       0                       0                       0                
  6   388   # radiator.vol[4].heatPort.Q_flow
  0 9.9558600000000008E-001       0                       0                
  6   256   # radiator.vol[4].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[4].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[4].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[4].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[4].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[4].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[4].state_start.T
  0       0                       0                       0                
  6  1281   # radiator.vol[4].useSteadyStateTwoPort
  0       2                       1                       4                
  6   258   # radiator.vol[5].energyDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[5].massDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[5].substanceDynamics
  0       2                       1                       4                
  6   258   # radiator.vol[5].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # radiator.vol[5].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # radiator.vol[5].T_start
  0       1                       0                       1                
  6   256   # radiator.vol[5].X_start[1]
  0 1.0000024006538475E+000       1                 1.0000000000000000E+100
  6   256   # radiator.vol[5].mSenFac
  0       0                       0                       0                
  6   769   # radiator.vol[5].initialize_p
  0       0                       0                       0                
  6   257   # radiator.vol[5].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # radiator.vol[5].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # radiator.vol[5].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # radiator.vol[5].m_flow_nominal
  0       2                       0                       0                
  6   258   # radiator.vol[5].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # radiator.vol[5].m_flow_small
  0       1                       0                       0                
  6   257   # radiator.vol[5].allowFlowReversal
  0 1.0000000000000000E-003       0                       0                
  6   256   # radiator.vol[5].V
  0     300                       1                   10000                
  6   260   # radiator.vol[5].heatPort.T
  0       0                       0                       0                
  6   388   # radiator.vol[5].heatPort.Q_flow
  0 9.9558600000000008E-001       0                       0                
  6   256   # radiator.vol[5].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[5].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[5].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[5].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[5].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[5].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[5].state_start.T
  0       0                       0                       0                
  6  1281   # radiator.vol[5].useSteadyStateTwoPort
  0    4184                       0                       0                
  6  1280   # radiator.cp_nominal
  0       0                       0                       0                
  6  1280   # radiator.QEle_flow_nominal[1]
  0       0                       0                       0                
  6  1280   # radiator.QEle_flow_nominal[2]
  0       0                       0                       0                
  6  1280   # radiator.QEle_flow_nominal[3]
  0       0                       0                       0                
  6  1280   # radiator.QEle_flow_nominal[4]
  0       0                       0                       0                
  6  1280   # radiator.QEle_flow_nominal[5]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # radiator.TWat_nominal[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # radiator.TWat_nominal[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # radiator.TWat_nominal[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # radiator.TWat_nominal[4]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # radiator.TWat_nominal[5]
  0       0                       0                       0                
  6  1280   # radiator.dTRad_nominal[1]
  0       0                       0                       0                
  6  1280   # radiator.dTRad_nominal[2]
  0       0                       0                       0                
  6  1280   # radiator.dTRad_nominal[3]
  0       0                       0                       0                
  6  1280   # radiator.dTRad_nominal[4]
  0       0                       0                       0                
  6  1280   # radiator.dTRad_nominal[5]
  0       0                       0                       0                
  6  1280   # radiator.dTCon_nominal[1]
  0       0                       0                       0                
  6  1280   # radiator.dTCon_nominal[2]
  0       0                       0                       0                
  6  1280   # radiator.dTCon_nominal[3]
  0       0                       0                       0                
  6  1280   # radiator.dTCon_nominal[4]
  0       0                       0                       0                
  6  1280   # radiator.dTCon_nominal[5]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # radiator.UAEle
  0       0                       0                       0                
  6  1280   # radiator.k
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # radiator.preCon[1].T_ref
 -1       0                       0                       0                
  1  1304   # radiator.preCon[1].alpha
  0       0                       0                       0                
  6  1412   # radiator.preCon[1].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # radiator.preCon[2].T_ref
 -1       0                       0                       0                
  1  1304   # radiator.preCon[2].alpha
  0       0                       0                       0                
  6  1412   # radiator.preCon[2].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # radiator.preCon[3].T_ref
 -1       0                       0                       0                
  1  1304   # radiator.preCon[3].alpha
  0       0                       0                       0                
  6  1412   # radiator.preCon[3].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # radiator.preCon[4].T_ref
 -1       0                       0                       0                
  1  1304   # radiator.preCon[4].alpha
  0       0                       0                       0                
  6  1412   # radiator.preCon[4].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # radiator.preCon[5].T_ref
 -1       0                       0                       0                
  1  1304   # radiator.preCon[5].alpha
  0       0                       0                       0                
  6  1412   # radiator.preCon[5].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # radiator.preRad[1].T_ref
 -1       0                       0                       0                
  1  1304   # radiator.preRad[1].alpha
  0       0                       0                       0                
  6  1412   # radiator.preRad[1].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # radiator.preRad[2].T_ref
 -1       0                       0                       0                
  1  1304   # radiator.preRad[2].alpha
  0       0                       0                       0                
  6  1412   # radiator.preRad[2].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # radiator.preRad[3].T_ref
 -1       0                       0                       0                
  1  1304   # radiator.preRad[3].alpha
  0       0                       0                       0                
  6  1412   # radiator.preRad[3].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # radiator.preRad[4].T_ref
 -1       0                       0                       0                
  1  1304   # radiator.preRad[4].alpha
  0       0                       0                       0                
  6  1412   # radiator.preRad[4].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # radiator.preRad[5].T_ref
 -1       0                       0                       0                
  1  1304   # radiator.preRad[5].alpha
  0       0                       0                       0                
  6  1412   # radiator.preRad[5].port.Q_flow
  0       0                       0                       0                
  6  1280   # radiator.dTCon[1]
  0       0                       0                       0                
  6  1280   # radiator.dTCon[2]
  0       0                       0                       0                
  6  1280   # radiator.dTCon[3]
  0       0                       0                       0                
  6  1280   # radiator.dTCon[4]
  0       0                       0                       0                
  6  1280   # radiator.dTCon[5]
  0       0                       0                       0                
  6  1280   # radiator.dTRad[1]
  0       0                       0                       0                
  6  1280   # radiator.dTRad[2]
  0       0                       0                       0                
  6  1280   # radiator.dTRad[3]
  0       0                       0                       0                
  6  1280   # radiator.dTRad[4]
  0       0                       0                       0                
  6  1280   # radiator.dTRad[5]
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # radiator.preSumCon.T_ref
 -1       0                       0                       0                
  1  1304   # radiator.preSumCon.alpha
  0       0                       0                       0                
  6  1280   # radiator.preSumCon.Q_flow
  0       5                       0                       0                
  6  1282   # radiator.sumCon.nin
  0       0                       0                       0                
  6  1280   # radiator.sumCon.u[1]
  0       0                       0                       0                
  6  1280   # radiator.sumCon.u[2]
  0       0                       0                       0                
  6  1280   # radiator.sumCon.u[3]
  0       0                       0                       0                
  6  1280   # radiator.sumCon.u[4]
  0       0                       0                       0                
  6  1280   # radiator.sumCon.u[5]
  0      -1                       0                       0                
  6  1280   # radiator.sumCon.k[1]
  0      -1                       0                       0                
  6  1280   # radiator.sumCon.k[2]
  0      -1                       0                       0                
  6  1280   # radiator.sumCon.k[3]
  0      -1                       0                       0                
  6  1280   # radiator.sumCon.k[4]
  0      -1                       0                       0                
  6  1280   # radiator.sumCon.k[5]
  0       5                       0                       0                
  6  1282   # radiator.sumRad.nin
  0       0                       0                       0                
  6  1280   # radiator.sumRad.u[1]
  0       0                       0                       0                
  6  1280   # radiator.sumRad.u[2]
  0       0                       0                       0                
  6  1280   # radiator.sumRad.u[3]
  0       0                       0                       0                
  6  1280   # radiator.sumRad.u[4]
  0       0                       0                       0                
  6  1280   # radiator.sumRad.u[5]
  0       0                       0                       0                
  6  1280   # radiator.sumRad.y
  0      -1                       0                       0                
  6  1280   # radiator.sumRad.k[1]
  0      -1                       0                       0                
  6  1280   # radiator.sumRad.k[2]
  0      -1                       0                       0                
  6  1280   # radiator.sumRad.k[3]
  0      -1                       0                       0                
  6  1280   # radiator.sumRad.k[4]
  0      -1                       0                       0                
  6  1280   # radiator.sumRad.k[5]
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # radiator.preSumRad.T_ref
 -1       0                       0                       0                
  1  1304   # radiator.preSumRad.alpha
  0       1                       1                       4                
  6   258   # pipe2.energyDynamics
  0       1                       1                       4                
  6   258   # pipe2.massDynamics
  0       1                       1                       4                
  6   258   # pipe2.substanceDynamics
  0       1                       1                       4                
  6   258   # pipe2.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # pipe2.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # pipe2.T_start
 -1       1                       0                       1                
  1   280   # pipe2.X_start[1]
 -1       1                       1                 1.0000000000000000E+100
  1   280   # pipe2.mSenFac
  0       1                       0                       0                
  6   257   # pipe2.allowFlowReversal
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   260   # pipe2.port_b.p
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pipe2.port_b.h_outflow
  0 1.0000000000000001E-001       0                       0                
  6   256   # pipe2.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe2.m_flow_small
  0       1                       0                       0                
  6   257   # pipe2.show_T
  0       0                       0                       0                
  6   256   # pipe2.dp
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe2.sta_a.T
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe2.sta_b.T
  0       1                       0                       0                
  6   257   # pipe2.computeFlowResistance
  0       0                       0                       0                
  6   257   # pipe2.from_dp
  0 3.1062213650480036E+001       0                 1.0000000000000000E+100
  6   256   # pipe2.dp_nominal
  0       0                       0                       0                
  6   257   # pipe2.linearizeFlowResistance
 -1 1.0000000000000001E-001       0                       0                
  1   280   # pipe2.deltaM
  0       2                       1                 1.0000000000000000E+100
  6   258   # pipe2.nNodes
 -1 2.0000000000000000E-002       0                       0                
  1   280   # pipe2.thicknessIns
 -1 4.0000000000000001E-002       0                       0                
  1   280   # pipe2.lambdaIns
  0 2.9199138584321011E-002       0                       0                
  6   256   # pipe2.diameter
  0       1                       0                       0                
  6   256   # pipe2.length
 -1    4000                       0                       0                
  1   280   # pipe2.ReC
  0       0                       0                       0                
  6   257   # pipe2.useMultipleHeatPorts
  0       1                       0                       0                
  6   257   # pipe2.res.allowFlowReversal
  0 1.0000000000000001E-001       0                       0                
  6   256   # pipe2.res.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe2.res.m_flow_small
  0       1                       0                       0                
  6   257   # pipe2.res.show_T
  0       0                       0                       0                
  6   256   # pipe2.res.dp
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe2.res.sta_a.T
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe2.res.sta_b.T
  0       0                       0                       0                
  6   257   # pipe2.res.from_dp
  0 3.1062213650480036E+001       0                       0                
  6   256   # pipe2.res.dp_nominal
  0       1                       0                       0                
  6   257   # pipe2.res.homotopyInitialization
  0       0                       0                       0                
  6   257   # pipe2.res.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # pipe2.res.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # pipe2.res.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # pipe2.res.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # pipe2.res.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # pipe2.res.m_flow_nominal_pos
  0 3.1062213650480036E+001       0                       0                
  6  1280   # pipe2.res.dp_nominal_pos
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe2.res.X_default[1]
  0       1                       0                       0                
  6   257   # pipe2.res.use_dh
  0 2.9199138584321011E-002       0                       0                
  6   256   # pipe2.res.dh
  0       0                       0                 1.0000000000000000E+100
  6   256   # pipe2.res.ReC
  0 2.9999999999999999E-001 1.0000000000000000E-002 1.0000000000000000E+100
  6   256   # pipe2.res.deltaM
  0 1.7942534862430314E-002       0                       0                
  6   256   # pipe2.res.k
  0       1                       0                       0                
  6  1281   # pipe2.res.computeFlowResistance
  0       1                       1                       4                
  6   258   # pipe2.vol[1].energyDynamics
  0       1                       1                       4                
  6   258   # pipe2.vol[1].massDynamics
  0       1                       1                       4                
  6   258   # pipe2.vol[1].substanceDynamics
  0       1                       1                       4                
  6   258   # pipe2.vol[1].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # pipe2.vol[1].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe2.vol[1].T_start
  0       0                       0                       1                
  6   256   # pipe2.vol[1].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pipe2.vol[1].mSenFac
  0       0                       0                       0                
  6   769   # pipe2.vol[1].initialize_p
  0       1                       0                       0                
  6   257   # pipe2.vol[1].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # pipe2.vol[1].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # pipe2.vol[1].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # pipe2.vol[1].m_flow_nominal
  0       2                       0                       0                
  6   258   # pipe2.vol[1].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe2.vol[1].m_flow_small
  0       1                       0                       0                
  6   257   # pipe2.vol[1].allowFlowReversal
  0 3.3481118992566516E-004       0                       0                
  6   256   # pipe2.vol[1].V
  0     300                       1                   10000                
  6   260   # pipe2.vol[1].heatPort.T
  0       0                       0                       0                
  6   388   # pipe2.vol[1].heatPort.Q_flow
  0 3.3333333333333326E-001       0                       0                
  6   256   # pipe2.vol[1].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[1].rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe2.vol.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe2.vol[1].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe2.vol[1].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[1].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe2.vol[1].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe2.vol[1].state_start.T
  0       0                       0                       0                
  6  1281   # pipe2.vol[1].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # pipe2.vol[2].energyDynamics
  0       1                       1                       4                
  6   258   # pipe2.vol[2].massDynamics
  0       1                       1                       4                
  6   258   # pipe2.vol[2].substanceDynamics
  0       1                       1                       4                
  6   258   # pipe2.vol[2].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # pipe2.vol[2].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe2.vol[2].T_start
  0       0                       0                       1                
  6   256   # pipe2.vol[2].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pipe2.vol[2].mSenFac
  0       0                       0                       0                
  6   769   # pipe2.vol[2].initialize_p
  0       1                       0                       0                
  6   257   # pipe2.vol[2].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # pipe2.vol[2].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # pipe2.vol[2].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # pipe2.vol[2].m_flow_nominal
  0       2                       0                       0                
  6   258   # pipe2.vol[2].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe2.vol[2].m_flow_small
  0       1                       0                       0                
  6   257   # pipe2.vol[2].allowFlowReversal
  0 3.3481118992566516E-004       0                       0                
  6   256   # pipe2.vol[2].V
  0     300                       1                   10000                
  6   260   # pipe2.vol[2].heatPort.T
  0       0                       0                       0                
  6   388   # pipe2.vol[2].heatPort.Q_flow
  0 3.3333333333333326E-001       0                       0                
  6   256   # pipe2.vol[2].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[2].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe2.vol[2].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe2.vol[2].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[2].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe2.vol[2].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe2.vol[2].state_start.T
  0       0                       0                       0                
  6  1281   # pipe2.vol[2].useSteadyStateTwoPort
  0       0                       0                       0                
  6   256   # pipe2.conPipWal[1].dT
  0       0                       0                       0                
  6   256   # pipe2.conPipWal[1].G
  0       0                       0                       0                
  6   256   # pipe2.conPipWal[2].dT
  0       0                       0                       0                
  6   256   # pipe2.conPipWal[2].G
  0       2                       1                 1.0000000000000000E+100
  6   258   # pipe2.colAllToOne.m
  0       0                       0                       0                
  6   388   # pipe2.heatPort.Q_flow
  0 6.6962237985133033E-004       0                       0                
  6  1280   # pipe2.VPipe
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe2.X_default[1]
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # pipe2.state_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # pipe2.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe2.rho_default
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # pipe2.mu_default
  0 1.4999999999999999E-001       0                       0                
  6  1280   # pipe2.v_nominal
  0 2.5000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # pipe2.roughness
  0 1.5531106825240018E+001       0                       0                
  6  1280   # pipe2.dpStraightPipe_nominal
 -1 3.1814999999999998E+002       0                 1.0000000000000000E+100
  1   280   # TSet.k
  0       1                       1                       4                
  6   258   # pipe3.energyDynamics
  0       1                       1                       4                
  6   258   # pipe3.massDynamics
  0       1                       1                       4                
  6   258   # pipe3.substanceDynamics
  0       1                       1                       4                
  6   258   # pipe3.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # pipe3.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # pipe3.T_start
 -1       1                       0                       1                
  1   280   # pipe3.X_start[1]
 -1       1                       1                 1.0000000000000000E+100
  1   280   # pipe3.mSenFac
  0       1                       0                       0                
  6   257   # pipe3.allowFlowReversal
  0       0                       0                 1.0000000000000000E+008
  6   260   # pipe3.port_a.p
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pipe3.port_a.h_outflow
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   260   # pipe3.port_b.p
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pipe3.port_b.h_outflow
  0 1.0000000000000001E-001       0                       0                
  6   256   # pipe3.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe3.m_flow_small
  0       1                       0                       0                
  6   257   # pipe3.show_T
  0       0                       0                       0                
  6   256   # pipe3.dp
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe3.sta_a.T
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe3.sta_b.T
  0       1                       0                       0                
  6   257   # pipe3.computeFlowResistance
  0       0                       0                       0                
  6   257   # pipe3.from_dp
  0 1.8795347153484360E+002       0                 1.0000000000000000E+100
  6   256   # pipe3.dp_nominal
  0       0                       0                       0                
  6   257   # pipe3.linearizeFlowResistance
 -1 1.0000000000000001E-001       0                       0                
  1   280   # pipe3.deltaM
  0       2                       1                 1.0000000000000000E+100
  6   258   # pipe3.nNodes
 -1 2.0000000000000000E-002       0                       0                
  1   280   # pipe3.thicknessIns
 -1 4.0000000000000001E-002       0                       0                
  1   280   # pipe3.lambdaIns
  0 2.0000000000000000E-002       0                       0                
  6   256   # pipe3.diameter
  0       1                       0                       0                
  6   256   # pipe3.length
 -1    4000                       0                       0                
  1   280   # pipe3.ReC
  0       0                       0                       0                
  6   257   # pipe3.useMultipleHeatPorts
  0       1                       0                       0                
  6   257   # pipe3.res.allowFlowReversal
  0 1.0000000000000001E-001       0                       0                
  6   256   # pipe3.res.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe3.res.m_flow_small
  0       1                       0                       0                
  6   257   # pipe3.res.show_T
  0       0                       0                       0                
  6   256   # pipe3.res.dp
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe3.res.sta_a.T
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe3.res.sta_b.T
  0       0                       0                       0                
  6   257   # pipe3.res.from_dp
  0 1.8795347153484360E+002       0                       0                
  6   256   # pipe3.res.dp_nominal
  0       1                       0                       0                
  6   257   # pipe3.res.homotopyInitialization
  0       0                       0                       0                
  6   257   # pipe3.res.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # pipe3.res.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # pipe3.res.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # pipe3.res.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # pipe3.res.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # pipe3.res.m_flow_nominal_pos
  0 1.8795347153484360E+002       0                       0                
  6  1280   # pipe3.res.dp_nominal_pos
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe3.res.X_default[1]
  0       1                       0                       0                
  6   257   # pipe3.res.use_dh
  0 2.0000000000000000E-002       0                       0                
  6   256   # pipe3.res.dh
  0       0                       0                 1.0000000000000000E+100
  6   256   # pipe3.res.ReC
  0 2.9999999999999999E-001 1.0000000000000000E-002 1.0000000000000000E+100
  6   256   # pipe3.res.deltaM
  0 7.2941522523157767E-003       0                       0                
  6   256   # pipe3.res.k
  0       1                       0                       0                
  6  1281   # pipe3.res.computeFlowResistance
  0       1                       1                       4                
  6   258   # pipe3.vol[1].energyDynamics
  0       1                       1                       4                
  6   258   # pipe3.vol[1].massDynamics
  0       1                       1                       4                
  6   258   # pipe3.vol[1].substanceDynamics
  0       1                       1                       4                
  6   258   # pipe3.vol[1].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # pipe3.vol[1].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe3.vol[1].T_start
  0       0                       0                       1                
  6   256   # pipe3.vol[1].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pipe3.vol[1].mSenFac
  0       0                       0                       0                
  6   769   # pipe3.vol[1].initialize_p
  0       1                       0                       0                
  6   257   # pipe3.vol[1].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # pipe3.vol[1].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # pipe3.vol[1].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # pipe3.vol[1].m_flow_nominal
  0       2                       0                       0                
  6   258   # pipe3.vol[1].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe3.vol[1].m_flow_small
  0       1                       0                       0                
  6   257   # pipe3.vol[1].allowFlowReversal
  0 1.5707963267948965E-004       0                       0                
  6   256   # pipe3.vol[1].V
  0     300                       1                   10000                
  6   260   # pipe3.vol[1].heatPort.T
  0       0                       0                       0                
  6   388   # pipe3.vol[1].heatPort.Q_flow
  0 1.5638628318084238E-001       0                       0                
  6   256   # pipe3.vol[1].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[1].rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe3.vol.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe3.vol[1].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe3.vol[1].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[1].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe3.vol[1].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe3.vol[1].state_start.T
  0       0                       0                       0                
  6  1281   # pipe3.vol[1].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # pipe3.vol[2].energyDynamics
  0       1                       1                       4                
  6   258   # pipe3.vol[2].massDynamics
  0       1                       1                       4                
  6   258   # pipe3.vol[2].substanceDynamics
  0       1                       1                       4                
  6   258   # pipe3.vol[2].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # pipe3.vol[2].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe3.vol[2].T_start
  0       0                       0                       1                
  6   256   # pipe3.vol[2].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pipe3.vol[2].mSenFac
  0       0                       0                       0                
  6   769   # pipe3.vol[2].initialize_p
  0       1                       0                       0                
  6   257   # pipe3.vol[2].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # pipe3.vol[2].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # pipe3.vol[2].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # pipe3.vol[2].m_flow_nominal
  0       2                       0                       0                
  6   258   # pipe3.vol[2].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe3.vol[2].m_flow_small
  0       1                       0                       0                
  6   257   # pipe3.vol[2].allowFlowReversal
  0 1.5707963267948965E-004       0                       0                
  6   256   # pipe3.vol[2].V
  0     300                       1                   10000                
  6   260   # pipe3.vol[2].heatPort.T
  0       0                       0                       0                
  6   388   # pipe3.vol[2].heatPort.Q_flow
  0 1.5638628318084238E-001       0                       0                
  6   256   # pipe3.vol[2].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[2].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe3.vol[2].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe3.vol[2].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[2].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe3.vol[2].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe3.vol[2].state_start.T
  0       0                       0                       0                
  6  1281   # pipe3.vol[2].useSteadyStateTwoPort
  0       0                       0                       0                
  6   256   # pipe3.conPipWal[1].dT
  0       0                       0                       0                
  6   256   # pipe3.conPipWal[1].G
  0       0                       0                       0                
  6   256   # pipe3.conPipWal[2].dT
  0       0                       0                       0                
  6   256   # pipe3.conPipWal[2].G
  0       2                       1                 1.0000000000000000E+100
  6   258   # pipe3.colAllToOne.m
  0       0                       0                       0                
  6   388   # pipe3.heatPort.Q_flow
  0 3.1415926535897931E-004       0                       0                
  6  1280   # pipe3.VPipe
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe3.X_default[1]
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # pipe3.state_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # pipe3.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe3.rho_default
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # pipe3.mu_default
 -1 1.4999999999999999E-001       0                       0                
  1  1304   # pipe3.v_nominal
  0 2.5000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # pipe3.roughness
  0 9.3976735767421800E+001       0                       0                
  6  1280   # pipe3.dpStraightPipe_nominal
 -1       0                       0                       1                
  1   280   # datVal.y[1]
 -1 1.6669999999999999E-001       0                       1                
  1   280   # datVal.y[2]
 -1 3.3329999999999999E-001       0                       1                
  1   280   # datVal.y[3]
 -1 5.0000000000000000E-001       0                       1                
  1   280   # datVal.y[4]
 -1 6.6669999999999996E-001       0                       1                
  1   280   # datVal.y[5]
 -1       1                       0                       1                
  1   280   # datVal.y[6]
 -1       0                       0                       1                
  1   280   # datVal.phi[1]
 -1 2.9230769230769232E-001       0                       1                
  1   280   # datVal.phi[2]
 -1 5.3846153846153844E-001       0                       1                
  1   280   # datVal.phi[3]
 -1 6.9230769230769229E-001       0                       1                
  1   280   # datVal.phi[4]
 -1 7.6923076923076916E-001       0                       1                
  1   280   # datVal.phi[5]
 -1       1                       0                       1                
  1   280   # datVal.phi[6]
  0       1                       0                       0                
  6   257   # valve.allowFlowReversal
  0 1.0000000000000001E-001       0                       0                
  6   256   # valve.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # valve.m_flow_small
  0       0                       0                       0                
  6   257   # valve.show_T
  0       0                       0                       0                
  6   288   # valve.dp
  0       1                       0                       0                
  6   257   # valve.from_dp
  0       0                       0                       0                
  6   256   # valve.dp_nominal
  0       1                       0                       0                
  6   257   # valve.homotopyInitialization
  0       0                       0                       0                
  6   257   # valve.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # valve.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # valve.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # valve.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # valve.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # valve.m_flow_nominal_pos
  0       0                       0                       0                
  6  1280   # valve.dp_nominal_pos
  0       1                       0                       1                
  6  1280   # _GlobalScope.valve.X_default[1]
  0       2                       1                       4                
  6   258   # valve.CvData
 -1 6.5000000000000002E-001       0                       0                
  1   280   # valve.Kv
  0       0                       0                       0                
  6   256   # valve.Cv
  0       0                       0                       0                
  6   256   # valve.Av
 -1 2.0000000000000000E-002       0                       0                
  1   280   # valve.deltaM
  0       0                       0                 1.0000000000000000E+100
  6   256   # valve.dpValve_nominal
 -1 9.9558600000000001E+002       0                 1.0000000000000000E+100
  1   280   # valve.rhoStd
  0       0                       0                 1.0000000000000000E+100
  6  1280   # valve.Kv_SI
  0       0                       0                       0                
  6   257   # valve.filteredOpening
 -1     120                       0                       0                
  1   280   # valve.riseTime
 -1       4                       1                       4                
  1   282   # valve.init
 -1       1                       0                       0                
  1   280   # valve.y_start
  0       0                       0                       1                
  6   256   # valve.y
  0       0                       0                 1.0000000000000000E+100
  6   256   # valve.dpFixed_nominal
  0 1.0000000000000000E-010 1.0000000000000000E-010       1                
  6   256   # valve.l
  0       0                       0                       0                
  6   256   # valve.phi
  0       0                       0                 1.0000000000000000E+100
  6  1280   # valve.kFixed
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6  1280   # valve.kVal
  0       0                       0                       1                
  6   256   # valve.flowCharacteristics.y[1]
  0       0                       0                       1                
  6   256   # valve.flowCharacteristics.y[2]
  0       0                       0                       1                
  6   256   # valve.flowCharacteristics.y[3]
  0       0                       0                       1                
  6   256   # valve.flowCharacteristics.y[4]
  0       0                       0                       1                
  6   256   # valve.flowCharacteristics.y[5]
  0       0                       0                       1                
  6   256   # valve.flowCharacteristics.y[6]
  0       0                       0                       1                
  6   256   # valve.flowCharacteristics.phi[1]
  0       0                       0                       1                
  6   256   # valve.flowCharacteristics.phi[2]
  0       0                       0                       1                
  6   256   # valve.flowCharacteristics.phi[3]
  0       0                       0                       1                
  6   256   # valve.flowCharacteristics.phi[4]
  0       0                       0                       1                
  6   256   # valve.flowCharacteristics.phi[5]
  0       0                       0                       1                
  6   256   # valve.flowCharacteristics.phi[6]
  0       1                       0                       0                
  6  1282   # valve.phiLooUp.n
  0       0                       0                       0                
  6  1281   # valve.phiLooUp.tableOnFile
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.table[1, 1]
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.table[1, 2]
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.table[2, 1]
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.table[2, 2]
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.table[3, 1]
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.table[3, 2]
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.table[4, 1]
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.table[4, 2]
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.table[5, 1]
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.table[5, 2]
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.table[6, 1]
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.table[6, 2]
 -1       1                       0                       0                
  1  1305   # valve.phiLooUp.verboseRead
  0       2                       0                       0                
  6  1282   # valve.phiLooUp.columns[1]
  0       2                       1                       5                
  6  1282   # valve.phiLooUp.smoothness
  0       0                       0                       0                
  6  1282   # valve.phiLooUp.tableID.id
  0       0                       0                       0                
  6  1280   # valve.phiLooUp.tableOnFileRead
  0       0                       0                       0                
  6   256   # thermostat.controlError
  0       1                       1                       4                
  6   258   # thermostat.controllerType
 -1 5.0000000000000000E-001       0                 1.0000000000000000E+100
  1   280   # thermostat.k
 -1 5.0000000000000000E-001 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # thermostat.Ti
 -1 1.0000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # thermostat.Td
 -1       1                       0                       0                
  1   280   # thermostat.yMax
 -1       0                       0                       0                
  1   280   # thermostat.yMin
 -1       1                       0                 1.0000000000000000E+100
  1   280   # thermostat.wp
 -1       0                       0                 1.0000000000000000E+100
  1   280   # thermostat.wd
 -1 9.0000000000000002E-001 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # thermostat.Ni
 -1      10                 1.0000000000000000E-013 1.0000000000000000E+100
  1   280   # thermostat.Nd
  0       5                       1                       5                
  6   258   # thermostat.initType
  0       1                       0                       0                
  6   257   # thermostat.limitsAtInit
 -1       0                       0                       0                
  1   280   # thermostat.xi_start
 -1       0                       0                       0                
  1   280   # thermostat.xd_start
 -1       0                       0                       0                
  1   280   # thermostat.y_start
  0       0                       0                       0                
  6   257   # thermostat.strict
  0       1                       0                       0                
  6   768   # thermostat.unitTime
  0       0                       0                       0                
  6   256   # thermostat.addP.y
  0       0                       0                       0                
  6   256   # thermostat.addP.k1
 -1      -1                       0                       0                
  1   280   # thermostat.addP.k2
 -1       1                       0                       0                
  1   280   # thermostat.P.k
  0       0                       0                       0                
  6   256   # thermostat.P.y
  0       1                       0                       0                
  6   256   # thermostat.gainPID.k
  0       0                       0                       0                
  6   256   # thermostat.gainPID.u
  0       0                       0                       0                
  6   256   # thermostat.gainPID.y
 -1       1                       0                       0                
  1   280   # thermostat.addPID.k1
 -1       1                       0                       0                
  1   280   # thermostat.addPID.k2
 -1       1                       0                       0                
  1   280   # thermostat.addPID.k3
  0       1                       0                       0                
  6   256   # thermostat.limiter.uMax
  0       0                       0                       0                
  6   256   # thermostat.limiter.uMin
  0       0                       0                       0                
  6   257   # thermostat.limiter.strict
  0       1                       0                       0                
  6   257   # thermostat.limiter.limitsAtInit
  0       0                       0                       0                
  6   769   # thermostat.with_I
  0       0                       0                       0                
  6   769   # thermostat.with_D
 -1       0                       0                       0                
  1   280   # thermostat.Dzero.k
 -1       0                       0                       0                
  1   280   # thermostat.Izero.k
  0       1                       1                       4                
  6   258   # pump1.energyDynamics
  0       1                       1                       4                
  6   258   # pump1.massDynamics
  0       1                       1                       4                
  6   258   # pump1.substanceDynamics
  0       1                       1                       4                
  6   258   # pump1.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # pump1.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # pump1.T_start
 -1       1                       0                       1                
  1   280   # pump1.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pump1.mSenFac
  0       1                       0                       0                
  6   257   # pump1.allowFlowReversal
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pump1.port_a.h_outflow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pump1.port_b.h_outflow
  0 1.0000000000000001E-001       0                       0                
  6   256   # pump1.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pump1.m_flow_small
  0       0                       0                       0                
  6   257   # pump1.show_T
  0       0                       0                       0                
  6   256   # pump1.dp
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump1.per.pressure.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump1.per.pressure.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump1.per.pressure.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump1.per.pressure.dp[2]
 -1       0                       0                       0                
  1   281   # pump1.per.use_powerCharacteristic
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pump1.per.hydraulicEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # pump1.per.hydraulicEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pump1.per.motorEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # pump1.per.motorEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pump1.per.power.V_flow[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pump1.per.power.P[1]
 -1       1                       0                       0                
  1   281   # pump1.per.motorCooledByFluid
 -1       1                       0                 1.0000000000000000E+100
  1   280   # pump1.per.speed_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump1.per.constantSpeed
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump1.per.speeds[1]
 -1    1500                       0                       0                
  1   280   # pump1.per.speed_rpm_nominal
  0       0                       0                       0                
  6   256   # pump1.per.constantSpeed_rpm
  0       0                       0                       0                
  6   256   # pump1.per.speeds_rpm[1]
  0       0                       0                       0                
  6   257   # pump1.per.havePressureCurve
  0       3                       1                       3                
  6   258   # pump1.inputType
  0   10000                       0                       0                
  6   256   # pump1.constInput
  0   10000                       0                       0                
  6   256   # pump1.stageInputs[1]
  0       0                       0                       0                
  6   257   # pump1.computePowerUsingSimilarityLaws
  0       1                       0                       0                
  6   257   # pump1.addPowerToMedium
 -1       0                       0                       0                
  1   281   # pump1.nominalValuesDefineDefaultPressureCurve
  0       1                       0                       0                
  6   256   # pump1.tau
  0       1                       0                       0                
  6   257   # pump1.filteredSpeed
 -1      30                       0                       0                
  1   280   # pump1.riseTime
  0       4                       1                       4                
  6   258   # pump1.init
 -1       0                       0                       1                
  1   280   # pump1.y_start
  0       1                       0                 1.0000000000000000E+100
  6   256   # pump1.y_actual
  0       0                       0                       0                
  6   256   # pump1.P
  0     300                       1                   10000                
  6   260   # pump1.heatPort.T
  0       0                       0                       0                
  6   388   # pump1.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # pump1.VMachine_flow
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump1.dpMachine
  0       0                       0                       1                
  6   256   # pump1.eta
  0       0                       0                       1                
  6   256   # pump1.etaHyd
  0       0                       0                       1                
  6   256   # pump1.etaMot
  0       3                       1                       3                
  6  1282   # pump1.preVar
  0       0                       0                       0                
  6  1281   # pump1.speedIsInput
  0       2                       0                       0                
  6  1282   # pump1.nOri
  0       1                       0                       0                
  6  1281   # pump1.haveVMax
  0 1.0044335697769957E-004       0                       0                
  6  1280   # pump1.V_flow_max
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump1.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pump1.sta_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pump1.sta_start.T
  0       0                       0                       0                
  6  1280   # pump1.h_outflow_start
  0       1                       1                       4                
  6  1282   # pump1.vol.energyDynamics
  0       1                       1                       4                
  6  1282   # pump1.vol.massDynamics
  0       1                       1                       4                
  6  1282   # pump1.vol.substanceDynamics
  0       1                       1                       4                
  6  1282   # pump1.vol.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pump1.vol.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pump1.vol.T_start
  0       0                       0                       1                
  6  1280   # pump1.vol.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pump1.vol.mSenFac
  0       0                       0                       0                
  6   769   # pump1.vol.initialize_p
  0       1                       0                       0                
  6  1281   # pump1.vol.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # pump1.vol.simplify_mWat_flow
  0       0                       0                       0                
  6  1281   # pump1.vol.use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # pump1.vol.m_flow_nominal
  0       2                       0                       0                
  6  1282   # pump1.vol.nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # pump1.vol.m_flow_small
  0       1                       0                       0                
  6  1281   # pump1.vol.allowFlowReversal
  0 1.0044335697769957E-004       0                       0                
  6  1280   # pump1.vol.V
  0       0                       0                       0                
  6  1412   # pump1.vol.heatPort.Q_flow
  0 1.0000000000000001E-001       0                       0                
  6  1280   # pump1.vol.m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump1.vol.rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.pump1.vol.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pump1.vol.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pump1.vol.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump1.vol.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pump1.vol.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pump1.vol.state_start.T
  0       0                       0                       0                
  6  1281   # pump1.vol.useSteadyStateTwoPort
  0       1                       0                       0                
  6  1280   # pump1.vol.tau
  0 1.0044335697769957E-004       0                       0                
  6  1280   # pump1.vol.V_nominal
  0       1                       1                       4                
  6  1282   # pump1.filter.analogFilter
  0       1                       1                       4                
  6  1282   # pump1.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # pump1.filter.order
  0       0                       0                       0                
  6  1280   # pump1.filter.f_cut
 -1       1                       0                       0                
  1  1304   # pump1.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # pump1.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # pump1.filter.f_min
 -1       1                       0                       0                
  1  1305   # pump1.filter.normalized
  0       4                       1                       4                
  6  1282   # pump1.filter.init
  0       2                       0                       0                
  6  1282   # pump1.filter.nx
 -1       0                       0                       0                
  1  1304   # pump1.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # pump1.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # pump1.filter.y_start
  0   10000                       0                       0                
  6  1280   # pump1.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # pump1.filter.x[1]
  0       0                       0                       0                
  3  1280   # pump1.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # pump1.filter.x[2]
  0       0                       0                       0                
  3  1280   # pump1.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # pump1.filter.ncr
  0       0                       0                       0                
  6  1282   # pump1.filter.nc0
  0       0                       0                       0                
  6  1282   # pump1.filter.na
  0       2                       0                       0                
  6  1282   # pump1.filter.nr
  0       0                       0                       0                
  6  1280   # pump1.filter.cr[1]
  0       0                       0                       0                
  6  1280   # pump1.filter.cr[2]
  0       0                       0                       0                
  6  1280   # pump1.filter.r[1]
  0       0                       0                       0                
  6  1280   # pump1.filter.r[2]
  0       0                       0                       0                
  6  1280   # pump1.filter.uu[1]
  0       1                       0                       0                
  6  1281   # pump1.preSou.allowFlowReversal
  0       0                       0                       0                
  6  1280   # pump1.preSou.dp_start
 -1       0                 -100000                  100000                
  1  1304   # pump1.preSou.m_flow_start
  0 1.0000000000000001E-005 -100000                  100000                
  6  1280   # pump1.preSou.m_flow_small
  0       0                       0                       0                
  6  1281   # pump1.preSou.show_T
  0       1                       0                       0                
  6  1281   # pump1.preSou.show_V_flow
  0       0                       0                       0                
  6  1280   # pump1.preSou.V_flow
  0       1                       0                       1                
  6  1280   # _GlobalScope.pump1.preSou.X_default[1]
  0       0                       0                       0                
  6  1281   # pump1.preSou.control_m_flow
  0       0                       0                       0                
  6  1280   # pump1.preSou.m_flow_internal
  0       1                       0                       0                
  6  1281   # pump1.heaDis.homotopyInitialization
  0       0                       0                       0                
  6  1281   # pump1.heaDis.motorCooledByFluid
  0 1.0044335697769957E-007       0                       0                
  6  1280   # pump1.heaDis.delta_V_flow
  0       0                       0                       0                
  6  1280   # pump1.heaDis.Q_flow
  0       0                       0                       0                
  6  1280   # pump1.heaDis.WHyd
  0       0                       0                       0                
  6  1280   # pump1.heaDis.QThe_flow
  0       1                       0                       0                
  6  1280   # pump1.PToMed.k1
  0       1                       0                       0                
  6  1280   # pump1.PToMed.k2
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # pump1.prePow.T_ref
  0       0                       0                       0                
  6  1280   # pump1.prePow.alpha
  0 9.9558600000000001E+002       0                       0                
  6  1280   # pump1.rho_inlet.y
  0       1                       0                       0                
  6  1281   # pump1.senMasFlo.allowFlowReversal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.senMasFlo.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.senMasFlo.m_flow_small
  0       1                       0                       1                
  6  1280   # _GlobalScope.pump1.senMasFlo.X_default[1]
  0       0                       0                  100000                
  6  1412   # pump1.senRelPre.port_a.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # pump1.senRelPre.port_a.h_outflow
  0       0                       0                  100000                
  6  1412   # pump1.senRelPre.port_b.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # pump1.senRelPre.port_b.h_outflow
  0       0                       0                       0                
  6  1280   # pump1.senRelPre.p_rel
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.per.pressure.V_flow[1]
  0 2.0088671395539914E-004       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.per.pressure.V_flow[2]
  0   20000                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.per.pressure.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.per.pressure.dp[2]
  0       0                       0                       0                
  6  1281   # pump1.eff.per.use_powerCharacteristic
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.per.hydraulicEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # pump1.eff.per.hydraulicEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.per.motorEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # pump1.eff.per.motorEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.per.power.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.per.power.P[1]
  0       0                       0                       0                
  6  1281   # pump1.eff.per.motorCooledByFluid
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.per.speed_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.per.constantSpeed
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.per.speeds[1]
 -1    1500                       0                       0                
  1  1304   # pump1.eff.per.speed_rpm_nominal
  0       0                       0                       0                
  6  1280   # pump1.eff.per.constantSpeed_rpm
  0       0                       0                       0                
  6  1280   # pump1.eff.per.speeds_rpm[1]
  0       1                       0                       0                
  6  1281   # pump1.eff.per.havePressureCurve
  0       3                       1                       3                
  6  1282   # pump1.eff.preVar
  0       0                       0                       0                
  6  1281   # pump1.eff.computePowerUsingSimilarityLaws
  0 2.0088671395539914E-004       0                       0                
  6  1280   # pump1.eff.V_flow_nominal
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.rho_default
  0       1                       0                       0                
  6  1281   # pump1.eff.haveVMax
  0 1.0044335697769957E-004       0                       0                
  6  1280   # pump1.eff.V_flow_max
  0       2                       1                 1.0000000000000000E+100
  6  1282   # pump1.eff.nOri
  0       1                       0                       0                
  6  1281   # pump1.eff.homotopyInitialization
  0       1                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.y_out
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.rho
  0       0                       0                       0                
  6  1280   # pump1.eff.WFlo
  0       1                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.r_N
  0 1.0044335697769957E-004       0                       0                
  6  1280   # pump1.eff.r_V
  0       0                       0                       0                
  6  1281   # pump1.eff.preSpe
  0       1                       0                       0                
  6  1281   # pump1.eff.prePre
  0       0                       0                       0                
  6  1280   # pump1.eff.motDer[1]
  0       0                       0                       0                
  6  1280   # pump1.eff.hydDer[1]
  0       0                       0                       0                
  6  1280   # pump1.eff.VDelta_flow
  0     100                       0                       0                
  6  1280   # pump1.eff.dpDelta
 -1 5.0000000000000003E-002       0                       0                
  1  1304   # pump1.eff.delta
  0       0                       0                       0                
  6  1280   # pump1.eff.cBar[1]
  0       0                       0                       0                
  6  1280   # pump1.eff.cBar[2]
  0   20000                       0                       0                
  6  1280   # pump1.eff.dpMax
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.kRes
  0       1                       0                       0                
  6  1282   # pump1.eff.curve
  0       2                       0                       0                
  6  1282   # pump1.eff.pCur1.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur1.V_flow[1]
  0 2.0088671395539914E-004       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur1.V_flow[2]
  0   20000                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur1.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur1.dp[2]
  0       3                       0                       0                
  6  1282   # pump1.eff.pCur2.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur2.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur2.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur2.V_flow[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur2.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur2.dp[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur2.dp[3]
  0       4                       0                       0                
  6  1282   # pump1.eff.pCur3.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur3.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur3.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur3.V_flow[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur3.V_flow[4]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur3.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur3.dp[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur3.dp[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump1.eff.pCur3.dp[4]
  0       0                       0                       0                
  6  1280   # pump1.eff.preDer1[1]
  0       0                       0                       0                
  6  1280   # pump1.eff.preDer1[2]
  0       0                       0                       0                
  6  1280   # pump1.eff.preDer2[1]
  0       0                       0                       0                
  6  1280   # pump1.eff.preDer2[2]
  0       0                       0                       0                
  6  1280   # pump1.eff.preDer2[3]
  0       0                       0                       0                
  6  1280   # pump1.eff.preDer3[1]
  0       0                       0                       0                
  6  1280   # pump1.eff.preDer3[2]
  0       0                       0                       0                
  6  1280   # pump1.eff.preDer3[3]
  0       0                       0                       0                
  6  1280   # pump1.eff.preDer3[4]
  0       0                       0                       0                
  6  1280   # pump1.eff.powDer[1]
  0       0                       0                       0                
  6  1281   # pump1.eff.haveMinimumDecrease
  0       1                       0                       0                
  6  1281   # pump1.eff.haveDPMax
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pump1.dp_start
  0   10000                       0                 1.0000000000000000E+100
  6   256   # pump1.dp_nominal
  0   10000                       0                 1.0000000000000000E+100
  6   256   # pump1.constantHead
  0   10000                       0                 1.0000000000000000E+100
  6   256   # pump1.heads[1]
  0      -1                       0                       0                
  6  1280   # pump1.gain.k
 -1   12000                       0                 1.0000000000000000E+100
  1   280   # dpSet.k
 -1 2.9314999999999998E+002       0                       0                
  1   280   # TAirSet.k
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # TAmb.T
  0       0                       0                       0                
  6   388   # TAmb.port.Q_flow
 -1       2                       0                       0                
  1   280   # storage.height
  0       0                       0                       0                
  6   256   # storage.V
  0      10                       3                 1.0000000000000000E+100
  6   258   # storage.nEle
 -1     800                       0                       0                
  1   280   # storage.alpha_out
 -1    3000                       0                       0                
  1   280   # storage.alpha_in
 -1 5.0000000000000003E-002       0                       0                
  1   280   # storage.lambda_ins
 -1 1.0000000000000001E-001       0                 1.0000000000000000E+100
  1   280   # storage.thickness_ins
 -1 3.0000000000000001E-003       0                 1.0000000000000000E+100
  1   280   # storage.thickness_wall
  0       0                       0                       0                
  6   256   # storage.HeatThroughTop.Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatThroughTop.dT
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   260   # storage.HeatThroughTop.port_a.T
  0       0                       0                       0                
  6   256   # storage.HeatThroughTop.G
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[1].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[1].dT
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[1].G
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[2].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[2].dT
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[2].G
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[3].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[3].dT
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[3].G
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[4].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[4].dT
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[4].G
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[5].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[5].dT
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[5].G
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[6].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[6].dT
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[6].G
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[7].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[7].dT
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[7].G
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[8].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[8].dT
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[8].G
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[9].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[9].dT
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[9].G
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[10].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[10].dT
  0       0                       0                       0                
  6   256   # storage.HeatThroughWalls[10].G
  0       0                       0                       0                
  6   256   # storage.HeatThroughBottom.Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatThroughBottom.dT
  0       0                       0                       0                
  6   256   # storage.HeatThroughBottom.G
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[1].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[1].dT
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[1].G
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[2].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[2].dT
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[2].G
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[3].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[3].dT
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[3].G
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[4].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[4].dT
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[4].G
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[5].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[5].dT
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[5].G
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[6].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[6].dT
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[6].G
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[7].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[7].dT
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[7].G
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[8].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[8].dT
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[8].G
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[9].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[9].dT
  0       0                       0                       0                
  6   256   # storage.HeatBetweenLayers[9].G
  0      10                       2                 1.0000000000000000E+100
  6   258   # storage.HeatBuoyancy.nEle
  0       0                       0                       0                
  6   388   # storage.HeatBuoyancy.port_a[1].Q_flow
  0       0                       0                       0                
  6   388   # storage.HeatBuoyancy.port_a[2].Q_flow
  0       0                       0                       0                
  6   388   # storage.HeatBuoyancy.port_a[3].Q_flow
  0       0                       0                       0                
  6   388   # storage.HeatBuoyancy.port_a[4].Q_flow
  0       0                       0                       0                
  6   388   # storage.HeatBuoyancy.port_a[5].Q_flow
  0       0                       0                       0                
  6   388   # storage.HeatBuoyancy.port_a[6].Q_flow
  0       0                       0                       0                
  6   388   # storage.HeatBuoyancy.port_a[7].Q_flow
  0       0                       0                       0                
  6   388   # storage.HeatBuoyancy.port_a[8].Q_flow
  0       0                       0                       0                
  6   388   # storage.HeatBuoyancy.port_a[9].Q_flow
  0       0                       0                       0                
  6   256   # storage.HeatBuoyancy.dT[1]
  0       0                       0                       0                
  6   256   # storage.HeatBuoyancy.dT[2]
  0       0                       0                       0                
  6   256   # storage.HeatBuoyancy.dT[3]
  0       0                       0                       0                
  6   256   # storage.HeatBuoyancy.dT[4]
  0       0                       0                       0                
  6   256   # storage.HeatBuoyancy.dT[5]
  0       0                       0                       0                
  6   256   # storage.HeatBuoyancy.dT[6]
  0       0                       0                       0                
  6   256   # storage.HeatBuoyancy.dT[7]
  0       0                       0                       0                
  6   256   # storage.HeatBuoyancy.dT[8]
  0       0                       0                       0                
  6   256   # storage.HeatBuoyancy.dT[9]
  0 2.3429000000000002E+001       0                       0                
  6  1280   # storage.HeatBuoyancy.G
 -1 1.5000000000000000E+000       0                       0                
  1  1304   # storage.HeatBuoyancy.exp_nEle
  0       0                       0                       0                
  6   257   # storage.HX_2
  0       1                       0                       0                
  6   257   # storage.HX_1
  0       0                       0                       0                
  6   257   # storage.PerfectlyIsolated
  0       1                       0                       0                
  6   257   # storage.AdditionalFluidPorts
  0       0                       0                       0                
  6   256   # storage.UA_wall
  0       0                       0                       0                
  6   256   # storage.UA_top
  0       0                       0                       0                
  6   256   # storage.UA_bot
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.diameter_int
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.diameter_ext
  0       0                       0                       0                
  6  1280   # storage.ASec
  0       0                       0                       0                
  6  1280   # storage.heightLayer
  0       1                       0                       1                
  6  1280   # _GlobalScope.storage.X_default[1]
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # storage.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # storage.sta_default.T
  0       1                       1                       4                
  6   258   # storage.vol_HX_1.energyDynamics
  0       1                       1                       4                
  6   258   # storage.vol_HX_1.massDynamics
  0       1                       1                       4                
  6   258   # storage.vol_HX_1.substanceDynamics
  0       1                       1                       4                
  6   258   # storage.vol_HX_1.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # storage.vol_HX_1.p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # storage.vol_HX_1.T_start
 -1       1                       0                       1                
  1   280   # storage.vol_HX_1.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # storage.vol_HX_1.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol_HX_1.initialize_p
  0       0                       0                       0                
  6   257   # storage.vol_HX_1.prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # storage.vol_HX_1.simplify_mWat_flow
  0       0                       0                       0                
  6   257   # storage.vol_HX_1.use_C_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # storage.vol_HX_1.m_flow_nominal
  0       2                       0                       0                
  6   258   # storage.vol_HX_1.nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.vol_HX_1.m_flow_small
  0       1                       0                       0                
  6   257   # storage.vol_HX_1.allowFlowReversal
  0 5.0000000000000003E-002       0                       0                
  6   256   # storage.vol_HX_1.V
  0     300                       1                   10000                
  6   260   # storage.vol_HX_1.heatPort.T
  0       0                       0                       0                
  6   388   # storage.vol_HX_1.heatPort.Q_flow
  0 4.9779300000000006E+001       0                       0                
  6   256   # storage.vol_HX_1.m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_HX_1.rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.storage.vol_HX_1.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol_HX_1.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol_HX_1.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_HX_1.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol_HX_1.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol_HX_1.state_start.T
  0       0                       0                       0                
  6  1281   # storage.vol_HX_1.useSteadyStateTwoPort
  0       0                       0                       0                
  6   256   # storage.ThermalConductanceHX_1.dT
  0       0                       0                       0                
  6   256   # storage.ThermalConductanceHX_1.G
 -1     100                       0                       0                
  1   280   # storage.UA_HX_2
  0       2                       0                       0                
  6   258   # storage.Ele_HX_2
 -1     100                       0                       0                
  1   280   # storage.UA_HX_1
  0       1                       0                       0                
  6   258   # storage.Ele_HX_1
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # storage.port_b1.h_outflow
  0       0                 -100000                  100000                
  6   388   # storage.port_b2.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # storage.port_b2.h_outflow
  0       0                 -100000                  100000                
  6   388   # storage.port_a1.m_flow
  0       0                 -100000                  100000                
  6   388   # storage.port_a2.m_flow
 -1 3.3314999999999998E+002       1                   10000                
  1   280   # storage.T_start
  0     300                       1                   10000                
  6   256   # storage.T[1]
  0     300                       1                   10000                
  6   256   # storage.T[2]
  0     300                       1                   10000                
  6   256   # storage.T[3]
  0     300                       1                   10000                
  6   256   # storage.T[4]
  0     300                       1                   10000                
  6   256   # storage.T[5]
  0     300                       1                   10000                
  6   256   # storage.T[6]
  0     300                       1                   10000                
  6   256   # storage.T[7]
  0     300                       1                   10000                
  6   256   # storage.T[8]
  0     300                       1                   10000                
  6   256   # storage.T[9]
  0     300                       1                   10000                
  6   256   # storage.T[10]
  0       1                       1                       4                
  6   258   # storage.vol_bot.energyDynamics
  0       1                       1                       4                
  6   258   # storage.vol_bot.massDynamics
  0       1                       1                       4                
  6   258   # storage.vol_bot.substanceDynamics
  0       1                       1                       4                
  6   258   # storage.vol_bot.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # storage.vol_bot.p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # storage.vol_bot.T_start
 -1       1                       0                       1                
  1   280   # storage.vol_bot.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # storage.vol_bot.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol_bot.initialize_p
  0       0                       0                       0                
  6   257   # storage.vol_bot.prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # storage.vol_bot.simplify_mWat_flow
  0       0                       0                       0                
  6   257   # storage.vol_bot.use_C_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # storage.vol_bot.m_flow_nominal
  0       3                       0                       0                
  6   258   # storage.vol_bot.nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.vol_bot.m_flow_small
  0       1                       0                       0                
  6   257   # storage.vol_bot.allowFlowReversal
  0       0                       0                       0                
  6   256   # storage.vol_bot.V
  0       0                 -100000                  100000                
  6   388   # storage.vol_bot.ports[1].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.vol_bot.ports[2].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.vol_bot.ports[3].m_flow
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_bot.rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.storage.vol_bot.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol_bot.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol_bot.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_bot.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol_bot.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol_bot.state_start.T
  0       0                       0                       0                
  6  1281   # storage.vol_bot.useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # storage.vol_top.energyDynamics
  0       1                       1                       4                
  6   258   # storage.vol_top.massDynamics
  0       1                       1                       4                
  6   258   # storage.vol_top.substanceDynamics
  0       1                       1                       4                
  6   258   # storage.vol_top.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # storage.vol_top.p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # storage.vol_top.T_start
 -1       1                       0                       1                
  1   280   # storage.vol_top.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # storage.vol_top.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol_top.initialize_p
  0       0                       0                       0                
  6   257   # storage.vol_top.prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # storage.vol_top.simplify_mWat_flow
  0       0                       0                       0                
  6   257   # storage.vol_top.use_C_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # storage.vol_top.m_flow_nominal
  0       3                       0                       0                
  6   258   # storage.vol_top.nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.vol_top.m_flow_small
  0       1                       0                       0                
  6   257   # storage.vol_top.allowFlowReversal
  0       0                       0                       0                
  6   256   # storage.vol_top.V
  0       0                 -100000                  100000                
  6   388   # storage.vol_top.ports[2].m_flow
  0       0                       0                       0                
  6   388   # storage.vol_top.heatPort.Q_flow
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_top.rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.storage.vol_top.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol_top.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol_top.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_top.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol_top.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol_top.state_start.T
  0       0                       0                       0                
  6  1281   # storage.vol_top.useSteadyStateTwoPort
  0       1                       0                       0                
  6   257   # storage.pip[1].allowFlowReversal
  0       0                 -9.9999999999999995E+059  100000                
  6   388   # storage.pip[1].port_a.m_flow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # storage.pip[1].port_a.h_outflow
  0       0                 -100000                 9.9999999999999995E+059
  6   388   # storage.pip[1].port_b.m_flow
 -1       1                       0                       0                
  1   280   # storage.pip[1].m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.pip[1].m_flow_small
  0       0                       0                       0                
  6   257   # storage.pip[1].show_T
  0       0                       0                       0                
  6   256   # storage.pip[1].m_flow
  0       0                       0                       0                
  6   256   # storage.pip[1].dp
  0       1                       0                       0                
  6   257   # storage.pip[1].from_dp
  0       1                       0                       0                
  6   257   # storage.pip[2].allowFlowReversal
  0       0                 -9.9999999999999995E+059  100000                
  6   388   # storage.pip[2].port_a.m_flow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # storage.pip[2].port_a.h_outflow
  0       0                 -100000                 9.9999999999999995E+059
  6   388   # storage.pip[2].port_b.m_flow
 -1       1                       0                       0                
  1   280   # storage.pip[2].m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.pip[2].m_flow_small
  0       0                       0                       0                
  6   257   # storage.pip[2].show_T
  0       0                       0                       0                
  6   256   # storage.pip[2].m_flow
  0       0                       0                       0                
  6   256   # storage.pip[2].dp
  0       1                       0                       0                
  6   257   # storage.pip[2].from_dp
  0       1                       0                       0                
  6   257   # storage.pip[3].allowFlowReversal
  0       0                 -9.9999999999999995E+059  100000                
  6   388   # storage.pip[3].port_a.m_flow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # storage.pip[3].port_a.h_outflow
  0       0                 -100000                 9.9999999999999995E+059
  6   388   # storage.pip[3].port_b.m_flow
 -1       1                       0                       0                
  1   280   # storage.pip[3].m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.pip[3].m_flow_small
  0       0                       0                       0                
  6   257   # storage.pip[3].show_T
  0       0                       0                       0                
  6   256   # storage.pip[3].m_flow
  0       0                       0                       0                
  6   256   # storage.pip[3].dp
  0       1                       0                       0                
  6   257   # storage.pip[3].from_dp
  0       1                       0                       0                
  6   257   # storage.pip[4].allowFlowReversal
  0       0                 -9.9999999999999995E+059  100000                
  6   388   # storage.pip[4].port_a.m_flow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # storage.pip[4].port_a.h_outflow
  0       0                 -100000                 9.9999999999999995E+059
  6   388   # storage.pip[4].port_b.m_flow
 -1       1                       0                       0                
  1   280   # storage.pip[4].m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.pip[4].m_flow_small
  0       0                       0                       0                
  6   257   # storage.pip[4].show_T
  0       0                       0                       0                
  6   256   # storage.pip[4].m_flow
  0       0                       0                       0                
  6   256   # storage.pip[4].dp
  0       1                       0                       0                
  6   257   # storage.pip[4].from_dp
  0       1                       0                       0                
  6   257   # storage.pip[5].allowFlowReversal
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # storage.pip[5].port_b.h_outflow
 -1       1                       0                       0                
  1   280   # storage.pip[5].m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.pip[5].m_flow_small
  0       0                       0                       0                
  6   257   # storage.pip[5].show_T
  0       0                       0                       0                
  6   256   # storage.pip[5].dp
  0       1                       0                       0                
  6   257   # storage.pip[5].from_dp
  0       1                       0                       0                
  6   257   # storage.pip[6].allowFlowReversal
  0       0                 -9.9999999999999995E+059  100000                
  6   388   # storage.pip[6].port_a.m_flow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # storage.pip[6].port_a.h_outflow
  0       0                 -100000                 9.9999999999999995E+059
  6   388   # storage.pip[6].port_b.m_flow
 -1       1                       0                       0                
  1   280   # storage.pip[6].m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.pip[6].m_flow_small
  0       0                       0                       0                
  6   257   # storage.pip[6].show_T
  0       0                       0                       0                
  6   256   # storage.pip[6].m_flow
  0       0                       0                       0                
  6   256   # storage.pip[6].dp
  0       1                       0                       0                
  6   257   # storage.pip[6].from_dp
  0       1                       0                       0                
  6   257   # storage.pip[7].allowFlowReversal
  0       0                 -9.9999999999999995E+059  100000                
  6   388   # storage.pip[7].port_a.m_flow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # storage.pip[7].port_a.h_outflow
  0       0                 -100000                 9.9999999999999995E+059
  6   388   # storage.pip[7].port_b.m_flow
 -1       1                       0                       0                
  1   280   # storage.pip[7].m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.pip[7].m_flow_small
  0       0                       0                       0                
  6   257   # storage.pip[7].show_T
  0       0                       0                       0                
  6   256   # storage.pip[7].m_flow
  0       0                       0                       0                
  6   256   # storage.pip[7].dp
  0       1                       0                       0                
  6   257   # storage.pip[7].from_dp
  0       1                       0                       0                
  6   257   # storage.pip[8].allowFlowReversal
  0       0                 -9.9999999999999995E+059  100000                
  6   388   # storage.pip[8].port_a.m_flow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # storage.pip[8].port_a.h_outflow
  0       0                 -100000                 9.9999999999999995E+059
  6   388   # storage.pip[8].port_b.m_flow
 -1       1                       0                       0                
  1   280   # storage.pip[8].m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.pip[8].m_flow_small
  0       0                       0                       0                
  6   257   # storage.pip[8].show_T
  0       0                       0                       0                
  6   256   # storage.pip[8].m_flow
  0       0                       0                       0                
  6   256   # storage.pip[8].dp
  0       1                       0                       0                
  6   257   # storage.pip[8].from_dp
  0       1                       0                       0                
  6   257   # collector.allowFlowReversal
  0       0                 -100000                  100000                
  6   388   # collector.port_a.m_flow
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   260   # collector.port_a.p
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # collector.port_a.h_outflow
  0       0                       0                       0                
  6   260   # collector.port_a.der(h_outflow)
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   260   # collector.port_b.p
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # collector.port_b.h_outflow
  0       0                       0                       0                
  6   260   # collector.port_b.der(h_outflow)
  0 1.0000000000000001E-001       0                       0                
  6   256   # collector.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # collector.m_flow_small
  0       1                       0                       0                
  6   257   # collector.show_T
  0       0                       0                       0                
  6   256   # collector.dp
  0 2.9314999999999998E+002       1                   10000                
  6   256   # collector.sta_a.T
  0 2.9314999999999998E+002       1                   10000                
  6   256   # collector.sta_b.T
  0       1                       1                       4                
  6   258   # collector.energyDynamics
  0       1                       1                       4                
  6   258   # collector.massDynamics
  0       1                       1                       4                
  6   258   # collector.substanceDynamics
  0       1                       1                       4                
  6   258   # collector.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # collector.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # collector.T_start
  0       1                       0                       1                
  6   256   # collector.X_start[1]
 -1       1                       1                 1.0000000000000000E+100
  1   280   # collector.mSenFac
  0      10                       1                 1.0000000000000000E+100
  6   258   # collector.nEle
  0       0                       0                       0                
  6   256   # collector.width
  0       1                       0                       0                
  6   256   # collector.height
  0      30                       0                       0                
  6   256   # collector.angleDegTil
  0       0                       0                       0                
  6   256   # collector.angleDegAzi
  0      10                       0                       0                
  6   256   # collector.dp_nominal
  0       0                       0                       0                
  6   388   # collector.heatPortCon.Q_flow
  0      10                       1                 1.0000000000000000E+100
  6   258   # collector.thermalCollectorCon.m
  0       0                       0                       0                
  6   388   # collector.thermalCollectorCon.port_a[1].Q_flow
  0       0                       0                       0                
  6   388   # collector.thermalCollectorCon.port_a[2].Q_flow
  0       0                       0                       0                
  6   388   # collector.thermalCollectorCon.port_a[3].Q_flow
  0       0                       0                       0                
  6   388   # collector.thermalCollectorCon.port_a[4].Q_flow
  0       0                       0                       0                
  6   388   # collector.thermalCollectorCon.port_a[5].Q_flow
  0       0                       0                       0                
  6   388   # collector.thermalCollectorCon.port_a[6].Q_flow
  0       0                       0                       0                
  6   388   # collector.thermalCollectorCon.port_a[7].Q_flow
  0       0                       0                       0                
  6   388   # collector.thermalCollectorCon.port_a[8].Q_flow
  0       0                       0                       0                
  6   388   # collector.thermalCollectorCon.port_a[9].Q_flow
  0       0                       0                       0                
  6   388   # collector.thermalCollectorCon.port_a[10].Q_flow
  0      10                       0                       0                
  6   258   # collector.replicatorQrad.nout
  0       0                       0                       0                
  6   256   # collector.replicatorQrad.u
  0 8.5699999999999998E-001       0                       0                
  6   768   # collector.collectorData.C_0
  0 4.1600000000000001E+000       0                       0                
  6   768   # collector.collectorData.C_1
  0 8.8999999999999999E-003       0                       0                
  6   768   # collector.collectorData.C_2
  0 1.4631006027974484E-003       0                       0                
  6   768   # collector.collectorData.V_A
  0 2.4409999999999998E+000       0                       0                
  6   768   # collector.collectorData.A
  0 9.3999999999999995E-001       0                       0                
  6   768   # collector.collectorData.IAMC
  0 2.7857435477263421E+003       0                       0                
  6   768   # collector.collectorData.C_A
  0       1                       0                       0                
  6   257   # collector.res.allowFlowReversal
  0 1.0000000000000001E-001       0                       0                
  6   256   # collector.res.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # collector.res.m_flow_small
  0       0                       0                       0                
  6   257   # collector.res.show_T
  0       0                       0                       0                
  6   256   # collector.res.dp
  0       0                       0                       0                
  6   257   # collector.res.from_dp
  0      10                       0                       0                
  6   256   # collector.res.dp_nominal
  0       1                       0                       0                
  6   257   # collector.res.homotopyInitialization
  0       0                       0                       0                
  6   257   # collector.res.linearized
  0 2.9999999999999999E-002       0                 1.0000000000000000E+100
  6   256   # collector.res.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # collector.res.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # collector.res.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # collector.res.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # collector.res.m_flow_nominal_pos
  0      10                       0                       0                
  6  1280   # collector.res.dp_nominal_pos
  0       1                       0                       1                
  6  1280   # _GlobalScope.collector.res.X_default[1]
  0       0                       0                       0                
  6   257   # collector.res.use_dh
 -1       1                       0                       0                
  1   280   # collector.res.dh
 -1    4000                       0                 1.0000000000000000E+100
  1   280   # collector.res.ReC
  0 2.9999999999999999E-001 1.0000000000000000E-002 1.0000000000000000E+100
  6   256   # collector.res.deltaM
  0 3.1622776601683791E-002       0                       0                
  6   256   # collector.res.k
  0       1                       0                       0                
  6  1281   # collector.res.computeFlowResistance
  0       1                       0                       0                
  6   257   # collector.homotopyInitialization
  0       0                       0                       0                
  6   257   # collector.from_dp
  0       0                       0                       0                
  6   257   # collector.linearized
  0       1                       0                       0                
  6   257   # collector.AColData
  0 3.5714285714285713E-003       0                       0                
  6   256   # collector.V
  0 6.8000000000000009E+003       0                       0                
  6   256   # collector.C
  0       0                       0                       0                
  6   257   # collector.use_GSC_in
 -1       0                       0                       0                
  1   280   # collector.GSC_constant
  0 2.4409999999999998E+000       0                       0                
  6   256   # collector.A
  0       0                       0                       0                
  6   256   # collector.IAM
  0       0                       0                       0                
  6   256   # collector.IrrTot
  0       0                       0                       0                
  6   256   # collector.QCon[1].y
  0       0                       0                       0                
  6   256   # collector.QCon[2].y
  0       0                       0                       0                
  6   256   # collector.QCon[3].y
  0       0                       0                       0                
  6   256   # collector.QCon[4].y
  0       0                       0                       0                
  6   256   # collector.QCon[5].y
  0       0                       0                       0                
  6   256   # collector.QCon[6].y
  0       0                       0                       0                
  6   256   # collector.QCon[7].y
  0       0                       0                       0                
  6   256   # collector.QCon[8].y
  0       0                       0                       0                
  6   256   # collector.QCon[9].y
  0       0                       0                       0                
  6   256   # collector.QCon[10].y
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preSumCon[1].T_ref
 -1       0                       0                       0                
  1   280   # collector.preSumCon[1].alpha
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preSumCon[2].T_ref
 -1       0                       0                       0                
  1   280   # collector.preSumCon[2].alpha
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preSumCon[3].T_ref
 -1       0                       0                       0                
  1   280   # collector.preSumCon[3].alpha
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preSumCon[4].T_ref
 -1       0                       0                       0                
  1   280   # collector.preSumCon[4].alpha
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preSumCon[5].T_ref
 -1       0                       0                       0                
  1   280   # collector.preSumCon[5].alpha
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preSumCon[6].T_ref
 -1       0                       0                       0                
  1   280   # collector.preSumCon[6].alpha
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preSumCon[7].T_ref
 -1       0                       0                       0                
  1   280   # collector.preSumCon[7].alpha
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preSumCon[8].T_ref
 -1       0                       0                       0                
  1   280   # collector.preSumCon[8].alpha
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preSumCon[9].T_ref
 -1       0                       0                       0                
  1   280   # collector.preSumCon[9].alpha
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preSumCon[10].T_ref
 -1       0                       0                       0                
  1   280   # collector.preSumCon[10].alpha
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preConRad[1].T_ref
 -1       0                       0                       0                
  1   280   # collector.preConRad[1].alpha
  0       0                       0                       0                
  6   256   # collector.preConRad[1].Q_flow
  0       0                       0                       0                
  6   388   # collector.preConRad[1].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preConRad[2].T_ref
 -1       0                       0                       0                
  1   280   # collector.preConRad[2].alpha
  0       0                       0                       0                
  6   256   # collector.preConRad[2].Q_flow
  0       0                       0                       0                
  6   388   # collector.preConRad[2].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preConRad[3].T_ref
 -1       0                       0                       0                
  1   280   # collector.preConRad[3].alpha
  0       0                       0                       0                
  6   256   # collector.preConRad[3].Q_flow
  0       0                       0                       0                
  6   388   # collector.preConRad[3].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preConRad[4].T_ref
 -1       0                       0                       0                
  1   280   # collector.preConRad[4].alpha
  0       0                       0                       0                
  6   256   # collector.preConRad[4].Q_flow
  0       0                       0                       0                
  6   388   # collector.preConRad[4].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preConRad[5].T_ref
 -1       0                       0                       0                
  1   280   # collector.preConRad[5].alpha
  0       0                       0                       0                
  6   256   # collector.preConRad[5].Q_flow
  0       0                       0                       0                
  6   388   # collector.preConRad[5].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preConRad[6].T_ref
 -1       0                       0                       0                
  1   280   # collector.preConRad[6].alpha
  0       0                       0                       0                
  6   256   # collector.preConRad[6].Q_flow
  0       0                       0                       0                
  6   388   # collector.preConRad[6].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preConRad[7].T_ref
 -1       0                       0                       0                
  1   280   # collector.preConRad[7].alpha
  0       0                       0                       0                
  6   256   # collector.preConRad[7].Q_flow
  0       0                       0                       0                
  6   388   # collector.preConRad[7].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preConRad[8].T_ref
 -1       0                       0                       0                
  1   280   # collector.preConRad[8].alpha
  0       0                       0                       0                
  6   256   # collector.preConRad[8].Q_flow
  0       0                       0                       0                
  6   388   # collector.preConRad[8].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preConRad[9].T_ref
 -1       0                       0                       0                
  1   280   # collector.preConRad[9].alpha
  0       0                       0                       0                
  6   256   # collector.preConRad[9].Q_flow
  0       0                       0                       0                
  6   388   # collector.preConRad[9].port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # collector.preConRad[10].T_ref
 -1       0                       0                       0                
  1   280   # collector.preConRad[10].alpha
  0       0                       0                       0                
  6   256   # collector.preConRad[10].Q_flow
  0       0                       0                       0                
  6   388   # collector.preConRad[10].port.Q_flow
  0       2                       0                       0                
  6   258   # collector.sumConRad[1].nin
 -1       1                       0                       0                
  1   280   # collector.sumConRad[1].k[1]
 -1       1                       0                       0                
  1   280   # collector.sumConRad[1].k[2]
  0       2                       0                       0                
  6   258   # collector.sumConRad[2].nin
 -1       1                       0                       0                
  1   280   # collector.sumConRad[2].k[1]
 -1       1                       0                       0                
  1   280   # collector.sumConRad[2].k[2]
  0       2                       0                       0                
  6   258   # collector.sumConRad[3].nin
 -1       1                       0                       0                
  1   280   # collector.sumConRad[3].k[1]
 -1       1                       0                       0                
  1   280   # collector.sumConRad[3].k[2]
  0       2                       0                       0                
  6   258   # collector.sumConRad[4].nin
 -1       1                       0                       0                
  1   280   # collector.sumConRad[4].k[1]
 -1       1                       0                       0                
  1   280   # collector.sumConRad[4].k[2]
  0       2                       0                       0                
  6   258   # collector.sumConRad[5].nin
 -1       1                       0                       0                
  1   280   # collector.sumConRad[5].k[1]
 -1       1                       0                       0                
  1   280   # collector.sumConRad[5].k[2]
  0       2                       0                       0                
  6   258   # collector.sumConRad[6].nin
 -1       1                       0                       0                
  1   280   # collector.sumConRad[6].k[1]
 -1       1                       0                       0                
  1   280   # collector.sumConRad[6].k[2]
  0       2                       0                       0                
  6   258   # collector.sumConRad[7].nin
 -1       1                       0                       0                
  1   280   # collector.sumConRad[7].k[1]
 -1       1                       0                       0                
  1   280   # collector.sumConRad[7].k[2]
  0       2                       0                       0                
  6   258   # collector.sumConRad[8].nin
 -1       1                       0                       0                
  1   280   # collector.sumConRad[8].k[1]
 -1       1                       0                       0                
  1   280   # collector.sumConRad[8].k[2]
  0       2                       0                       0                
  6   258   # collector.sumConRad[9].nin
 -1       1                       0                       0                
  1   280   # collector.sumConRad[9].k[1]
 -1       1                       0                       0                
  1   280   # collector.sumConRad[9].k[2]
  0       2                       0                       0                
  6   258   # collector.sumConRad[10].nin
 -1       1                       0                       0                
  1   280   # collector.sumConRad[10].k[1]
 -1       1                       0                       0                
  1   280   # collector.sumConRad[10].k[2]
  0 9.3999999999999995E-001       0                       0                
  6  1280   # collector.IAMC
  0 8.5699999999999998E-001       0                       0                
  6  1280   # collector.C_0
  0 4.1600000000000001E+000       0                       0                
  6  1280   # collector.C_1
  0 8.8999999999999999E-003       0                       0                
  6  1280   # collector.C_2
  0       0                       0                       0                
  6   256   # collector.IrrDir
  0       0                       0                       0                
  6   256   # collector.IrrDif
  0       0                       0                       0                
  6   256   # collector.inc
  0       1                       1                       4                
  6   258   # pump2.energyDynamics
  0       1                       1                       4                
  6   258   # pump2.massDynamics
  0       1                       1                       4                
  6   258   # pump2.substanceDynamics
  0       1                       1                       4                
  6   258   # pump2.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # pump2.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # pump2.T_start
 -1       1                       0                       1                
  1   280   # pump2.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pump2.mSenFac
  0       1                       0                       0                
  6   257   # pump2.allowFlowReversal
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   260   # pump2.port_a.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pump2.port_a.h_outflow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pump2.port_b.h_outflow
  0       0                       0                       0                
  6   256   # pump2.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump2.m_flow_small
  0       0                       0                       0                
  6   257   # pump2.show_T
  0       0                       0                       0                
  6   256   # pump2.dp
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump2.per.pressure.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump2.per.pressure.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump2.per.pressure.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump2.per.pressure.dp[2]
 -1       0                       0                       0                
  1   281   # pump2.per.use_powerCharacteristic
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pump2.per.hydraulicEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # pump2.per.hydraulicEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pump2.per.motorEfficiency.V_flow[1]
 -1 6.9999999999999996E-001       0                       1                
  1   280   # pump2.per.motorEfficiency.eta[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pump2.per.power.V_flow[1]
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pump2.per.power.P[1]
 -1       1                       0                       0                
  1   281   # pump2.per.motorCooledByFluid
 -1       1                       0                 1.0000000000000000E+100
  1   280   # pump2.per.speed_nominal
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump2.per.constantSpeed
  0       0                       0                 1.0000000000000000E+100
  6   256   # pump2.per.speeds[1]
 -1    1500                       0                       0                
  1   280   # pump2.per.speed_rpm_nominal
  0       0                       0                       0                
  6   256   # pump2.per.constantSpeed_rpm
  0       0                       0                       0                
  6   256   # pump2.per.speeds_rpm[1]
  0       0                       0                       0                
  6   257   # pump2.per.havePressureCurve
  0       3                       1                       3                
  6   258   # pump2.inputType
  0       0                       0                       0                
  6   256   # pump2.constInput
  0       0                       0                       0                
  6   256   # pump2.stageInputs[1]
  0       0                       0                       0                
  6   257   # pump2.computePowerUsingSimilarityLaws
  0       1                       0                       0                
  6   257   # pump2.addPowerToMedium
 -1       0                       0                       0                
  1   281   # pump2.nominalValuesDefineDefaultPressureCurve
  0       1                       0                       0                
  6   256   # pump2.tau
  0       1                       0                       0                
  6   257   # pump2.filteredSpeed
 -1      30                       0                       0                
  1   280   # pump2.riseTime
  0       4                       1                       4                
  6   258   # pump2.init
 -1       0                       0                       1                
  1   280   # pump2.y_start
  0       1                       0                 1.0000000000000000E+100
  6   256   # pump2.y_actual
  0       0                       0                       0                
  6   256   # pump2.P
  0     300                       1                   10000                
  6   260   # pump2.heatPort.T
  0       0                       0                       0                
  6   388   # pump2.heatPort.Q_flow
  0       0                       0                       0                
  6   256   # pump2.VMachine_flow
  0       0                       0                       0                
  6   256   # pump2.dpMachine
  0       0                       0                       1                
  6   256   # pump2.eta
  0       0                       0                       1                
  6   256   # pump2.etaHyd
  0       0                       0                       1                
  6   256   # pump2.etaMot
  0       2                       1                       3                
  6  1282   # pump2.preVar
  0       0                       0                       0                
  6  1281   # pump2.speedIsInput
  0       2                       0                       0                
  6  1282   # pump2.nOri
  0       1                       0                       0                
  6  1281   # pump2.haveVMax
  0       0                       0                       0                
  6  1280   # pump2.V_flow_max
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump2.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pump2.sta_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pump2.sta_start.T
  0       0                       0                       0                
  6  1280   # pump2.h_outflow_start
  0       1                       1                       4                
  6  1282   # pump2.vol.energyDynamics
  0       1                       1                       4                
  6  1282   # pump2.vol.massDynamics
  0       1                       1                       4                
  6  1282   # pump2.vol.substanceDynamics
  0       1                       1                       4                
  6  1282   # pump2.vol.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pump2.vol.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pump2.vol.T_start
  0       0                       0                       1                
  6  1280   # pump2.vol.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pump2.vol.mSenFac
  0       0                       0                       0                
  6   769   # pump2.vol.initialize_p
  0       1                       0                       0                
  6  1281   # pump2.vol.prescribedHeatFlowRate
  0       1                       0                       0                
  6  1281   # pump2.vol.simplify_mWat_flow
  0       0                       0                       0                
  6  1281   # pump2.vol.use_C_flow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.vol.m_flow_nominal
  0       2                       0                       0                
  6  1282   # pump2.vol.nPorts
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.vol.m_flow_small
  0       1                       0                       0                
  6  1281   # pump2.vol.allowFlowReversal
  0       0                       0                       0                
  6  1280   # pump2.vol.V
  0       0                       0                       0                
  6  1412   # pump2.vol.heatPort.Q_flow
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump2.vol.rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.pump2.vol.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pump2.vol.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pump2.vol.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump2.vol.rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pump2.vol.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pump2.vol.state_start.T
  0       0                       0                       0                
  6  1281   # pump2.vol.useSteadyStateTwoPort
  0       1                       0                       0                
  6  1280   # pump2.vol.tau
  0       0                       0                       0                
  6  1280   # pump2.vol.V_nominal
  0       1                       1                       4                
  6  1282   # pump2.filter.analogFilter
  0       1                       1                       4                
  6  1282   # pump2.filter.filterType
  0       2                       1                 1.0000000000000000E+100
  6  1282   # pump2.filter.order
  0       0                       0                       0                
  6  1280   # pump2.filter.f_cut
 -1       1                       0                       0                
  1  1304   # pump2.filter.gain
 -1 5.0000000000000000E-001       0                       0                
  1  1304   # pump2.filter.A_ripple
 -1       0                       0                       0                
  1  1304   # pump2.filter.f_min
 -1       1                       0                       0                
  1  1305   # pump2.filter.normalized
  0       4                       1                       4                
  6  1282   # pump2.filter.init
  0       2                       0                       0                
  6  1282   # pump2.filter.nx
 -1       0                       0                       0                
  1  1304   # pump2.filter.x_start[1]
 -1       0                       0                       0                
  1  1304   # pump2.filter.x_start[2]
  0       0                       0                       0                
  6  1280   # pump2.filter.y_start
  0       0                       0                       0                
  6  1280   # pump2.filter.u_nominal
 -1       0                       0                       0                
  2  1296   # pump2.filter.x[1]
  0       0                       0                       0                
  3  1280   # pump2.filter.der(x[1])
 -1       0                       0                       0                
  2  1296   # pump2.filter.x[2]
  0       0                       0                       0                
  3  1280   # pump2.filter.der(x[2])
  0       2                       0                       0                
  6  1282   # pump2.filter.ncr
  0       0                       0                       0                
  6  1282   # pump2.filter.nc0
  0       0                       0                       0                
  6  1282   # pump2.filter.na
  0       2                       0                       0                
  6  1282   # pump2.filter.nr
  0       0                       0                       0                
  6  1280   # pump2.filter.cr[1]
  0       0                       0                       0                
  6  1280   # pump2.filter.cr[2]
  0       0                       0                       0                
  6  1280   # pump2.filter.r[1]
  0       0                       0                       0                
  6  1280   # pump2.filter.r[2]
  0       0                       0                       0                
  6  1344   # pump2.filter.uu[1]
  0       1                       0                       0                
  6  1281   # pump2.preSou.allowFlowReversal
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # pump2.preSou.port_a.h_outflow
 -1       0                       0                       0                
  1  1304   # pump2.preSou.dp_start
  0       0                 -100000                  100000                
  6  1280   # pump2.preSou.m_flow_start
  0       0                 -100000                  100000                
  6  1280   # pump2.preSou.m_flow_small
  0       0                       0                       0                
  6  1281   # pump2.preSou.show_T
  0       1                       0                       0                
  6  1281   # pump2.preSou.show_V_flow
  0       0                       0                       0                
  6  1280   # pump2.preSou.V_flow
  0       1                       0                       1                
  6  1280   # _GlobalScope.pump2.preSou.X_default[1]
  0       1                       0                       0                
  6  1281   # pump2.preSou.control_m_flow
  0       0                       0                       0                
  6  1280   # pump2.preSou.dp_internal
  0       1                       0                       0                
  6  1281   # pump2.heaDis.homotopyInitialization
  0       0                       0                       0                
  6  1281   # pump2.heaDis.motorCooledByFluid
  0       0                       0                       0                
  6  1280   # pump2.heaDis.delta_V_flow
  0       0                       0                       0                
  6  1280   # pump2.heaDis.Q_flow
  0       0                       0                       0                
  6  1280   # pump2.heaDis.WHyd
  0       0                       0                       0                
  6  1280   # pump2.heaDis.QThe_flow
  0       1                       0                       0                
  6  1280   # pump2.PToMed.k1
  0       1                       0                       0                
  6  1280   # pump2.PToMed.k2
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # pump2.prePow.T_ref
  0       0                       0                       0                
  6  1280   # pump2.prePow.alpha
  0 9.9558600000000001E+002       0                       0                
  6  1280   # pump2.rho_inlet.y
  0       1                       0                       0                
  6  1281   # pump2.senMasFlo.allowFlowReversal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.senMasFlo.m_flow_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.senMasFlo.m_flow_small
  0       1                       0                       1                
  6  1280   # _GlobalScope.pump2.senMasFlo.X_default[1]
  0       0                       0                  100000                
  6  1412   # pump2.senRelPre.port_a.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # pump2.senRelPre.port_a.h_outflow
  0       0                       0                  100000                
  6  1412   # pump2.senRelPre.port_b.m_flow
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6  1284   # pump2.senRelPre.port_b.h_outflow
  0       0                       0                       0                
  6  1280   # pump2.senRelPre.p_rel
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.per.pressure.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.per.pressure.V_flow[2]
  0   20000                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.per.pressure.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.per.pressure.dp[2]
  0       0                       0                       0                
  6  1281   # pump2.eff.per.use_powerCharacteristic
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.per.hydraulicEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # pump2.eff.per.hydraulicEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.per.motorEfficiency.V_flow[1]
  0       0                       0                       1                
  6  1280   # pump2.eff.per.motorEfficiency.eta[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.per.power.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.per.power.P[1]
  0       0                       0                       0                
  6  1281   # pump2.eff.per.motorCooledByFluid
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.per.speed_nominal
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.per.constantSpeed
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.per.speeds[1]
 -1    1500                       0                       0                
  1  1304   # pump2.eff.per.speed_rpm_nominal
  0       0                       0                       0                
  6  1280   # pump2.eff.per.constantSpeed_rpm
  0       0                       0                       0                
  6  1280   # pump2.eff.per.speeds_rpm[1]
  0       0                       0                       0                
  6  1281   # pump2.eff.per.havePressureCurve
  0       2                       1                       3                
  6  1282   # pump2.eff.preVar
  0       0                       0                       0                
  6  1281   # pump2.eff.computePowerUsingSimilarityLaws
  0       0                       0                       0                
  6  1280   # pump2.eff.V_flow_nominal
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.rho_default
  0       1                       0                       0                
  6  1281   # pump2.eff.haveVMax
  0       0                       0                       0                
  6  1280   # pump2.eff.V_flow_max
  0       2                       1                 1.0000000000000000E+100
  6  1282   # pump2.eff.nOri
  0       1                       0                       0                
  6  1281   # pump2.eff.homotopyInitialization
  0       1                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.y_out
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.rho
  0       0                       0                       0                
  6  1280   # pump2.eff.WFlo
  0       1                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.r_N
  0       0                       0                       0                
  6  1280   # pump2.eff.r_V
  0       0                       0                       0                
  6  1281   # pump2.eff.preSpe
  0       1                       0                       0                
  6  1281   # pump2.eff.prePre
  0       0                       0                       0                
  6  1280   # pump2.eff.motDer[1]
  0       0                       0                       0                
  6  1280   # pump2.eff.hydDer[1]
  0       0                       0                       0                
  6  1280   # pump2.eff.VDelta_flow
  0     100                       0                       0                
  6  1280   # pump2.eff.dpDelta
 -1 5.0000000000000003E-002       0                       0                
  1  1304   # pump2.eff.delta
  0       0                       0                       0                
  6  1280   # pump2.eff.cBar[1]
  0       0                       0                       0                
  6  1280   # pump2.eff.cBar[2]
  0   20000                       0                       0                
  6  1280   # pump2.eff.dpMax
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.kRes
  0       1                       0                       0                
  6  1282   # pump2.eff.curve
  0       2                       0                       0                
  6  1282   # pump2.eff.pCur1.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur1.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur1.V_flow[2]
  0   20000                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur1.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur1.dp[2]
  0       3                       0                       0                
  6  1282   # pump2.eff.pCur2.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur2.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur2.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur2.V_flow[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur2.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur2.dp[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur2.dp[3]
  0       4                       0                       0                
  6  1282   # pump2.eff.pCur3.n
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur3.V_flow[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur3.V_flow[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur3.V_flow[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur3.V_flow[4]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur3.dp[1]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur3.dp[2]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur3.dp[3]
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.eff.pCur3.dp[4]
  0       0                       0                       0                
  6  1280   # pump2.eff.preDer1[1]
  0       0                       0                       0                
  6  1280   # pump2.eff.preDer1[2]
  0       0                       0                       0                
  6  1280   # pump2.eff.preDer2[1]
  0       0                       0                       0                
  6  1280   # pump2.eff.preDer2[2]
  0       0                       0                       0                
  6  1280   # pump2.eff.preDer2[3]
  0       0                       0                       0                
  6  1280   # pump2.eff.preDer3[1]
  0       0                       0                       0                
  6  1280   # pump2.eff.preDer3[2]
  0       0                       0                       0                
  6  1280   # pump2.eff.preDer3[3]
  0       0                       0                       0                
  6  1280   # pump2.eff.preDer3[4]
  0       0                       0                       0                
  6  1280   # pump2.eff.powDer[1]
  0       0                       0                       0                
  6  1281   # pump2.eff.haveMinimumDecrease
  0       1                       0                       0                
  6  1281   # pump2.eff.haveDPMax
  0   10000                       0                 1.0000000000000000E+100
  6   256   # pump2.dp_nominal
 -1       0                       0                 1.0000000000000000E+100
  1   280   # pump2.m_flow_start
  0       0                       0                       0                
  6   256   # pump2.constantMassFlowRate
  0       0                       0                       0                
  6   256   # pump2.massFlowRates[1]
  0       1                       1                       4                
  6   258   # pipe4.energyDynamics
  0       1                       1                       4                
  6   258   # pipe4.massDynamics
  0       1                       1                       4                
  6   258   # pipe4.substanceDynamics
  0       1                       1                       4                
  6   258   # pipe4.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # pipe4.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # pipe4.T_start
 -1       1                       0                       1                
  1   280   # pipe4.X_start[1]
 -1       1                       1                 1.0000000000000000E+100
  1   280   # pipe4.mSenFac
  0       1                       0                       0                
  6   257   # pipe4.allowFlowReversal
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pipe4.port_a.h_outflow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pipe4.port_b.h_outflow
  0 1.0000000000000001E-001       0                       0                
  6   256   # pipe4.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe4.m_flow_small
  0       1                       0                       0                
  6   257   # pipe4.show_T
  0       0                       0                       0                
  6   256   # pipe4.dp
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe4.sta_a.T
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe4.sta_b.T
  0       1                       0                       0                
  6   257   # pipe4.computeFlowResistance
  0       0                       0                       0                
  6   257   # pipe4.from_dp
  0 1.8795347153484360E+002       0                 1.0000000000000000E+100
  6   256   # pipe4.dp_nominal
  0       0                       0                       0                
  6   257   # pipe4.linearizeFlowResistance
 -1 1.0000000000000001E-001       0                       0                
  1   280   # pipe4.deltaM
  0       2                       1                 1.0000000000000000E+100
  6   258   # pipe4.nNodes
 -1 2.0000000000000000E-002       0                       0                
  1   280   # pipe4.thicknessIns
 -1 4.0000000000000001E-002       0                       0                
  1   280   # pipe4.lambdaIns
  0 2.0000000000000000E-002       0                       0                
  6   256   # pipe4.diameter
  0       1                       0                       0                
  6   256   # pipe4.length
 -1    4000                       0                       0                
  1   280   # pipe4.ReC
  0       0                       0                       0                
  6   257   # pipe4.useMultipleHeatPorts
  0       1                       0                       0                
  6   257   # pipe4.res.allowFlowReversal
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pipe4.res.port_b.h_outflow
  0 1.0000000000000001E-001       0                       0                
  6   256   # pipe4.res.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe4.res.m_flow_small
  0       1                       0                       0                
  6   257   # pipe4.res.show_T
  0       0                       0                       0                
  6   256   # pipe4.res.dp
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe4.res.sta_a.T
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe4.res.sta_b.T
  0       0                       0                       0                
  6   257   # pipe4.res.from_dp
  0 1.8795347153484360E+002       0                       0                
  6   256   # pipe4.res.dp_nominal
  0       1                       0                       0                
  6   257   # pipe4.res.homotopyInitialization
  0       0                       0                       0                
  6   257   # pipe4.res.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # pipe4.res.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # pipe4.res.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # pipe4.res.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # pipe4.res.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # pipe4.res.m_flow_nominal_pos
  0 1.8795347153484360E+002       0                       0                
  6  1280   # pipe4.res.dp_nominal_pos
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe4.res.X_default[1]
  0       1                       0                       0                
  6   257   # pipe4.res.use_dh
  0 2.0000000000000000E-002       0                       0                
  6   256   # pipe4.res.dh
  0       0                       0                 1.0000000000000000E+100
  6   256   # pipe4.res.ReC
  0 2.9999999999999999E-001 1.0000000000000000E-002 1.0000000000000000E+100
  6   256   # pipe4.res.deltaM
  0 7.2941522523157767E-003       0                       0                
  6   256   # pipe4.res.k
  0       1                       0                       0                
  6  1281   # pipe4.res.computeFlowResistance
  0       1                       1                       4                
  6   258   # pipe4.vol[1].energyDynamics
  0       1                       1                       4                
  6   258   # pipe4.vol[1].massDynamics
  0       1                       1                       4                
  6   258   # pipe4.vol[1].substanceDynamics
  0       1                       1                       4                
  6   258   # pipe4.vol[1].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # pipe4.vol[1].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe4.vol[1].T_start
  0       0                       0                       1                
  6   256   # pipe4.vol[1].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pipe4.vol[1].mSenFac
  0       0                       0                       0                
  6   769   # pipe4.vol[1].initialize_p
  0       1                       0                       0                
  6   257   # pipe4.vol[1].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # pipe4.vol[1].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # pipe4.vol[1].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # pipe4.vol[1].m_flow_nominal
  0       2                       0                       0                
  6   258   # pipe4.vol[1].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe4.vol[1].m_flow_small
  0       1                       0                       0                
  6   257   # pipe4.vol[1].allowFlowReversal
  0 1.5707963267948965E-004       0                       0                
  6   256   # pipe4.vol[1].V
  0     300                       1                   10000                
  6   260   # pipe4.vol[1].heatPort.T
  0       0                       0                       0                
  6   388   # pipe4.vol[1].heatPort.Q_flow
  0 1.5638628318084238E-001       0                       0                
  6   256   # pipe4.vol[1].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[1].rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe4.vol.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe4.vol[1].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe4.vol[1].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[1].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe4.vol[1].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe4.vol[1].state_start.T
  0       0                       0                       0                
  6  1281   # pipe4.vol[1].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # pipe4.vol[2].energyDynamics
  0       1                       1                       4                
  6   258   # pipe4.vol[2].massDynamics
  0       1                       1                       4                
  6   258   # pipe4.vol[2].substanceDynamics
  0       1                       1                       4                
  6   258   # pipe4.vol[2].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # pipe4.vol[2].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe4.vol[2].T_start
  0       0                       0                       1                
  6   256   # pipe4.vol[2].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pipe4.vol[2].mSenFac
  0       0                       0                       0                
  6   769   # pipe4.vol[2].initialize_p
  0       1                       0                       0                
  6   257   # pipe4.vol[2].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # pipe4.vol[2].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # pipe4.vol[2].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # pipe4.vol[2].m_flow_nominal
  0       2                       0                       0                
  6   258   # pipe4.vol[2].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe4.vol[2].m_flow_small
  0       1                       0                       0                
  6   257   # pipe4.vol[2].allowFlowReversal
  0 1.5707963267948965E-004       0                       0                
  6   256   # pipe4.vol[2].V
  0     300                       1                   10000                
  6   260   # pipe4.vol[2].heatPort.T
  0       0                       0                       0                
  6   388   # pipe4.vol[2].heatPort.Q_flow
  0 1.5638628318084238E-001       0                       0                
  6   256   # pipe4.vol[2].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[2].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe4.vol[2].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe4.vol[2].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[2].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe4.vol[2].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe4.vol[2].state_start.T
  0       0                       0                       0                
  6  1281   # pipe4.vol[2].useSteadyStateTwoPort
  0       0                       0                       0                
  6   256   # pipe4.conPipWal[1].dT
  0       0                       0                       0                
  6   256   # pipe4.conPipWal[1].G
  0       0                       0                       0                
  6   256   # pipe4.conPipWal[2].dT
  0       0                       0                       0                
  6   256   # pipe4.conPipWal[2].G
  0       2                       1                 1.0000000000000000E+100
  6   258   # pipe4.colAllToOne.m
  0       0                       0                       0                
  6   388   # pipe4.heatPort.Q_flow
  0 3.1415926535897931E-004       0                       0                
  6  1280   # pipe4.VPipe
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe4.X_default[1]
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # pipe4.state_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # pipe4.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe4.rho_default
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # pipe4.mu_default
 -1 1.4999999999999999E-001       0                       0                
  1  1304   # pipe4.v_nominal
  0 2.5000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # pipe4.roughness
  0 9.3976735767421800E+001       0                       0                
  6  1280   # pipe4.dpStraightPipe_nominal
  0       1                       1                       4                
  6   258   # pipe5.energyDynamics
  0       1                       1                       4                
  6   258   # pipe5.massDynamics
  0       1                       1                       4                
  6   258   # pipe5.substanceDynamics
  0       1                       1                       4                
  6   258   # pipe5.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # pipe5.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # pipe5.T_start
 -1       1                       0                       1                
  1   280   # pipe5.X_start[1]
 -1       1                       1                 1.0000000000000000E+100
  1   280   # pipe5.mSenFac
  0       1                       0                       0                
  6   257   # pipe5.allowFlowReversal
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pipe5.port_a.h_outflow
  0   83680                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # pipe5.port_b.h_outflow
  0 1.0000000000000001E-001       0                       0                
  6   256   # pipe5.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe5.m_flow_small
  0       1                       0                       0                
  6   257   # pipe5.show_T
  0       0                       0                       0                
  6   256   # pipe5.dp
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe5.sta_a.T
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe5.sta_b.T
  0       1                       0                       0                
  6   257   # pipe5.computeFlowResistance
  0       0                       0                       0                
  6   257   # pipe5.from_dp
  0 1.8795347153484360E+002       0                 1.0000000000000000E+100
  6   256   # pipe5.dp_nominal
  0       0                       0                       0                
  6   257   # pipe5.linearizeFlowResistance
 -1 1.0000000000000001E-001       0                       0                
  1   280   # pipe5.deltaM
  0       2                       1                 1.0000000000000000E+100
  6   258   # pipe5.nNodes
 -1 2.0000000000000000E-002       0                       0                
  1   280   # pipe5.thicknessIns
 -1 4.0000000000000001E-002       0                       0                
  1   280   # pipe5.lambdaIns
  0 2.0000000000000000E-002       0                       0                
  6   256   # pipe5.diameter
  0       1                       0                       0                
  6   256   # pipe5.length
 -1    4000                       0                       0                
  1   280   # pipe5.ReC
  0       0                       0                       0                
  6   257   # pipe5.useMultipleHeatPorts
  0       1                       0                       0                
  6   257   # pipe5.res.allowFlowReversal
  0 1.0000000000000001E-001       0                       0                
  6   256   # pipe5.res.m_flow_nominal
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe5.res.m_flow_small
  0       1                       0                       0                
  6   257   # pipe5.res.show_T
  0       0                       0                       0                
  6   256   # pipe5.res.dp
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe5.res.sta_a.T
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe5.res.sta_b.T
  0       0                       0                       0                
  6   257   # pipe5.res.from_dp
  0 1.8795347153484360E+002       0                       0                
  6   256   # pipe5.res.dp_nominal
  0       1                       0                       0                
  6   257   # pipe5.res.homotopyInitialization
  0       0                       0                       0                
  6   257   # pipe5.res.linearized
  0       0                       0                 1.0000000000000000E+100
  6   256   # pipe5.res.m_flow_turbulent
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # pipe5.res.sta_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # pipe5.res.sta_default.T
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # pipe5.res.eta_default
  0 1.0000000000000001E-001       0                       0                
  6  1280   # pipe5.res.m_flow_nominal_pos
  0 1.8795347153484360E+002       0                       0                
  6  1280   # pipe5.res.dp_nominal_pos
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe5.res.X_default[1]
  0       1                       0                       0                
  6   257   # pipe5.res.use_dh
  0 2.0000000000000000E-002       0                       0                
  6   256   # pipe5.res.dh
  0       0                       0                 1.0000000000000000E+100
  6   256   # pipe5.res.ReC
  0 2.9999999999999999E-001 1.0000000000000000E-002 1.0000000000000000E+100
  6   256   # pipe5.res.deltaM
  0 7.2941522523157767E-003       0                       0                
  6   256   # pipe5.res.k
  0       1                       0                       0                
  6  1281   # pipe5.res.computeFlowResistance
  0       1                       1                       4                
  6   258   # pipe5.vol[1].energyDynamics
  0       1                       1                       4                
  6   258   # pipe5.vol[1].massDynamics
  0       1                       1                       4                
  6   258   # pipe5.vol[1].substanceDynamics
  0       1                       1                       4                
  6   258   # pipe5.vol[1].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # pipe5.vol[1].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe5.vol[1].T_start
  0       0                       0                       1                
  6   256   # pipe5.vol[1].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pipe5.vol[1].mSenFac
  0       0                       0                       0                
  6   769   # pipe5.vol[1].initialize_p
  0       1                       0                       0                
  6   257   # pipe5.vol[1].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # pipe5.vol[1].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # pipe5.vol[1].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # pipe5.vol[1].m_flow_nominal
  0       2                       0                       0                
  6   258   # pipe5.vol[1].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe5.vol[1].m_flow_small
  0       1                       0                       0                
  6   257   # pipe5.vol[1].allowFlowReversal
  0 1.5707963267948965E-004       0                       0                
  6   256   # pipe5.vol[1].V
  0     300                       1                   10000                
  6   260   # pipe5.vol[1].heatPort.T
  0       0                       0                       0                
  6   388   # pipe5.vol[1].heatPort.Q_flow
  0 1.5638628318084238E-001       0                       0                
  6   256   # pipe5.vol[1].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[1].rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe5.vol.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe5.vol[1].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe5.vol[1].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[1].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe5.vol[1].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe5.vol[1].state_start.T
  0       0                       0                       0                
  6  1281   # pipe5.vol[1].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # pipe5.vol[2].energyDynamics
  0       1                       1                       4                
  6   258   # pipe5.vol[2].massDynamics
  0       1                       1                       4                
  6   258   # pipe5.vol[2].substanceDynamics
  0       1                       1                       4                
  6   258   # pipe5.vol[2].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # pipe5.vol[2].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # pipe5.vol[2].T_start
  0       0                       0                       1                
  6   256   # pipe5.vol[2].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # pipe5.vol[2].mSenFac
  0       0                       0                       0                
  6   769   # pipe5.vol[2].initialize_p
  0       1                       0                       0                
  6   257   # pipe5.vol[2].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # pipe5.vol[2].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # pipe5.vol[2].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # pipe5.vol[2].m_flow_nominal
  0       2                       0                       0                
  6   258   # pipe5.vol[2].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # pipe5.vol[2].m_flow_small
  0       1                       0                       0                
  6   257   # pipe5.vol[2].allowFlowReversal
  0 1.5707963267948965E-004       0                       0                
  6   256   # pipe5.vol[2].V
  0     300                       1                   10000                
  6   260   # pipe5.vol[2].heatPort.T
  0       0                       0                       0                
  6   388   # pipe5.vol[2].heatPort.Q_flow
  0 1.5638628318084238E-001       0                       0                
  6   256   # pipe5.vol[2].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[2].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe5.vol[2].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe5.vol[2].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[2].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe5.vol[2].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe5.vol[2].state_start.T
  0       0                       0                       0                
  6  1281   # pipe5.vol[2].useSteadyStateTwoPort
  0       0                       0                       0                
  6   256   # pipe5.conPipWal[1].dT
  0       0                       0                       0                
  6   256   # pipe5.conPipWal[1].G
  0       0                       0                       0                
  6   256   # pipe5.conPipWal[2].dT
  0       0                       0                       0                
  6   256   # pipe5.conPipWal[2].G
  0       2                       1                 1.0000000000000000E+100
  6   258   # pipe5.colAllToOne.m
  0       0                       0                       0                
  6   388   # pipe5.heatPort.Q_flow
  0 3.1415926535897931E-004       0                       0                
  6  1280   # pipe5.VPipe
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe5.X_default[1]
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1  1304   # pipe5.state_default.p
 -1 2.9314999999999998E+002       1                   10000                
  1  1304   # pipe5.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe5.rho_default
  0 1.0000000000000000E-003       0                 1.0000000000000000E+100
  6  1280   # pipe5.mu_default
 -1 1.4999999999999999E-001       0                       0                
  1  1304   # pipe5.v_nominal
  0 2.5000000000000001E-005       0                 1.0000000000000000E+100
  6  1280   # pipe5.roughness
  0 9.3976735767421800E+001       0                       0                
  6  1280   # pipe5.dpStraightPipe_nominal
  0       1                       0                       0                
  6   256   # colOn.k
  0       2                       1                       4                
  6   258   # exp2.energyDynamics
  0       2                       1                       4                
  6   258   # exp2.massDynamics
  0       2                       1                       4                
  6   258   # exp2.substanceDynamics
  0       2                       1                       4                
  6   258   # exp2.traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # exp2.p_start
 -1 2.9314999999999998E+002       1                   10000                
  1   280   # exp2.T_start
 -1       1                       0                       1                
  1   280   # exp2.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # exp2.mSenFac
 -1 1.0000000000000001E-001       0                       0                
  1   280   # exp2.V_start
 -1 3.0000000000000000E+005       0                       0                
  1   280   # exp2.p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # exp2.port_a.h_outflow
 -1       0                       0                 1.0000000000000000E+100
  2   272   # exp2.m
  0       0                       0                       0                
  3   256   # exp2.der(m)
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # exp2.state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # exp2.state_start.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # exp2.rho_start
 -1       0                       0                       0                
  2  1296   # exp2.H
  0       0                       0                       0                
  3  1280   # exp2.der(H)
 -1       1                       0                       0                
  1   280   # control.uLow
 -1       4                       0                       0                
  1   280   # control.uHigh
 -1       0                       0                       0                
  1   281   # control.pre_y_start
  0       0                       0                       0                
  6   256   # control.u
  0       0                       0                       0                
  6   321   # control.y
  0       0                       0                       0                
  6   321   # switch1.u2
  0       0                       0                       0                
  6   320   # switch1.y
 -1       0                       0                       0                
  1   280   # ColOff.k
 -1       1                       0                       0                
  1   280   # add.k1
 -1      -1                       0                       0                
  1   280   # add.k2
 -1 5.2359877559830004E-001       0                       0                
  1   280   # HDirTilColl.til
 -1 8.7266462599715999E-001       0                       0                
  1   280   # HDirTilColl.lat
 -1       0                       0                       0                
  1   280   # HDirTilColl.azi
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.lat
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.azi
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.til
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.decAng.decAng
  0 3.9794863130761032E-001       0                       0                
  6  1280   # HDirTilColl.incAng.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # HDirTilColl.incAng.decAng.k2
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.solHouAng.solHouAng
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.incAng.lat
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.incAng.azi
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.incAng.til
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.incAng.dec_c
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.incAng.dec_s
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.incAng.sol_c
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.incAng.sol_s
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.incAng.lat_c
  0       0                       0                       0                
  6  1280   # HDirTilColl.incAng.incAng.lat_s
 -1 1.5707963267949001E+000       0                       0                
  1   280   # HDifTilColl.til
 -1 2.0000000000000001E-001       0                       1                
  1   280   # HDifTilColl.rho
 -1 8.7266462599715999E-001       0                       0                
  1   280   # HDifTilColl.lat
 -1       0                       0                       0                
  1   280   # HDifTilColl.azi
  0       1                       0                       0                
  6   257   # HDifTilColl.outSkyCon
  0       1                       0                       0                
  6   257   # HDifTilColl.outGroCon
  0       0                       0                       0                
  6   256   # HDifTilColl.add.u1
  0       0                       0                       0                
  6   256   # HDifTilColl.add.u2
 -1       1                       0                       0                
  1   280   # HDifTilColl.add.k1
 -1       1                       0                       0                
  1   280   # HDifTilColl.add.k2
  0       0                       0                       0                
  6  1280   # HDifTilColl.HDifTil.rho
  0       0                       0                       0                
  6  1280   # HDifTilColl.HDifTil.til
  0       0                       0                       0                
  6  1280   # HDifTilColl.HDifTil.briCof1
  0       0                       0                       0                
  6  1280   # HDifTilColl.HDifTil.briCof2
  0       0                       0                       0                
  6  1280   # HDifTilColl.HDifTil.incAng
  0       0                       0                       0                
  6  1280   # HDifTilColl.HDifTil.a
  0       0                       0                       0                
  6  1280   # HDifTilColl.HDifTil.b
  0 8.7155742747658138E-002       0                       0                
  6  1280   # HDifTilColl.HDifTil.bMin
  0       0                       0                       0                
  6  1280   # HDifTilColl.skyCle.skyCle
  0 1.0408953107389971E+000       0                       0                
  6  1280   # HDifTilColl.skyCle.k
  0       0                       0                       0                
  6  1280   # HDifTilColl.skyCle.tmp1
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.skyBri
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.F11
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.F12
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.F13
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.F21
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.F22
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.F23
  0 1.0000000000000000E-002       0                       0                
  6  1280   # HDifTilColl.briCoe.d
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.a1
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.a2
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.a3
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.a4
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.a5
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.a6
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.a7
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.a8
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.b2
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.b3
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.b4
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.b5
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.b6
  0       0                       0                       0                
  6  1280   # HDifTilColl.briCoe.b7
  0       0                       0                       0                
  6  1280   # HDifTilColl.relAirMas.relAirMas
  0       0                       0                       0                
  6  1280   # HDifTilColl.relAirMas.zenLim
  0       0                       0                       0                
  6  1280   # HDifTilColl.relAirMas.zenDeg
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.lat
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.azi
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.til
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.decAng.decAng
  0 3.9794863130761032E-001       0                       0                
  6  1280   # HDifTilColl.incAng.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # HDifTilColl.incAng.decAng.k2
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.solHouAng.solHouAng
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.incAng.lat
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.incAng.azi
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.incAng.til
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.incAng.dec_c
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.incAng.dec_s
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.incAng.sol_c
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.incAng.sol_s
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.incAng.lat_c
  0       0                       0                       0                
  6  1280   # HDifTilColl.incAng.incAng.lat_s
  0       0                       0                       0                
  6   257   # weaDat.computeWetBulbTemperature
  0       2                       1                       3                
  6   258   # weaDat.pAtmSou
 -1 1.0132500000000000E+005       0                       0                
  1   280   # weaDat.pAtm
  0       1                       1                       3                
  6   258   # weaDat.ceiHeiSou
 -1   20000                       0                       0                
  1   280   # weaDat.ceiHei
  0       1                       1                       3                
  6   258   # weaDat.totSkyCovSou
 -1 5.0000000000000000E-001       0                       1                
  1   280   # weaDat.totSkyCov
  0       1                       1                       3                
  6   258   # weaDat.opaSkyCovSou
 -1 5.0000000000000000E-001       0                       1                
  1   280   # weaDat.opaSkyCov
  0       1                       1                       3                
  6   258   # weaDat.TDryBulSou
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # weaDat.TDryBul
  0       1                       1                       3                
  6   258   # weaDat.TDewPoiSou
 -1 2.8314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # weaDat.TDewPoi
  0       1                       1                       3                
  6   258   # weaDat.TBlaSkySou
 -1 2.7314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # weaDat.TBlaSky
  0       1                       1                       3                
  6   258   # weaDat.relHumSou
 -1 5.0000000000000000E-001       0                       1                
  1   280   # weaDat.relHum
  0       1                       1                       3                
  6   258   # weaDat.winSpeSou
 -1       1                       0                 1.0000000000000000E+100
  1   280   # weaDat.winSpe
  0       1                       1                       3                
  6   258   # weaDat.winDirSou
 -1       1                       0                       0                
  1   280   # weaDat.winDir
  0       1                       1                       3                
  6   258   # weaDat.HInfHorSou
 -1       0                       0                       0                
  1   280   # weaDat.HInfHor
  0       1                       1                       4                
  6   258   # weaDat.HSou
  0 -1.5344934783534145E+000       0                       0                
  6   256   # weaDat.lon
  0 7.3268921998721959E-001       0                       0                
  6   256   # weaDat.lat
  0  -21600                       0                       0                
  6   256   # weaDat.timZon
  0       1                       1                       2                
  6   258   # weaDat.calTSky
  0 9.9999999999999995E-007       0                       0                
  6   256   # weaDat.epsCos
  0      25                       0                       0                
  6  1282   # weaDat.datRea.nout
  0       0                       0                       0                
  6  1280   # weaDat.datRea.u
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[1]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[2]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[3]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[4]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[5]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[6]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[7]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[8]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[9]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[10]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[11]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[13]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[14]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[15]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[17]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[18]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[19]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[20]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[21]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[22]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[23]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[24]
  0       0                       0                       0                
  6  1280   # weaDat.datRea.y[25]
  0       1                       0                       0                
  6  1281   # weaDat.datRea.tableOnFile
 -1       1                       0                       0                
  1  1305   # weaDat.datRea.verboseRead
  0       2                       0                       0                
  6  1282   # weaDat.datRea.columns[1]
  0       3                       0                       0                
  6  1282   # weaDat.datRea.columns[2]
  0       4                       0                       0                
  6  1282   # weaDat.datRea.columns[3]
  0       5                       0                       0                
  6  1282   # weaDat.datRea.columns[4]
  0       6                       0                       0                
  6  1282   # weaDat.datRea.columns[5]
  0      11                       0                       0                
  6  1282   # weaDat.datRea.columns[6]
  0      12                       0                       0                
  6  1282   # weaDat.datRea.columns[7]
  0      13                       0                       0                
  6  1282   # weaDat.datRea.columns[8]
  0      14                       0                       0                
  6  1282   # weaDat.datRea.columns[9]
  0      15                       0                       0                
  6  1282   # weaDat.datRea.columns[10]
  0      16                       0                       0                
  6  1282   # weaDat.datRea.columns[11]
  0      17                       0                       0                
  6  1282   # weaDat.datRea.columns[12]
  0      18                       0                       0                
  6  1282   # weaDat.datRea.columns[13]
  0      19                       0                       0                
  6  1282   # weaDat.datRea.columns[14]
  0      20                       0                       0                
  6  1282   # weaDat.datRea.columns[15]
  0      21                       0                       0                
  6  1282   # weaDat.datRea.columns[16]
  0      22                       0                       0                
  6  1282   # weaDat.datRea.columns[17]
  0      23                       0                       0                
  6  1282   # weaDat.datRea.columns[18]
  0      24                       0                       0                
  6  1282   # weaDat.datRea.columns[19]
  0      25                       0                       0                
  6  1282   # weaDat.datRea.columns[20]
  0      26                       0                       0                
  6  1282   # weaDat.datRea.columns[21]
  0      27                       0                       0                
  6  1282   # weaDat.datRea.columns[22]
  0      28                       0                       0                
  6  1282   # weaDat.datRea.columns[23]
  0      29                       0                       0                
  6  1282   # weaDat.datRea.columns[24]
  0      30                       0                       0                
  6  1282   # weaDat.datRea.columns[25]
  0       2                       1                       5                
  6  1282   # weaDat.datRea.smoothness
  0       0                       0                       0                
  6  1282   # weaDat.datRea.tableID.id
  0       0                       0                       0                
  6  1280   # weaDat.datRea.tableOnFileRead
 -1 2.0315000000000001E+002       0                 1.0000000000000000E+100
  1  1304   # weaDat.cheTemDryBul.TMin
 -1 3.4314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # weaDat.cheTemDryBul.TMax
 -1 2.0315000000000001E+002       0                 1.0000000000000000E+100
  1  1304   # weaDat.cheTemDewPoi.TMin
 -1 3.4314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # weaDat.cheTemDewPoi.TMax
  0    3100                       0                       0                
  6  1280   # weaDat.chePre.PMin
  0 1.2000000000000000E+005       0                       0                
  6  1280   # weaDat.chePre.PMax
  0 1.0000000000000000E-002       0                       0                
  6  1280   # weaDat.cheTotSkyCov.delta
  0 1.0000000000000000E-002       0                       0                
  6  1280   # weaDat.cheTotSkyCov.nMin
  0 9.9900000000000002E+000       0                       0                
  6  1280   # weaDat.cheTotSkyCov.nMax
  0 1.0000000000000000E-002       0                       0                
  6  1280   # weaDat.cheOpaSkyCov.delta
  0 1.0000000000000000E-002       0                       0                
  6  1280   # weaDat.cheOpaSkyCov.nMin
  0 9.9900000000000002E+000       0                       0                
  6  1280   # weaDat.cheOpaSkyCov.nMax
  0 1.0000000000000000E-004       0                       0                
  6  1280   # weaDat.cheGloHorRad.HMin
  0 1.0000000000000000E-004       0                       0                
  6  1280   # weaDat.cheDifHorRad.HMin
  0 1.0000000000000000E-004       0                       0                
  6  1280   # weaDat.cheDirNorRad.HMin
  0       0                       0                 1.0000000000000000E+100
  6  1280   # weaDat.cheCeiHei.ceiHeiMin
  0 9.9999999999999995E-007       0                       0                
  6  1280   # weaDat.cheWinSpe.winSpeMin
  0 1.0000000000000000E-004       0                       0                
  6  1280   # weaDat.cheHorRad.HMin
  0 1.0000000000000000E-002       0                       0                
  6  1280   # weaDat.cheWinDir.delta
  0       0                       0                       0                
  6  1280   # weaDat.cheWinDir.nMin
  0 6.2831853071795862E+000       0                       0                
  6  1280   # weaDat.cheWinDir.nMax
  0       1                       1                       2                
  6  1282   # weaDat.TBlaSkyCom.calTSky
  0 2.7314999999999998E+002       0                 1.0000000000000000E+100
  6  1280   # weaDat.TBlaSkyCom.TDewPoiK
  0       0                       0                       0                
  6  1280   # weaDat.TBlaSkyCom.epsSky
  0       0                       0                      10                
  6  1280   # weaDat.TBlaSkyCom.nOpa10
  0    1800                       0                       0                
  6  1280   # weaDat.add.u1
  0       0                       0                       0                
  6  1280   # weaDat.add.y
 -1       1                       0                       0                
  1  1304   # weaDat.add.k1
 -1       1                       0                       0                
  1  1304   # weaDat.add.k2
  0    1800                       0                       0                
  6  1280   # weaDat.con30mins.k
  0    1800                       0                       0                
  6  1280   # weaDat.con30mins.y
  0  -21600                       0                       0                
  6  1280   # weaDat.locTim.timZon
  0 -1.5344934783534145E+000       0                       0                
  6  1280   # weaDat.locTim.lon
  0       0                       0                       0                
  6  1280   # weaDat.locTim.locTim
  0 4.9920000000000073E+002       0                       0                
  6  1280   # weaDat.locTim.diff
  0       4                       0                       0                
  6  1282   # weaDat.datRea1.nout
  0       0                       0                       0                
  6  1280   # weaDat.datRea1.u
  0       1                       0                       0                
  6  1281   # weaDat.datRea1.tableOnFile
 -1       1                       0                       0                
  1  1305   # weaDat.datRea1.verboseRead
  0       8                       0                       0                
  6  1282   # weaDat.datRea1.columns[1]
  0       9                       0                       0                
  6  1282   # weaDat.datRea1.columns[2]
  0      10                       0                       0                
  6  1282   # weaDat.datRea1.columns[3]
  0      11                       0                       0                
  6  1282   # weaDat.datRea1.columns[4]
  0       2                       1                       5                
  6  1282   # weaDat.datRea1.smoothness
  0       0                       0                       0                
  6  1282   # weaDat.datRea1.tableID.id
  0       0                       0                       0                
  6  1280   # weaDat.datRea1.tableOnFileRead
  0 3.1536000000000000E+007       0                       0                
  6  1280   # weaDat.conTim1.year
  0       0                       0                       0                
  6  1344   # weaDat.conTim1.tStart
  0 3.1536000000000000E+007       0                       0                
  6  1280   # weaDat.conTim.year
  0       0                       0                       0                
  6  1344   # weaDat.conTim.tStart
  0       0                       0                       0                
  6  1280   # weaDat.eqnTim.eqnTim
  0       0                       0                       0                
  6  1280   # weaDat.eqnTim.Bt
  0       0                       0                       0                
  6  1280   # weaDat.ceiHei_in_internal
  0       0                       0                       1                
  6  1280   # weaDat.totSkyCov_in_internal
  0       0                       0                       1                
  6  1280   # weaDat.opaSkyCov_in_internal
  0       0                       0                       1                
  6  1280   # weaDat.relHum_in_internal
  0       0                       0                       0                
  6  1280   # weaDat.winSpe_in_internal
  0       0                       0                       0                
  6  1280   # weaDat.winDir_in_internal
  0       0                       0                       0                
  6  1280   # weaDat.HGloHor_in_internal
  0       0                       0                       0                
  6  1280   # weaDat.HDifHor_in_internal
  0       0                       0                       0                
  6  1280   # weaDat.HDirNor_in_internal
  0       0                       0                       0                
  6  1280   # weaDat.HInfHor_in_internal
  0    3600                       0                       0                
  6  1280   # weaDat.conHorRad.Hou
  0    3600                       0                       0                
  6  1280   # weaDat.conDirNorRad.Hou
  0    3600                       0                       0                
  6  1280   # weaDat.conGloHorRad.Hou
  0    3600                       0                       0                
  6  1280   # weaDat.conDifHorRad.Hou
  0 1.0000000000000000E-002       0                       0                
  6  1280   # weaDat.cheRelHum.delta
  0 1.0000000000000000E-002       0                       0                
  6  1280   # weaDat.cheRelHum.relHumMin
  0 9.8999999999999999E-001       0                       0                
  6  1280   # weaDat.cheRelHum.relHumMax
  0 7.3268921998721959E-001       0                       0                
  6  1280   # weaDat.zenAng.lat
  0 3.9794863130761032E-001       0                       0                
  6  1280   # weaDat.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # weaDat.decAng.k2
  0 7.3268921998721959E-001       0                       0                
  6  1280   # weaDat.latitude.latitude
  0 7.3268921998721959E-001       0                       0                
  6  1280   # weaDat.latitude.y
  0 -1.5344934783534145E+000       0                       0                
  6  1280   # weaDat.longitude.longitude
  0 -1.5344934783534145E+000       0                       0                
  6  1280   # weaDat.longitude.y
  0 1.0000000000000001E-001       0                       0                
  6  1280   # weaDat.conTotSkyCov.k
  0 1.0000000000000001E-001       0                       0                
  6  1280   # weaDat.conOpaSkyCov.k
 -1       0                       0                 1.0000000000000000E+100
  1  1304   # weaDat.cheTemBlaSky.TMin
 -1 3.4314999999999998E+002       0                 1.0000000000000000E+100
  1  1304   # weaDat.cheTemBlaSky.TMax
 -1 1.5707963267948966E+000       0                       0                
  1   280   # HDifTil[1].til
  0       0                       0                       0                
  6   256   # HDifTil[1].H
 -1 2.0000000000000001E-001       0                       1                
  1   280   # HDifTil[1].rho
 -1 8.7266462599715999E-001       0                       0                
  1   280   # HDifTil[1].lat
 -1 3.1415926535897931E+000       0                       0                
  1   280   # HDifTil[1].azi
  0       1                       0                       0                
  6   257   # HDifTil[1].outSkyCon
  0       1                       0                       0                
  6   257   # HDifTil[1].outGroCon
 -1       1                       0                       0                
  1   280   # HDifTil[1].add.k1
 -1       1                       0                       0                
  1   280   # HDifTil[1].add.k2
  0       0                       0                       0                
  6  1280   # HDifTil[1].HDifTil.rho
  0       0                       0                       0                
  6  1280   # HDifTil[1].HDifTil.til
  0       0                       0                       0                
  6  1280   # HDifTil[1].HDifTil.briCof1
  0       0                       0                       0                
  6  1280   # HDifTil[1].HDifTil.briCof2
  0       0                       0                       0                
  6  1280   # HDifTil[1].HDifTil.incAng
  0       0                       0                       0                
  6  1280   # HDifTil[1].HDifTil.a
  0       0                       0                       0                
  6  1280   # HDifTil[1].HDifTil.b
  0 8.7155742747658138E-002       0                       0                
  6  1280   # HDifTil[1].HDifTil.bMin
  0       0                       0                       0                
  6  1280   # HDifTil[1].skyCle.skyCle
  0 1.0408953107389971E+000       0                       0                
  6  1280   # HDifTil[1].skyCle.k
  0       0                       0                       0                
  6  1280   # HDifTil[1].skyCle.tmp1
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.skyBri
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.F11
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.F12
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.F13
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.F21
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.F22
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.F23
  0 1.0000000000000000E-002       0                       0                
  6  1280   # HDifTil[1].briCoe.d
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.a1
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.a2
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.a3
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.a4
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.a5
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.a6
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.a7
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.a8
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.b2
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.b3
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.b4
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.b5
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.b6
  0       0                       0                       0                
  6  1280   # HDifTil[1].briCoe.b7
  0       0                       0                       0                
  6  1280   # HDifTil[1].relAirMas.relAirMas
  0       0                       0                       0                
  6  1280   # HDifTil[1].relAirMas.zenLim
  0       0                       0                       0                
  6  1280   # HDifTil[1].relAirMas.zenDeg
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.lat
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.azi
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.til
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.decAng.decAng
  0 3.9794863130761032E-001       0                       0                
  6  1280   # HDifTil[1].incAng.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # HDifTil[1].incAng.decAng.k2
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.solHouAng.solHouAng
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.incAng.lat
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.incAng.azi
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.incAng.til
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.incAng.dec_c
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.incAng.dec_s
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.incAng.sol_c
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.incAng.sol_s
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.incAng.lat_c
  0       0                       0                       0                
  6  1280   # HDifTil[1].incAng.incAng.lat_s
 -1 1.5707963267948966E+000       0                       0                
  1   280   # HDifTil[2].til
  0       0                       0                       0                
  6   256   # HDifTil[2].H
 -1 2.0000000000000001E-001       0                       1                
  1   280   # HDifTil[2].rho
 -1 8.7266462599715999E-001       0                       0                
  1   280   # HDifTil[2].lat
 -1 -1.5707963267948966E+000       0                       0                
  1   280   # HDifTil[2].azi
  0       1                       0                       0                
  6   257   # HDifTil[2].outSkyCon
  0       1                       0                       0                
  6   257   # HDifTil[2].outGroCon
 -1       1                       0                       0                
  1   280   # HDifTil[2].add.k1
 -1       1                       0                       0                
  1   280   # HDifTil[2].add.k2
  0       0                       0                       0                
  6  1280   # HDifTil[2].HDifTil.rho
  0       0                       0                       0                
  6  1280   # HDifTil[2].HDifTil.til
  0       0                       0                       0                
  6  1280   # HDifTil[2].HDifTil.briCof1
  0       0                       0                       0                
  6  1280   # HDifTil[2].HDifTil.briCof2
  0       0                       0                       0                
  6  1280   # HDifTil[2].HDifTil.incAng
  0       0                       0                       0                
  6  1280   # HDifTil[2].HDifTil.a
  0       0                       0                       0                
  6  1280   # HDifTil[2].HDifTil.b
  0 8.7155742747658138E-002       0                       0                
  6  1280   # HDifTil[2].HDifTil.bMin
  0       0                       0                       0                
  6  1280   # HDifTil[2].skyCle.skyCle
  0 1.0408953107389971E+000       0                       0                
  6  1280   # HDifTil[2].skyCle.k
  0       0                       0                       0                
  6  1280   # HDifTil[2].skyCle.tmp1
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.skyBri
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.F11
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.F12
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.F13
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.F21
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.F22
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.F23
  0 1.0000000000000000E-002       0                       0                
  6  1280   # HDifTil[2].briCoe.d
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.a1
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.a2
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.a3
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.a4
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.a5
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.a6
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.a7
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.a8
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.b2
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.b3
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.b4
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.b5
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.b6
  0       0                       0                       0                
  6  1280   # HDifTil[2].briCoe.b7
  0       0                       0                       0                
  6  1280   # HDifTil[2].relAirMas.relAirMas
  0       0                       0                       0                
  6  1280   # HDifTil[2].relAirMas.zenLim
  0       0                       0                       0                
  6  1280   # HDifTil[2].relAirMas.zenDeg
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.lat
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.azi
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.til
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.decAng.decAng
  0 3.9794863130761032E-001       0                       0                
  6  1280   # HDifTil[2].incAng.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # HDifTil[2].incAng.decAng.k2
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.solHouAng.solHouAng
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.incAng.lat
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.incAng.azi
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.incAng.til
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.incAng.dec_c
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.incAng.dec_s
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.incAng.sol_c
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.incAng.sol_s
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.incAng.lat_c
  0       0                       0                       0                
  6  1280   # HDifTil[2].incAng.incAng.lat_s
 -1 1.5707963267948966E+000       0                       0                
  1   280   # HDifTil[3].til
  0       0                       0                       0                
  6   256   # HDifTil[3].H
 -1 2.0000000000000001E-001       0                       1                
  1   280   # HDifTil[3].rho
 -1 8.7266462599715999E-001       0                       0                
  1   280   # HDifTil[3].lat
 -1       0                       0                       0                
  1   280   # HDifTil[3].azi
  0       1                       0                       0                
  6   257   # HDifTil[3].outSkyCon
  0       1                       0                       0                
  6   257   # HDifTil[3].outGroCon
 -1       1                       0                       0                
  1   280   # HDifTil[3].add.k1
 -1       1                       0                       0                
  1   280   # HDifTil[3].add.k2
  0       0                       0                       0                
  6  1280   # HDifTil[3].HDifTil.rho
  0       0                       0                       0                
  6  1280   # HDifTil[3].HDifTil.til
  0       0                       0                       0                
  6  1280   # HDifTil[3].HDifTil.briCof1
  0       0                       0                       0                
  6  1280   # HDifTil[3].HDifTil.briCof2
  0       0                       0                       0                
  6  1280   # HDifTil[3].HDifTil.incAng
  0       0                       0                       0                
  6  1280   # HDifTil[3].HDifTil.a
  0       0                       0                       0                
  6  1280   # HDifTil[3].HDifTil.b
  0 8.7155742747658138E-002       0                       0                
  6  1280   # HDifTil[3].HDifTil.bMin
  0       0                       0                       0                
  6  1280   # HDifTil[3].skyCle.skyCle
  0 1.0408953107389971E+000       0                       0                
  6  1280   # HDifTil[3].skyCle.k
  0       0                       0                       0                
  6  1280   # HDifTil[3].skyCle.tmp1
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.skyBri
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.F11
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.F12
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.F13
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.F21
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.F22
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.F23
  0 1.0000000000000000E-002       0                       0                
  6  1280   # HDifTil[3].briCoe.d
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.a1
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.a2
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.a3
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.a4
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.a5
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.a6
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.a7
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.a8
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.b2
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.b3
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.b4
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.b5
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.b6
  0       0                       0                       0                
  6  1280   # HDifTil[3].briCoe.b7
  0       0                       0                       0                
  6  1280   # HDifTil[3].relAirMas.relAirMas
  0       0                       0                       0                
  6  1280   # HDifTil[3].relAirMas.zenLim
  0       0                       0                       0                
  6  1280   # HDifTil[3].relAirMas.zenDeg
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.lat
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.azi
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.til
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.decAng.decAng
  0 3.9794863130761032E-001       0                       0                
  6  1280   # HDifTil[3].incAng.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # HDifTil[3].incAng.decAng.k2
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.solHouAng.solHouAng
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.incAng.lat
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.incAng.azi
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.incAng.til
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.incAng.dec_c
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.incAng.dec_s
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.incAng.sol_c
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.incAng.sol_s
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.incAng.lat_c
  0       0                       0                       0                
  6  1280   # HDifTil[3].incAng.incAng.lat_s
 -1 1.5707963267948966E+000       0                       0                
  1   280   # HDifTil[4].til
  0       0                       0                       0                
  6   256   # HDifTil[4].H
 -1 2.0000000000000001E-001       0                       1                
  1   280   # HDifTil[4].rho
 -1 8.7266462599715999E-001       0                       0                
  1   280   # HDifTil[4].lat
 -1 1.5707963267948966E+000       0                       0                
  1   280   # HDifTil[4].azi
  0       1                       0                       0                
  6   257   # HDifTil[4].outSkyCon
  0       1                       0                       0                
  6   257   # HDifTil[4].outGroCon
 -1       1                       0                       0                
  1   280   # HDifTil[4].add.k1
 -1       1                       0                       0                
  1   280   # HDifTil[4].add.k2
  0       0                       0                       0                
  6  1280   # HDifTil[4].HDifTil.rho
  0       0                       0                       0                
  6  1280   # HDifTil[4].HDifTil.til
  0       0                       0                       0                
  6  1280   # HDifTil[4].HDifTil.briCof1
  0       0                       0                       0                
  6  1280   # HDifTil[4].HDifTil.briCof2
  0       0                       0                       0                
  6  1280   # HDifTil[4].HDifTil.incAng
  0       0                       0                       0                
  6  1280   # HDifTil[4].HDifTil.a
  0       0                       0                       0                
  6  1280   # HDifTil[4].HDifTil.b
  0 8.7155742747658138E-002       0                       0                
  6  1280   # HDifTil[4].HDifTil.bMin
  0       0                       0                       0                
  6  1280   # HDifTil[4].skyCle.skyCle
  0 1.0408953107389971E+000       0                       0                
  6  1280   # HDifTil[4].skyCle.k
  0       0                       0                       0                
  6  1280   # HDifTil[4].skyCle.tmp1
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.skyBri
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.F11
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.F12
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.F13
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.F21
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.F22
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.F23
  0 1.0000000000000000E-002       0                       0                
  6  1280   # HDifTil[4].briCoe.d
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.a1
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.a2
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.a3
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.a4
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.a5
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.a6
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.a7
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.a8
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.b2
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.b3
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.b4
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.b5
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.b6
  0       0                       0                       0                
  6  1280   # HDifTil[4].briCoe.b7
  0       0                       0                       0                
  6  1280   # HDifTil[4].relAirMas.relAirMas
  0       0                       0                       0                
  6  1280   # HDifTil[4].relAirMas.zenLim
  0       0                       0                       0                
  6  1280   # HDifTil[4].relAirMas.zenDeg
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.lat
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.azi
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.til
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.decAng.decAng
  0 3.9794863130761032E-001       0                       0                
  6  1280   # HDifTil[4].incAng.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # HDifTil[4].incAng.decAng.k2
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.solHouAng.solHouAng
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.incAng.lat
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.incAng.azi
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.incAng.til
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.incAng.dec_c
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.incAng.dec_s
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.incAng.sol_c
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.incAng.sol_s
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.incAng.lat_c
  0       0                       0                       0                
  6  1280   # HDifTil[4].incAng.incAng.lat_s
 -1 1.5707963267948966E+000       0                       0                
  1   280   # HDirTil[1].til
 -1 8.7266462599715999E-001       0                       0                
  1   280   # HDirTil[1].lat
 -1 3.1415926535897931E+000       0                       0                
  1   280   # HDirTil[1].azi
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.lat
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.azi
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.til
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.decAng.decAng
  0 3.9794863130761032E-001       0                       0                
  6  1280   # HDirTil[1].incAng.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # HDirTil[1].incAng.decAng.k2
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.solHouAng.solHouAng
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.incAng.lat
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.incAng.azi
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.incAng.til
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.incAng.dec_c
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.incAng.dec_s
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.incAng.sol_c
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.incAng.sol_s
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.incAng.lat_c
  0       0                       0                       0                
  6  1280   # HDirTil[1].incAng.incAng.lat_s
 -1 1.5707963267948966E+000       0                       0                
  1   280   # HDirTil[2].til
 -1 8.7266462599715999E-001       0                       0                
  1   280   # HDirTil[2].lat
 -1 -1.5707963267948966E+000       0                       0                
  1   280   # HDirTil[2].azi
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.lat
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.azi
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.til
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.decAng.decAng
  0 3.9794863130761032E-001       0                       0                
  6  1280   # HDirTil[2].incAng.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # HDirTil[2].incAng.decAng.k2
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.solHouAng.solHouAng
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.incAng.lat
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.incAng.azi
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.incAng.til
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.incAng.dec_c
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.incAng.dec_s
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.incAng.sol_c
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.incAng.sol_s
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.incAng.lat_c
  0       0                       0                       0                
  6  1280   # HDirTil[2].incAng.incAng.lat_s
 -1 1.5707963267948966E+000       0                       0                
  1   280   # HDirTil[3].til
 -1 8.7266462599715999E-001       0                       0                
  1   280   # HDirTil[3].lat
 -1       0                       0                       0                
  1   280   # HDirTil[3].azi
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.lat
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.azi
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.til
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.decAng.decAng
  0 3.9794863130761032E-001       0                       0                
  6  1280   # HDirTil[3].incAng.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # HDirTil[3].incAng.decAng.k2
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.solHouAng.solHouAng
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.incAng.lat
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.incAng.azi
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.incAng.til
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.incAng.dec_c
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.incAng.dec_s
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.incAng.sol_c
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.incAng.sol_s
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.incAng.lat_c
  0       0                       0                       0                
  6  1280   # HDirTil[3].incAng.incAng.lat_s
 -1 1.5707963267948966E+000       0                       0                
  1   280   # HDirTil[4].til
 -1 8.7266462599715999E-001       0                       0                
  1   280   # HDirTil[4].lat
 -1 1.5707963267948966E+000       0                       0                
  1   280   # HDirTil[4].azi
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.lat
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.azi
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.til
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.decAng.decAng
  0 3.9794863130761032E-001       0                       0                
  6  1280   # HDirTil[4].incAng.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # HDirTil[4].incAng.decAng.k2
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.solHouAng.solHouAng
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.incAng.lat
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.incAng.azi
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.incAng.til
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.incAng.dec_c
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.incAng.dec_s
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.incAng.sol_c
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.incAng.sol_s
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.incAng.lat_c
  0       0                       0                       0                
  6  1280   # HDirTil[4].incAng.incAng.lat_s
  0       4                       1                 1.0000000000000000E+100
  6   258   # corGDoublePane.n
 -1 9.8139557381350628E-001       0                       0                
  1   280   # corGDoublePane.UWin
  0       0                       0                       0                
  6   256   # corGDoublePane.HSkyDifTil[1]
  0       0                       0                       0                
  6   256   # corGDoublePane.HSkyDifTil[2]
  0       0                       0                       0                
  6   256   # corGDoublePane.HSkyDifTil[3]
  0       0                       0                       0                
  6   256   # corGDoublePane.HSkyDifTil[4]
  0       0                       0                       0                
  6   256   # corGDoublePane.HDirTil[1]
  0       0                       0                       0                
  6   256   # corGDoublePane.HDirTil[2]
  0       0                       0                       0                
  6   256   # corGDoublePane.HDirTil[3]
  0       0                       0                       0                
  6   256   # corGDoublePane.HDirTil[4]
  0       0                       0                       0                
  6   256   # corGDoublePane.HGroDifTil[1]
  0       0                       0                       0                
  6   256   # corGDoublePane.HGroDifTil[2]
  0       0                       0                       0                
  6   256   # corGDoublePane.HGroDifTil[3]
  0       0                       0                       0                
  6   256   # corGDoublePane.HGroDifTil[4]
  0       0                       0                       0                
  6   256   # corGDoublePane.inc[1]
  0       0                       0                       0                
  6   256   # corGDoublePane.inc[2]
  0       0                       0                       0                
  6   256   # corGDoublePane.inc[3]
  0       0                       0                       0                
  6   256   # corGDoublePane.inc[4]
  0       0                       0                       0                
  6   256   # corGDoublePane.solarRadWinTrans[1]
  0       0                       0                       0                
  6   256   # corGDoublePane.solarRadWinTrans[2]
  0       0                       0                       0                
  6   256   # corGDoublePane.solarRadWinTrans[3]
  0       0                       0                       0                
  6   256   # corGDoublePane.solarRadWinTrans[4]
 -1 9.1800000000000004E-001       0                       0                
  1  1304   # corGDoublePane.A0
 -1 2.2100000000000001E-004       0                       0                
  1  1304   # corGDoublePane.A1
 -1 -2.7500000000000001E-005       0                       0                
  1  1304   # corGDoublePane.A2
 -1 -3.8199999999999995E-007       0                       0                
  1  1304   # corGDoublePane.A3
 -1 5.8299999999999999E-008       0                       0                
  1  1304   # corGDoublePane.A4
 -1 -1.1500000000000000E-009       0                       0                
  1  1304   # corGDoublePane.A5
 -1 4.7400000000000004E-012       0                       0                
  1  1304   # corGDoublePane.A6
 -1 7.5370000000000004E-001       0                       0                
  1  1304   # corGDoublePane.g_dir0
 -1 8.3999999999999997E-001       0                       0                
  1  1304   # corGDoublePane.Ta_diff
 -1 9.0300000000000002E-001       0                       0                
  1  1304   # corGDoublePane.Tai_diff
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta1_diff
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_T1_diff
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_11_diff
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_1_diff
  0       0                       0                       0                
  6  1280   # corGDoublePane.XN2_diff
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta2_diff
  0       0                       0                       0                
  6  1280   # corGDoublePane.a1_diff
  0       0                       0                       0                
  6  1280   # corGDoublePane.Q21_diff
  0       0                       0                       0                
  6  1280   # corGDoublePane.Q22_diff
  0       0                       0                       0                
  6  1280   # corGDoublePane.Qsek2_diff
  0       0                       0                       0                
  6  1280   # corGDoublePane.CorG_diff
  0       0                       0                       0                
  6  1280   # corGDoublePane.CorG_gr
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta_dir[4]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Tai_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Tai_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Tai_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Tai_dir[4]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta1_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta1_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta1_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta1_dir[4]
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_T1_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_T1_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_T1_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_T1_dir[4]
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_11_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_11_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_11_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_11_dir[4]
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_1_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_1_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_1_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.rho_1_dir[4]
  0       0                       0                       0                
  6  1280   # corGDoublePane.XN2_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.XN2_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.XN2_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.XN2_dir[4]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta2_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta2_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta2_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Ta2_dir[4]
  0       0                       0                       0                
  6  1280   # corGDoublePane.a1_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.a1_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.a1_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.a1_dir[4]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Q21_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Q21_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Q21_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Q21_dir[4]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Q22_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Q22_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Q22_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Q22_dir[4]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Qsek2_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Qsek2_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Qsek2_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.Qsek2_dir[4]
  0       0                       0                       0                
  6  1280   # corGDoublePane.CorG_dir[1]
  0       0                       0                       0                
  6  1280   # corGDoublePane.CorG_dir[2]
  0       0                       0                       0                
  6  1280   # corGDoublePane.CorG_dir[3]
  0       0                       0                       0                
  6  1280   # corGDoublePane.CorG_dir[4]
  0       1                       1                       4                
  6   258   # building.energyDynamics
  0       1                       1                       4                
  6   258   # building.massDynamics
  0       1                       1                       4                
  6   258   # building.substanceDynamics
  0       1                       1                       4                
  6   258   # building.traceDynamics
 -1 1.0132500000000000E+005       0                 1.0000000000000000E+008
  1   280   # building.p_start
 -1 2.9314999999999998E+002 2.7314999999999998E+002 3.7314999999999998E+002
  1   280   # building.T_start
 -1       1                       0                       1                
  1   280   # building.X_start[1]
 -1       1                       1                 1.0000000000000000E+100
  1   280   # building.mSenFac
  0     336                       0                       0                
  6   256   # building.VAir
 -1 7.9478187684107144E+000       0                       0                
  1   280   # building.alphaRad
  0       4                       1                 1.0000000000000000E+100
  6   258   # building.nOrientations
  0       2                       0                       0                
  6   258   # building.nPorts
  0 5.5999999999999996E+000       0                       0                
  6   256   # building.AWin[1]
  0 5.5999999999999996E+000       0                       0                
  6   256   # building.AWin[2]
  0 1.6800000000000001E+001       0                       0                
  6   256   # building.AWin[3]
  0 5.5999999999999996E+000       0                       0                
  6   256   # building.AWin[4]
 -1 5.5999999999999996E+000       0                       0                
  1   280   # building.ATransparent[1]
 -1 5.5999999999999996E+000       0                       0                
  1   280   # building.ATransparent[2]
 -1 1.6800000000000001E+001       0                       0                
  1   280   # building.ATransparent[3]
 -1 5.5999999999999996E+000       0                       0                
  1   280   # building.ATransparent[4]
 -1 1.6999999999999997E+000       0                       0                
  1   280   # building.alphaWin
  0       0                       0                       0                
  6   256   # building.RWin
 -1 5.9999999999999998E-001       0                       0                
  1   280   # building.gWin
  0 2.9999999999999999E-002       0                       0                
  6   256   # building.ratioWinConRad
  0       0                       0                       0                
  6   257   # building.indoorPortWin
  0 6.6959999999999994E+001       0                       0                
  6   256   # building.AExt[1]
  0 4.2159999999999997E+001       0                       0                
  6   256   # building.AExt[2]
  0 6.6959999999999994E+001       0                       0                
  6   256   # building.AExt[3]
  0 4.2159999999999997E+001       0                       0                
  6   256   # building.AExt[4]
 -1 2.1699999999999999E+001       0                       0                
  1   280   # building.alphaExt
  0       1                       1                 1.0000000000000000E+100
  6   258   # building.nExt
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.RExt[1]
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.RExtRem
 -1 8.6200772710800007E+007 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # building.CExt[1]
  0       0                       0                       0                
  6   257   # building.indoorPortExtWalls
  0       0                 -100000                  100000                
  6   388   # building.ports[1].m_flow
  0  100000                       0                 1.0000000000000000E+008
  6   260   # building.ports[1].p
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # building.ports[1].h_outflow
  0       0                 -100000                  100000                
  6   388   # building.ports[2].m_flow
  0       1                       1                       4                
  6   258   # building.volAir.energyDynamics
  0       1                       1                       4                
  6   258   # building.volAir.massDynamics
  0       1                       1                       4                
  6   258   # building.volAir.substanceDynamics
  0       1                       1                       4                
  6   258   # building.volAir.traceDynamics
  0  100000                       0                 1.0000000000000000E+008
  6   256   # building.volAir.p_start
  0 2.8814999999999998E+002 2.7314999999999998E+002 3.7314999999999998E+002
  6   256   # building.volAir.T_start
  0       0                       0                       1                
  6   256   # building.volAir.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # building.volAir.mSenFac
  0       1                       0                       0                
  6   769   # building.volAir.initialize_p
  0       0                       0                       0                
  6   257   # building.volAir.prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # building.volAir.simplify_mWat_flow
  0       0                       0                       0                
  6   257   # building.volAir.use_C_flow
  0 6.7200000000000004E-001       0                 1.0000000000000000E+100
  6   256   # building.volAir.m_flow_nominal
  0       2                       0                       0                
  6   258   # building.volAir.nPorts
  0 6.7200000000000007E-005       0                 1.0000000000000000E+100
  6   256   # building.volAir.m_flow_small
  0       1                       0                       0                
  6   257   # building.volAir.allowFlowReversal
  0     336                       0                       0                
  6   256   # building.volAir.V
  0       0                       0                       0                
  6   388   # building.volAir.heatPort.Q_flow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # building.volAir.rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.building.volAir.X_default[1]
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # building.volAir.state_default.p
  0 2.9314999999999998E+002 2.7314999999999998E+002 3.7314999999999998E+002
  6  1280   # building.volAir.state_default.T
  0 1.2041149447828581E+000       0                 1.0000000000000000E+100
  6  1280   # building.volAir.rho_default
  0  100000                       0                 1.0000000000000000E+008
  6  1280   # building.volAir.state_start.p
  0 2.8814999999999998E+002 2.7314999999999998E+002 3.7314999999999998E+002
  6  1280   # building.volAir.state_start.T
  0       0                       0                       0                
  6  1281   # building.volAir.useSteadyStateTwoPort
  0 7.1720000000000005E+002       0                       0                
  6  1280   # building.ATot
  0 2.1823999999999998E+002       0                       0                
  6  1280   # building.ATotExt
  0 3.3600000000000001E+001       0                       0                
  6  1280   # building.ATotWin
  0 2.1823999999999998E+002       0                       0                
  6  1280   # building.AArray[1]
  0 3.3600000000000001E+001       0                       0                
  6  1280   # building.AArray[2]
  0 3.1848000000000002E+002       0                       0                
  6  1280   # building.AArray[3]
  0 7.3439999999999998E+001       0                       0                
  6  1280   # building.AArray[4]
  0 7.3439999999999998E+001       0                       0                
  6  1280   # building.AArray[5]
  0       5                       0                       0                
  6  1282   # building.dimension
  0 3.0429447852760733E-001       0                       0                
  6  1280   # building.splitFactor[1, 1]
  0 4.6848856664807585E-002       0                       0                
  6  1280   # building.splitFactor[2, 1]
  0 4.4406023424428331E-001       0                       0                
  6  1280   # building.splitFactor[3, 1]
  0 1.0239821528165086E-001       0                       0                
  6  1280   # building.splitFactor[4, 1]
  0 1.0239821528165086E-001       0                       0                
  6  1280   # building.splitFactor[5, 1]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[1, 1]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[1, 2]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[1, 3]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[1, 4]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[2, 1]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[2, 2]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[2, 3]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[2, 4]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[3, 1]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[3, 2]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[3, 3]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[3, 4]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[4, 1]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[4, 2]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[4, 3]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[4, 4]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[5, 1]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[5, 2]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[5, 3]
  0       0                       0                       0                
  6  1280   # building.splitFactorSolRad[5, 4]
  0       0                       0                       0                
  6  1280   # building.convExtWall.Q_flow
  0       0                       0                       0                
  6  1280   # building.convExtWall.dT
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6  1316   # building.convExtWall.solid.T
  0       1                       0                       0                
  6  1280   # building.alphaExtWallConst.k
  0       0                       0                       0                
  6  1280   # building.convWin.Q_flow
  0       0                       0                       0                
  6  1280   # building.convWin.dT
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6  1284   # building.convWin.solid.T
  0       1                       0                       0                
  6  1280   # building.alphaWinConst.k
  0       1                       0                       0                
  6  1280   # building.eRadSol[1].k
  0       0                       0                       0                
  6  1280   # building.eRadSol[1].y
  0       1                       0                       0                
  6  1280   # building.eRadSol[2].k
  0       0                       0                       0                
  6  1280   # building.eRadSol[2].y
  0       1                       0                       0                
  6  1280   # building.eRadSol[3].k
  0       0                       0                       0                
  6  1280   # building.eRadSol[3].y
  0       1                       0                       0                
  6  1280   # building.eRadSol[4].k
  0       0                       0                       0                
  6  1280   # building.eRadSol[4].y
  0       1                       0                       0                
  6  1280   # building.eConvSol[1].k
  0       1                       0                       0                
  6  1280   # building.eConvSol[2].k
  0       1                       0                       0                
  6  1280   # building.eConvSol[3].k
  0       1                       0                       0                
  6  1280   # building.eConvSol[4].k
  0       0                       0                       0                
  6  1280   # building.resExtWallWin.Q_flow
  0       0                       0                       0                
  6  1280   # building.resExtWallWin.dT
  0       0                       0                       0                
  6  1280   # building.resExtWallWin.G
  0       4                       0                       0                
  6  1282   # building.sumSolRad.nin
  0       0                       0                       0                
  6  1280   # building.sumSolRad.u[1]
  0       0                       0                       0                
  6  1280   # building.sumSolRad.u[2]
  0       0                       0                       0                
  6  1280   # building.sumSolRad.u[3]
  0       0                       0                       0                
  6  1280   # building.sumSolRad.u[4]
  0       0                       0                       0                
  6  1280   # building.sumSolRad.y
 -1       1                       0                       0                
  1  1304   # building.sumSolRad.k[1]
 -1       1                       0                       0                
  1  1304   # building.sumSolRad.k[2]
 -1       1                       0                       0                
  1  1304   # building.sumSolRad.k[3]
 -1       1                       0                       0                
  1  1304   # building.sumSolRad.k[4]
  0 3.1848000000000002E+002       0                       0                
  6   256   # building.AInt
 -1 6.3285229841748292E+000       0                       0                
  1   280   # building.alphaInt
  0       1                       1                 1.0000000000000000E+100
  6   258   # building.nInt
 -1 2.8734526051000001E-004 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # building.RInt[1]
 -1 4.3260210485100001E+007 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # building.CInt[1]
  0       0                       0                       0                
  6   257   # building.indoorPortIntWalls
  0       1                       1                 1.0000000000000000E+100
  6   258   # building.intWallRC.n
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.intWallRC.RInt[1]
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.intWallRC.CInt[1]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # building.intWallRC.T_start
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   292   # building.intWallRC.port_a.T
  0       0                       0                       0                
  6   388   # building.intWallRC.port_a.Q_flow
  0       0                       0                       0                
  6   256   # building.intWallRC.thermCapInt[1].C
 -1       0                       0                 1.0000000000000000E+100
  2   272   # building.intWallRC.thermCapInt[1].T
  0       0                       0                       0                
  3   256   # building.intWallRC.thermCapInt[1].der(T)
  0       0                       0                       0                
  6  1280   # building.intWallRC.thermResInt[1].dT
  0       0                       0                       0                
  6  1280   # building.intWallRC.thermResInt[1].R
  0       0                       0                       0                
  6  1280   # building.convIntWall.Q_flow
  0       0                       0                       0                
  6  1280   # building.convIntWall.dT
  0       1                       0                       0                
  6  1280   # building.alphaIntWall.k
  0       0                       0                       0                
  6  1280   # building.resExtWallIntWall.Q_flow
  0       0                       0                       0                
  6  1280   # building.resExtWallIntWall.dT
  0       0                       0                       0                
  6  1280   # building.resExtWallIntWall.G
  0       0                       0                       0                
  6  1280   # building.resIntWallWin.Q_flow
  0       0                       0                       0                
  6  1280   # building.resIntWallWin.dT
  0       0                       0                       0                
  6  1280   # building.resIntWallWin.G
  0 7.3439999999999998E+001       0                       0                
  6   256   # building.AFloor
 -1 1.7000000000000000E+000       0                       0                
  1   280   # building.alphaFloor
  0       1                       1                 1.0000000000000000E+100
  6   258   # building.nFloor
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.RFloor[1]
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.RFloorRem
 -1 2.9007444775800001E+007 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # building.CFloor[1]
  0       0                       0                       0                
  6   257   # building.indoorPortFloor
  0       1                       1                 1.0000000000000000E+100
  6   258   # building.floorRC.n
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.floorRC.RExt[1]
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.floorRC.RExtRem
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.floorRC.CExt[1]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # building.floorRC.T_start
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   292   # building.floorRC.port_a.T
  0       0                       0                       0                
  6   388   # building.floorRC.port_a.Q_flow
  0       0                       0                       0                
  6   256   # building.floorRC.thermCapExt[1].C
 -1       0                       0                 1.0000000000000000E+100
  2   272   # building.floorRC.thermCapExt[1].T
  0       0                       0                       0                
  3   256   # building.floorRC.thermCapExt[1].der(T)
  0       0                       0                       0                
  6   388   # building.floorRC.thermCapExt[1].port.Q_flow
  0       0                       0                       0                
  6  1280   # building.floorRC.thermResExt[1].dT
  0       0                       0                       0                
  6  1280   # building.floorRC.thermResExt[1].R
  0       0                       0                       0                
  6  1280   # building.floorRC.thermResExtRem.dT
  0       0                       0                       0                
  6  1280   # building.floorRC.thermResExtRem.R
  0       0                       0                       0                
  6  1280   # building.convFloor.Q_flow
  0       0                       0                       0                
  6  1280   # building.convFloor.dT
  0       1                       0                       0                
  6  1280   # building.alphaFloorConst.k
  0       0                       0                       0                
  6  1280   # building.resExtWallFloor.Q_flow
  0       0                       0                       0                
  6  1280   # building.resExtWallFloor.dT
  0       0                       0                       0                
  6  1280   # building.resExtWallFloor.G
  0       0                       0                       0                
  6  1280   # building.resIntWallFloor.Q_flow
  0       0                       0                       0                
  6  1280   # building.resIntWallFloor.dT
  0       0                       0                       0                
  6  1280   # building.resIntWallFloor.G
  0       0                       0                       0                
  6  1280   # building.resFloorWin.Q_flow
  0       0                       0                       0                
  6  1280   # building.resFloorWin.dT
  0       0                       0                       0                
  6  1280   # building.resFloorWin.G
  0 7.3439999999999998E+001       0                       0                
  6   256   # building.ARoof
 -1 1.7000000000000000E+000       0                       0                
  1   280   # building.alphaRoof
  0       1                       1                 1.0000000000000000E+100
  6   258   # building.nRoof
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.RRoof[1]
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.RRoofRem
 -1 2.9132420995000001E+007 9.9999999999999997E-061 1.0000000000000000E+100
  1   280   # building.CRoof[1]
  0       0                       0                       0                
  6   257   # building.indoorPortRoof
  0       1                       1                 1.0000000000000000E+100
  6   258   # building.roofRC.n
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.roofRC.RExt[1]
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.roofRC.RExtRem
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.roofRC.CExt[1]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # building.roofRC.T_start
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   292   # building.roofRC.port_b.T
  0       0                       0                       0                
  6   388   # building.roofRC.port_b.Q_flow
  0       0                       0                       0                
  6   256   # building.roofRC.thermCapExt[1].C
 -1       0                       0                 1.0000000000000000E+100
  2   272   # building.roofRC.thermCapExt[1].T
  0       0                       0                       0                
  3   256   # building.roofRC.thermCapExt[1].der(T)
  0       0                       0                       0                
  6   388   # building.roofRC.thermCapExt[1].port.Q_flow
  0       0                       0                       0                
  6  1280   # building.roofRC.thermResExt[1].dT
  0       0                       0                       0                
  6  1280   # building.roofRC.thermResExt[1].R
  0       0                       0                       0                
  6  1280   # building.roofRC.thermResExtRem.dT
  0       0                       0                       0                
  6  1280   # building.roofRC.thermResExtRem.R
  0       0                       0                       0                
  6  1280   # building.convRoof.Q_flow
  0       0                       0                       0                
  6  1280   # building.convRoof.dT
  0       1                       0                       0                
  6  1280   # building.alphaRoofConst.k
  0       0                       0                       0                
  6  1280   # building.resIntRoof.Q_flow
  0       0                       0                       0                
  6  1280   # building.resIntRoof.dT
  0       0                       0                       0                
  6  1280   # building.resIntRoof.G
  0       0                       0                       0                
  6  1280   # building.resRoofWin.Q_flow
  0       0                       0                       0                
  6  1280   # building.resRoofWin.dT
  0       0                       0                       0                
  6  1280   # building.resRoofWin.G
  0       0                       0                       0                
  6  1280   # building.resRoofFloor.Q_flow
  0       0                       0                       0                
  6  1280   # building.resRoofFloor.dT
  0       0                       0                       0                
  6  1280   # building.resRoofFloor.G
  0       0                       0                       0                
  6  1280   # building.resExtWallRoof.Q_flow
  0       0                       0                       0                
  6  1280   # building.resExtWallRoof.dT
  0       0                       0                       0                
  6  1280   # building.resExtWallRoof.G
 -1 6.9999999999999996E-001       0                       0                
  1   280   # eqAirTemp.aExt
 -1 8.9999999999999991E-001       0                       0                
  1   280   # eqAirTemp.eExt
  0       4                       0                       0                
  6   258   # eqAirTemp.n
 -1 3.0681818181818177E-001       0                       0                
  1   280   # eqAirTemp.wfWall[1]
 -1 1.9318181818181820E-001       0                       0                
  1   280   # eqAirTemp.wfWall[2]
 -1 3.0681818181818177E-001       0                       0                
  1   280   # eqAirTemp.wfWall[3]
 -1 1.9318181818181820E-001       0                       0                
  1   280   # eqAirTemp.wfWall[4]
 -1 1.6666666666666669E-001       0                       0                
  1   280   # eqAirTemp.wfWin[1]
 -1 1.6666666666666669E-001       0                       0                
  1   280   # eqAirTemp.wfWin[2]
 -1 5.0000000000000011E-001       0                       0                
  1   280   # eqAirTemp.wfWin[3]
 -1 1.6666666666666669E-001       0                       0                
  1   280   # eqAirTemp.wfWin[4]
 -1       0                       0                       0                
  1   280   # eqAirTemp.wfGro
 -1 2.8614999999999998E+002       0                 1.0000000000000000E+100
  1   280   # eqAirTemp.TGro
 -1       5                       0                       0                
  1   280   # eqAirTemp.alphaWallOut
 -1       5                       0                       0                
  1   280   # eqAirTemp.alphaRadWall
  0       1                       0                       0                
  6   257   # eqAirTemp.withLongwave
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTemp.TEqWall[1]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTemp.TEqWall[2]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTemp.TEqWall[3]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTemp.TEqWall[4]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTemp.TEqWin[1]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTemp.TEqWin[2]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTemp.TEqWin[3]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTemp.TEqWin[4]
  0       0                       0                       0                
  6   256   # eqAirTemp.delTEqLW
  0       0                       0                       0                
  6   256   # eqAirTemp.delTEqSW[1]
  0       0                       0                       0                
  6   256   # eqAirTemp.delTEqSW[2]
  0       0                       0                       0                
  6   256   # eqAirTemp.delTEqSW[3]
  0       0                       0                       0                
  6   256   # eqAirTemp.delTEqSW[4]
  0       0                       0                       0                
  6   256   # eqAirTemp.HSol[1]
  0       0                       0                       0                
  6   256   # eqAirTemp.HSol[2]
  0       0                       0                       0                
  6   256   # eqAirTemp.HSol[3]
  0       0                       0                       0                
  6   256   # eqAirTemp.HSol[4]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTemp.TEqAir
 -1       0                       0                       0                
  1   280   # eqAirTemp.aWin
 -1 1.0714285714285714E-001       0                       0                
  1   280   # eqAirTemp.eWin
 -1      20                       0                       0                
  1   280   # eqAirTemp.alphaWinOut
 -1       5                       0                       0                
  1   280   # eqAirTemp.alphaRadWin
  0       0                       0                       0                
  6   256   # eqAirTemp.delTEqLWWin
  0       0                       0                       0                
  6   256   # eqAirTemp.delTEqSWWin[1]
  0       0                       0                       0                
  6   256   # eqAirTemp.delTEqSWWin[2]
  0       0                       0                       0                
  6   256   # eqAirTemp.delTEqSWWin[3]
  0       0                       0                       0                
  6   256   # eqAirTemp.delTEqSWWin[4]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTemp.TEqAirWin
 -1       1                       0                       0                
  1   280   # solRad[1].k1
 -1       1                       0                       0                
  1   280   # solRad[1].k2
 -1       1                       0                       0                
  1   280   # solRad[2].k1
 -1       1                       0                       0                
  1   280   # solRad[2].k2
 -1       1                       0                       0                
  1   280   # solRad[3].k1
 -1       1                       0                       0                
  1   280   # solRad[3].k2
 -1       1                       0                       0                
  1   280   # solRad[4].k1
 -1       1                       0                       0                
  1   280   # solRad[4].k2
  0       0                       0                       0                
  6   388   # prescribedTemperature1.port.Q_flow
  0       0                       0                       0                
  6   388   # prescribedTemperature2.port.Q_flow
  0       0                       0                       0                
  6   256   # thermalConductorWin.dT
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   292   # thermalConductorWin.solid.T
  0       0                       0                       0                
  6   256   # thermalConductorWall.dT
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   260   # thermalConductorWall.solid.T
 -1       0                       0                       0                
  1   280   # const2[1].k
 -1       0                       0                       0                
  1   280   # const2[2].k
 -1       0                       0                       0                
  1   280   # const2[3].k
 -1       0                       0                       0                
  1   280   # const2[4].k
 -1 2.1823999999999996E+003       0                       0                
  1   280   # alphaWall.k
 -1 8.3999999999999989E+002       0                       0                
  1   280   # alphaWin.k
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # sourcesRad.T_ref
 -1       0                       0                       0                
  1   280   # sourcesRad.alpha
  0       0                       0                       0                
  6   388   # sourcesRad.port.Q_flow
 -1 2.9314999999999998E+002       0                 1.0000000000000000E+100
  1   280   # sourcesConv.T_ref
 -1       0                       0                       0                
  1   280   # sourcesConv.alpha
  0       0                       0                       0                
  6   388   # sourcesConv.port.Q_flow
  0       0                       0                       0                
  6   388   # prescribedTemperatureFloor.port.Q_flow
 -1 2.8614999999999998E+002       0                 1.0000000000000000E+100
  1   280   # TSoil.k
 -1 6.9999999999999996E-001       0                       0                
  1   280   # eqAirTempVDI.aExt
 -1 9.0000000000000002E-001       0                       0                
  1   280   # eqAirTempVDI.eExt
  0       1                       0                       0                
  6   258   # eqAirTempVDI.n
 -1       1                       0                       0                
  1   280   # eqAirTempVDI.wfWall[1]
 -1       0                       0                       0                
  1   280   # eqAirTempVDI.wfWin[1]
 -1       0                       0                       0                
  1   280   # eqAirTempVDI.wfGro
 -1 2.8514999999999998E+002       0                 1.0000000000000000E+100
  1   280   # eqAirTempVDI.TGro
 -1       5                       0                       0                
  1   280   # eqAirTempVDI.alphaWallOut
 -1       5                       0                       0                
  1   280   # eqAirTempVDI.alphaRadWall
  0       1                       0                       0                
  6   257   # eqAirTempVDI.withLongwave
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTempVDI.TEqWall[1]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTempVDI.TEqWin[1]
  0       0                       0                       0                
  6   256   # eqAirTempVDI.delTEqLW
  0       0                       0                       0                
  6   256   # eqAirTempVDI.delTEqSW[1]
  0       0                       0                       0                
  6   256   # eqAirTempVDI.HSol[1]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # eqAirTempVDI.TEqAir
  0       0                       0                       0                
  6   388   # prescribedTemperatureRoof.port.Q_flow
  0       0                       0                       0                
  6   256   # thermalConductorRoof.dT
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   260   # thermalConductorRoof.solid.T
 -1 7.3439999999999998E+002       0                       0                
  1   280   # alphaRoof.k
 -1       0                       0                       0                
  1   280   # const3[1].k
  0       0                       0                       0                
  6   256   # solRadRoof[1].u1
  0       0                       0                       0                
  6   256   # solRadRoof[1].u2
 -1       1                       0                       0                
  1   280   # solRadRoof[1].k1
 -1       1                       0                       0                
  1   280   # solRadRoof[1].k2
 -1       0                       0                       0                
  1   280   # HDirTilRoof[1].til
 -1 8.7266462599715999E-001       0                       0                
  1   280   # HDirTilRoof[1].lat
 -1 3.1415926535897931E+000       0                       0                
  1   280   # HDirTilRoof[1].azi
  0       0                       0                       0                
  6   256   # HDirTilRoof[1].inc
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.lat
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.azi
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.til
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.decAng.decAng
  0 3.9794863130761032E-001       0                       0                
  6  1280   # HDirTilRoof[1].incAng.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # HDirTilRoof[1].incAng.decAng.k2
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.solHouAng.solHouAng
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.incAng.lat
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.incAng.azi
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.incAng.til
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.incAng.dec_c
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.incAng.dec_s
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.incAng.sol_c
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.incAng.sol_s
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.incAng.lat_c
  0       0                       0                       0                
  6  1280   # HDirTilRoof[1].incAng.incAng.lat_s
 -1       0                       0                       0                
  1   280   # HDifTilRoof[1].til
 -1 2.0000000000000001E-001       0                       1                
  1   280   # HDifTilRoof[1].rho
 -1 8.7266462599715999E-001       0                       0                
  1   280   # HDifTilRoof[1].lat
 -1 3.1415926535897931E+000       0                       0                
  1   280   # HDifTilRoof[1].azi
  0       0                       0                       0                
  6   257   # HDifTilRoof[1].outSkyCon
  0       0                       0                       0                
  6   257   # HDifTilRoof[1].outGroCon
  0       0                       0                       0                
  6   256   # HDifTilRoof[1].add.u1
  0       0                       0                       0                
  6   256   # HDifTilRoof[1].add.u2
 -1       1                       0                       0                
  1   280   # HDifTilRoof[1].add.k1
 -1       1                       0                       0                
  1   280   # HDifTilRoof[1].add.k2
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].HDifTil.rho
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].HDifTil.til
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].HDifTil.briCof1
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].HDifTil.briCof2
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].HDifTil.incAng
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].HDifTil.a
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].HDifTil.b
  0 8.7155742747658138E-002       0                       0                
  6  1280   # HDifTilRoof[1].HDifTil.bMin
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].skyCle.skyCle
  0 1.0408953107389971E+000       0                       0                
  6  1280   # HDifTilRoof[1].skyCle.k
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].skyCle.tmp1
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.skyBri
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.F11
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.F12
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.F13
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.F21
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.F22
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.F23
  0 1.0000000000000000E-002       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.d
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.a1
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.a2
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.a3
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.a4
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.a5
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.a6
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.a7
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.a8
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.b2
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.b3
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.b4
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.b5
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.b6
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].briCoe.b7
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].relAirMas.relAirMas
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].relAirMas.zenLim
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].relAirMas.zenDeg
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.lat
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.azi
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.til
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.decAng.decAng
  0 3.9794863130761032E-001       0                       0                
  6  1280   # HDifTilRoof[1].incAng.decAng.k1
  0 1.7202423838958484E-002       0                       0                
  6  1280   # HDifTilRoof[1].incAng.decAng.k2
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.solHouAng.solHouAng
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.incAng.lat
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.incAng.azi
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.incAng.til
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.incAng.dec_c
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.incAng.dec_s
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.incAng.sol_c
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.incAng.sol_s
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.incAng.lat_c
  0       0                       0                       0                
  6  1280   # HDifTilRoof[1].incAng.incAng.lat_s
 -1       0                       0                       0                
  1   280   # intSou.k
  0       1                       0                       0                
  6   258   # ventilationIn.nPorts
  0       1                       0                  100000                
  6   256   # ventilationIn.medium.d
  0       1                       0                       1                
  6   256   # ventilationIn.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # ventilationIn.medium.u
  0 2.8705080375666648E+002       0                 1.0000000000000000E+007
  6   256   # ventilationIn.medium.R
  0 2.8965115900000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # ventilationIn.medium.MM
  0       0                       0                       0                
  6   257   # ventilationIn.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # ventilationIn.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # ventilationIn.medium.T_degC
  0       0                       0                       0                
  6   256   # ventilationIn.medium.p_bar
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # ventilationIn.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # ventilationIn.flowDirection
  0       1                       0                       0                
  6   769   # ventilationIn.use_m_flow_in
  0       1                       0                       0                
  6   769   # ventilationIn.use_T_in
  0       0                       0                       0                
  6   769   # ventilationIn.use_X_in
  0       0                       0                       0                
  6   769   # ventilationIn.use_C_in
 -1       0                       0                       0                
  1   280   # ventilationIn.m_flow
 -1 2.9314999999999998E+002 2.7314999999999998E+002 3.7314999999999998E+002
  1   280   # ventilationIn.T
 -1       1                       0                       1                
  1   280   # ventilationIn.X[1]
  0       0                       0                       0                
  6  1280   # ventilationIn.X_in_internal[1]
  0       1                       0                       0                
  6   258   # ventilationOut.nPorts
  0       1                       0                  100000                
  6   256   # ventilationOut.medium.d
  0       1                       0                       1                
  6   256   # ventilationOut.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6   256   # ventilationOut.medium.u
  0 2.8705080375666648E+002       0                 1.0000000000000000E+007
  6   256   # ventilationOut.medium.R
  0 2.8965115900000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6   256   # ventilationOut.medium.MM
  0       0                       0                       0                
  6   257   # ventilationOut.medium.preferredMediumStates
  0       1                       0                       0                
  6   257   # ventilationOut.medium.standardOrderComponents
  0       0                       0                       0                
  6   256   # ventilationOut.medium.T_degC
  0       0                       0                       0                
  6   256   # ventilationOut.medium.p_bar
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # ventilationOut.ports[1].h_outflow
  0       3                       1                       3                
  6  1282   # ventilationOut.flowDirection
  0       1                       0                       0                
  6   769   # ventilationOut.use_m_flow_in
  0       0                       0                       0                
  6   769   # ventilationOut.use_T_in
  0       0                       0                       0                
  6   769   # ventilationOut.use_X_in
  0       0                       0                       0                
  6   769   # ventilationOut.use_C_in
 -1       0                       0                       0                
  1   280   # ventilationOut.m_flow
 -1 2.9314999999999998E+002 2.7314999999999998E+002 3.7314999999999998E+002
  1   280   # ventilationOut.T
 -1       1                       0                       1                
  1   280   # ventilationOut.X[1]
  0       0                       0                       0                
  6  1280   # ventilationOut.X_in_internal[1]
  0 1.1200000000000000E-001       0                       0                
  6   256   # gain.k
 -1      -1                       0                       0                
  1   280   # gain1.k
 -1 5.0000000000000000E-001       0                       0                
  1   280   # airchange.k
  0       0                       0                       0                
  6   321   # cutOverheating.u2
 -1 3.7314999999999998E+002       0                       0                
  1   280   # lessThreshold.threshold
  0       1                       1                       4                
  6  1282   # pipe1.vol[1].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pipe1.vol[1].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pipe1.vol[1].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pipe1.vol[1].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe1.vol[1].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe1.vol[1].dynBal.T_start
  0       0                       0                       1                
  6  1280   # pipe1.vol[1].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pipe1.vol[1].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pipe1.vol[1].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pipe1.vol[1].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pipe1.vol[1].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pipe1.vol[1].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pipe1.vol[1].dynBal.use_C_flow
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[1].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pipe1.vol[1].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[1].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pipe1.vol[1].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pipe1.vol[1].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[1].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pipe1.vol[1].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pipe1.vol[1].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pipe1.vol[1].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pipe1.vol[1].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pipe1.vol[1].dynBal.U
  0       0                       0                       0                
  3  1280   # pipe1.vol[1].dynBal.der(U)
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[1].dynBal.m
  0       0                       0                       0                
  6  1280   # pipe1.vol[1].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pipe1.vol[1].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # pipe1.vol[1].dynBal.Hb_flow
  0 1.5707963267948965E-004       0                       0                
  6  1280   # pipe1.vol[1].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pipe1.vol[1].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe1.vol[1].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe1.vol[1].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pipe1.vol[1].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[1].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pipe1.vol[1].dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe1.vol.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe1.vol[1].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe1.vol[1].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[1].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pipe1.vol[1].dynBal.hStart
  0       0                       0                       0                
  6  1280   # pipe1.vol[1].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # pipe1.vol[2].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pipe1.vol[2].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pipe1.vol[2].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pipe1.vol[2].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe1.vol[2].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe1.vol[2].dynBal.T_start
  0       0                       0                       1                
  6  1280   # pipe1.vol[2].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pipe1.vol[2].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pipe1.vol[2].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pipe1.vol[2].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pipe1.vol[2].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pipe1.vol[2].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pipe1.vol[2].dynBal.use_C_flow
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[2].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pipe1.vol[2].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[2].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pipe1.vol[2].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pipe1.vol[2].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[2].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pipe1.vol[2].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pipe1.vol[2].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pipe1.vol[2].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pipe1.vol[2].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pipe1.vol[2].dynBal.U
  0       0                       0                       0                
  3  1280   # pipe1.vol[2].dynBal.der(U)
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[2].dynBal.m
  0       0                       0                       0                
  6  1280   # pipe1.vol[2].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pipe1.vol[2].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # pipe1.vol[2].dynBal.Hb_flow
  0 1.5707963267948965E-004       0                       0                
  6  1280   # pipe1.vol[2].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pipe1.vol[2].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe1.vol[2].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe1.vol[2].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pipe1.vol[2].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[2].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pipe1.vol[2].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe1.vol[2].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe1.vol[2].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe1.vol[2].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pipe1.vol[2].dynBal.hStart
  0       0                       0                       0                
  6  1280   # pipe1.vol[2].dynBal.mWat_flow_internal
  0       2                       1                       4                
  6  1282   # radiator.vol[1].dynBal.energyDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[1].dynBal.massDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[1].dynBal.substanceDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[1].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[1].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[1].dynBal.T_start
  0       1                       0                       1                
  6  1280   # radiator.vol[1].dynBal.X_start[1]
  0 1.0000024006538475E+000       1                 1.0000000000000000E+100
  6  1280   # radiator.vol[1].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # radiator.vol[1].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # radiator.vol[1].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # radiator.vol[1].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # radiator.vol[1].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # radiator.vol[1].dynBal.use_C_flow
  0 9.9558600000000008E-001       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[1].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # radiator.vol[1].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[1].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # radiator.vol[1].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # radiator.vol[1].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[1].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # radiator.vol[1].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # radiator.vol[1].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # radiator.vol[1].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # radiator.vol[1].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # radiator.vol[1].dynBal.U
  0       0                       0                       0                
  3  1280   # radiator.vol[1].dynBal.der(U)
  0 9.9558600000000008E-001       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[1].dynBal.m
  0       0                       0                       0                
  6  1280   # radiator.vol[1].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # radiator.vol[1].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # radiator.vol[1].dynBal.Hb_flow
  0 1.0000000000000000E-003       0                       0                
  6  1280   # radiator.vol[1].dynBal.fluidVolume
  0 1.0000000000126241E-002       0                       0                
  6  1280   # radiator.vol[1].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # radiator.vol[1].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # radiator.vol[1].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # radiator.vol[1].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[1].dynBal.rho_start
  0       1                       0                       0                
  6  1281   # radiator.vol[1].dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.radiator.vol.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[1].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[1].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[1].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # radiator.vol[1].dynBal.hStart
  0       0                       0                       0                
  6  1280   # radiator.vol[1].dynBal.mWat_flow_internal
  0       2                       1                       4                
  6  1282   # radiator.vol[2].dynBal.energyDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[2].dynBal.massDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[2].dynBal.substanceDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[2].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[2].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[2].dynBal.T_start
  0       1                       0                       1                
  6  1280   # radiator.vol[2].dynBal.X_start[1]
  0 1.0000024006538475E+000       1                 1.0000000000000000E+100
  6  1280   # radiator.vol[2].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # radiator.vol[2].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # radiator.vol[2].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # radiator.vol[2].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # radiator.vol[2].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # radiator.vol[2].dynBal.use_C_flow
  0 9.9558600000000008E-001       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[2].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # radiator.vol[2].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[2].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # radiator.vol[2].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # radiator.vol[2].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[2].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # radiator.vol[2].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # radiator.vol[2].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # radiator.vol[2].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # radiator.vol[2].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # radiator.vol[2].dynBal.U
  0       0                       0                       0                
  3  1280   # radiator.vol[2].dynBal.der(U)
  0 9.9558600000000008E-001       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[2].dynBal.m
  0       0                       0                       0                
  6  1280   # radiator.vol[2].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # radiator.vol[2].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # radiator.vol[2].dynBal.Hb_flow
  0 1.0000000000000000E-003       0                       0                
  6  1280   # radiator.vol[2].dynBal.fluidVolume
  0 1.0000000000126241E-002       0                       0                
  6  1280   # radiator.vol[2].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # radiator.vol[2].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # radiator.vol[2].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # radiator.vol[2].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[2].dynBal.rho_start
  0       1                       0                       0                
  6  1281   # radiator.vol[2].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[2].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[2].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[2].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # radiator.vol[2].dynBal.hStart
  0       0                       0                       0                
  6  1280   # radiator.vol[2].dynBal.mWat_flow_internal
  0       2                       1                       4                
  6  1282   # radiator.vol[3].dynBal.energyDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[3].dynBal.massDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[3].dynBal.substanceDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[3].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[3].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[3].dynBal.T_start
  0       1                       0                       1                
  6  1280   # radiator.vol[3].dynBal.X_start[1]
  0 1.0000024006538475E+000       1                 1.0000000000000000E+100
  6  1280   # radiator.vol[3].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # radiator.vol[3].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # radiator.vol[3].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # radiator.vol[3].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # radiator.vol[3].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # radiator.vol[3].dynBal.use_C_flow
  0 9.9558600000000008E-001       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[3].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # radiator.vol[3].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[3].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # radiator.vol[3].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # radiator.vol[3].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[3].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # radiator.vol[3].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # radiator.vol[3].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # radiator.vol[3].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # radiator.vol[3].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # radiator.vol[3].dynBal.U
  0       0                       0                       0                
  3  1280   # radiator.vol[3].dynBal.der(U)
  0 9.9558600000000008E-001       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[3].dynBal.m
  0       0                       0                       0                
  6  1280   # radiator.vol[3].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # radiator.vol[3].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # radiator.vol[3].dynBal.Hb_flow
  0 1.0000000000000000E-003       0                       0                
  6  1280   # radiator.vol[3].dynBal.fluidVolume
  0 1.0000000000126241E-002       0                       0                
  6  1280   # radiator.vol[3].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # radiator.vol[3].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # radiator.vol[3].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # radiator.vol[3].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[3].dynBal.rho_start
  0       1                       0                       0                
  6  1281   # radiator.vol[3].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[3].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[3].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[3].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # radiator.vol[3].dynBal.hStart
  0       0                       0                       0                
  6  1280   # radiator.vol[3].dynBal.mWat_flow_internal
  0       2                       1                       4                
  6  1282   # radiator.vol[4].dynBal.energyDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[4].dynBal.massDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[4].dynBal.substanceDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[4].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[4].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[4].dynBal.T_start
  0       1                       0                       1                
  6  1280   # radiator.vol[4].dynBal.X_start[1]
  0 1.0000024006538475E+000       1                 1.0000000000000000E+100
  6  1280   # radiator.vol[4].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # radiator.vol[4].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # radiator.vol[4].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # radiator.vol[4].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # radiator.vol[4].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # radiator.vol[4].dynBal.use_C_flow
  0 9.9558600000000008E-001       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[4].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # radiator.vol[4].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[4].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # radiator.vol[4].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # radiator.vol[4].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[4].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # radiator.vol[4].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # radiator.vol[4].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # radiator.vol[4].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # radiator.vol[4].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # radiator.vol[4].dynBal.U
  0       0                       0                       0                
  3  1280   # radiator.vol[4].dynBal.der(U)
  0 9.9558600000000008E-001       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[4].dynBal.m
  0       0                       0                       0                
  6  1280   # radiator.vol[4].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # radiator.vol[4].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # radiator.vol[4].dynBal.Hb_flow
  0 1.0000000000000000E-003       0                       0                
  6  1280   # radiator.vol[4].dynBal.fluidVolume
  0 1.0000000000126241E-002       0                       0                
  6  1280   # radiator.vol[4].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # radiator.vol[4].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # radiator.vol[4].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # radiator.vol[4].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[4].dynBal.rho_start
  0       1                       0                       0                
  6  1281   # radiator.vol[4].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[4].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[4].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[4].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # radiator.vol[4].dynBal.hStart
  0       0                       0                       0                
  6  1280   # radiator.vol[4].dynBal.mWat_flow_internal
  0       2                       1                       4                
  6  1282   # radiator.vol[5].dynBal.energyDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[5].dynBal.massDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[5].dynBal.substanceDynamics
  0       2                       1                       4                
  6  1282   # radiator.vol[5].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[5].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[5].dynBal.T_start
  0       1                       0                       1                
  6  1280   # radiator.vol[5].dynBal.X_start[1]
  0 1.0000024006538475E+000       1                 1.0000000000000000E+100
  6  1280   # radiator.vol[5].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # radiator.vol[5].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # radiator.vol[5].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # radiator.vol[5].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # radiator.vol[5].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # radiator.vol[5].dynBal.use_C_flow
  0 9.9558600000000008E-001       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[5].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # radiator.vol[5].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[5].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # radiator.vol[5].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # radiator.vol[5].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[5].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # radiator.vol[5].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # radiator.vol[5].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # radiator.vol[5].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # radiator.vol[5].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # radiator.vol[5].dynBal.U
  0       0                       0                       0                
  3  1280   # radiator.vol[5].dynBal.der(U)
  0 9.9558600000000008E-001       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[5].dynBal.m
  0       0                       0                       0                
  6  1280   # radiator.vol[5].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # radiator.vol[5].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # radiator.vol[5].dynBal.Hb_flow
  0 1.0000000000000000E-003       0                       0                
  6  1280   # radiator.vol[5].dynBal.fluidVolume
  0 1.0000000000126241E-002       0                       0                
  6  1280   # radiator.vol[5].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # radiator.vol[5].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # radiator.vol[5].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # radiator.vol[5].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[5].dynBal.rho_start
  0       1                       0                       0                
  6  1281   # radiator.vol[5].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # radiator.vol[5].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # radiator.vol[5].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # radiator.vol[5].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # radiator.vol[5].dynBal.hStart
  0       0                       0                       0                
  6  1280   # radiator.vol[5].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # pipe2.vol[1].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pipe2.vol[1].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pipe2.vol[1].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pipe2.vol[1].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe2.vol[1].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe2.vol[1].dynBal.T_start
  0       0                       0                       1                
  6  1280   # pipe2.vol[1].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pipe2.vol[1].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pipe2.vol[1].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pipe2.vol[1].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pipe2.vol[1].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pipe2.vol[1].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pipe2.vol[1].dynBal.use_C_flow
  0 3.3333333333333326E-001       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[1].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pipe2.vol[1].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[1].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pipe2.vol[1].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pipe2.vol[1].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[1].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pipe2.vol[1].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pipe2.vol[1].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pipe2.vol[1].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pipe2.vol[1].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pipe2.vol[1].dynBal.U
  0       0                       0                       0                
  3  1280   # pipe2.vol[1].dynBal.der(U)
  0 3.3333333333333326E-001       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[1].dynBal.m
  0       0                       0                       0                
  6  1280   # pipe2.vol[1].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pipe2.vol[1].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # pipe2.vol[1].dynBal.Hb_flow
  0 3.3481118992566516E-004       0                       0                
  6  1280   # pipe2.vol[1].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pipe2.vol[1].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe2.vol[1].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe2.vol[1].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pipe2.vol[1].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[1].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pipe2.vol[1].dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe2.vol.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe2.vol[1].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe2.vol[1].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[1].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pipe2.vol[1].dynBal.hStart
  0       0                       0                       0                
  6  1280   # pipe2.vol[1].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # pipe2.vol[2].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pipe2.vol[2].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pipe2.vol[2].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pipe2.vol[2].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe2.vol[2].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe2.vol[2].dynBal.T_start
  0       0                       0                       1                
  6  1280   # pipe2.vol[2].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pipe2.vol[2].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pipe2.vol[2].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pipe2.vol[2].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pipe2.vol[2].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pipe2.vol[2].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pipe2.vol[2].dynBal.use_C_flow
  0 3.3333333333333326E-001       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[2].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pipe2.vol[2].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[2].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pipe2.vol[2].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pipe2.vol[2].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[2].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pipe2.vol[2].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pipe2.vol[2].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pipe2.vol[2].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pipe2.vol[2].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pipe2.vol[2].dynBal.U
  0       0                       0                       0                
  3  1280   # pipe2.vol[2].dynBal.der(U)
  0 3.3333333333333326E-001       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[2].dynBal.m
  0       0                       0                       0                
  6  1280   # pipe2.vol[2].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pipe2.vol[2].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # pipe2.vol[2].dynBal.Hb_flow
  0 3.3481118992566516E-004       0                       0                
  6  1280   # pipe2.vol[2].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pipe2.vol[2].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe2.vol[2].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe2.vol[2].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pipe2.vol[2].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[2].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pipe2.vol[2].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe2.vol[2].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe2.vol[2].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe2.vol[2].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pipe2.vol[2].dynBal.hStart
  0       0                       0                       0                
  6  1280   # pipe2.vol[2].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # pipe3.vol[1].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pipe3.vol[1].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pipe3.vol[1].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pipe3.vol[1].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe3.vol[1].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe3.vol[1].dynBal.T_start
  0       0                       0                       1                
  6  1280   # pipe3.vol[1].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pipe3.vol[1].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pipe3.vol[1].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pipe3.vol[1].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pipe3.vol[1].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pipe3.vol[1].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pipe3.vol[1].dynBal.use_C_flow
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[1].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pipe3.vol[1].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[1].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pipe3.vol[1].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pipe3.vol[1].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[1].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pipe3.vol[1].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pipe3.vol[1].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pipe3.vol[1].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pipe3.vol[1].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pipe3.vol[1].dynBal.U
  0       0                       0                       0                
  3  1280   # pipe3.vol[1].dynBal.der(U)
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[1].dynBal.m
  0       0                       0                       0                
  6  1280   # pipe3.vol[1].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pipe3.vol[1].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # pipe3.vol[1].dynBal.Hb_flow
  0 1.5707963267948965E-004       0                       0                
  6  1280   # pipe3.vol[1].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pipe3.vol[1].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe3.vol[1].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe3.vol[1].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pipe3.vol[1].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[1].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pipe3.vol[1].dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe3.vol.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe3.vol[1].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe3.vol[1].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[1].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pipe3.vol[1].dynBal.hStart
  0       0                       0                       0                
  6  1280   # pipe3.vol[1].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # pipe3.vol[2].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pipe3.vol[2].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pipe3.vol[2].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pipe3.vol[2].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe3.vol[2].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe3.vol[2].dynBal.T_start
  0       0                       0                       1                
  6  1280   # pipe3.vol[2].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pipe3.vol[2].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pipe3.vol[2].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pipe3.vol[2].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pipe3.vol[2].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pipe3.vol[2].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pipe3.vol[2].dynBal.use_C_flow
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[2].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pipe3.vol[2].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[2].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pipe3.vol[2].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pipe3.vol[2].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[2].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pipe3.vol[2].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pipe3.vol[2].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pipe3.vol[2].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pipe3.vol[2].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pipe3.vol[2].dynBal.U
  0       0                       0                       0                
  3  1280   # pipe3.vol[2].dynBal.der(U)
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[2].dynBal.m
  0       0                       0                       0                
  6  1280   # pipe3.vol[2].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pipe3.vol[2].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # pipe3.vol[2].dynBal.Hb_flow
  0 1.5707963267948965E-004       0                       0                
  6  1280   # pipe3.vol[2].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pipe3.vol[2].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe3.vol[2].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe3.vol[2].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pipe3.vol[2].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[2].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pipe3.vol[2].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe3.vol[2].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe3.vol[2].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe3.vol[2].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pipe3.vol[2].dynBal.hStart
  0       0                       0                       0                
  6  1280   # pipe3.vol[2].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # pump1.vol.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pump1.vol.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pump1.vol.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pump1.vol.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pump1.vol.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pump1.vol.dynBal.T_start
  0       0                       0                       1                
  6  1280   # pump1.vol.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pump1.vol.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pump1.vol.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pump1.vol.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pump1.vol.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pump1.vol.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pump1.vol.dynBal.use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # pump1.vol.dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pump1.vol.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump1.vol.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pump1.vol.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pump1.vol.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pump1.vol.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pump1.vol.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pump1.vol.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pump1.vol.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pump1.vol.dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pump1.vol.dynBal.U
  0       0                       0                       0                
  3  1280   # pump1.vol.dynBal.der(U)
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6  1280   # pump1.vol.dynBal.m
  0       0                       0                       0                
  6  1280   # pump1.vol.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pump1.vol.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # pump1.vol.dynBal.Hb_flow
  0 1.0044335697769957E-004       0                       0                
  6  1280   # pump1.vol.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pump1.vol.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pump1.vol.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pump1.vol.dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pump1.vol.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump1.vol.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pump1.vol.dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.pump1.vol.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pump1.vol.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pump1.vol.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump1.vol.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pump1.vol.dynBal.hStart
  0       0                       0                       0                
  6  1280   # pump1.vol.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6   258   # storage.vol[1].energyDynamics
  0       1                       1                       4                
  6   258   # storage.vol[1].massDynamics
  0       1                       1                       4                
  6   258   # storage.vol[1].substanceDynamics
  0       1                       1                       4                
  6   258   # storage.vol[1].traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # storage.vol[1].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # storage.vol[1].T_start
 -1       1                       0                       1                
  1   280   # storage.vol[1].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # storage.vol[1].mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[1].initialize_p
  0       0                       0                       0                
  6   257   # storage.vol[1].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # storage.vol[1].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # storage.vol[1].use_C_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # storage.vol[1].m_flow_nominal
  0       3                       0                       0                
  6   258   # storage.vol[1].nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.vol[1].m_flow_small
  0       1                       0                       0                
  6   257   # storage.vol[1].allowFlowReversal
  0       0                       0                       0                
  6   256   # storage.vol[1].V
  0       0                 -100000                  100000                
  6   388   # storage.vol[1].ports[1].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.vol[1].ports[2].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.vol[1].ports[3].m_flow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[1].rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.storage.vol.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[1].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[1].state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[1].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[1].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[1].state_start.T
  0       0                       0                       0                
  6  1281   # storage.vol[1].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # storage.vol[2].energyDynamics
  0       1                       1                       4                
  6   258   # storage.vol[2].massDynamics
  0       1                       1                       4                
  6   258   # storage.vol[2].substanceDynamics
  0       1                       1                       4                
  6   258   # storage.vol[2].traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # storage.vol[2].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # storage.vol[2].T_start
 -1       1                       0                       1                
  1   280   # storage.vol[2].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # storage.vol[2].mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[2].initialize_p
  0       0                       0                       0                
  6   257   # storage.vol[2].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # storage.vol[2].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # storage.vol[2].use_C_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # storage.vol[2].m_flow_nominal
  0       3                       0                       0                
  6   258   # storage.vol[2].nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.vol[2].m_flow_small
  0       1                       0                       0                
  6   257   # storage.vol[2].allowFlowReversal
  0       0                       0                       0                
  6   256   # storage.vol[2].V
  0       0                 -100000                  100000                
  6   388   # storage.vol[2].ports[1].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.vol[2].ports[2].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.vol[2].ports[3].m_flow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[2].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[2].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[2].state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[2].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[2].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[2].state_start.T
  0       0                       0                       0                
  6  1281   # storage.vol[2].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # storage.vol[3].energyDynamics
  0       1                       1                       4                
  6   258   # storage.vol[3].massDynamics
  0       1                       1                       4                
  6   258   # storage.vol[3].substanceDynamics
  0       1                       1                       4                
  6   258   # storage.vol[3].traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # storage.vol[3].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # storage.vol[3].T_start
 -1       1                       0                       1                
  1   280   # storage.vol[3].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # storage.vol[3].mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[3].initialize_p
  0       0                       0                       0                
  6   257   # storage.vol[3].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # storage.vol[3].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # storage.vol[3].use_C_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # storage.vol[3].m_flow_nominal
  0       3                       0                       0                
  6   258   # storage.vol[3].nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.vol[3].m_flow_small
  0       1                       0                       0                
  6   257   # storage.vol[3].allowFlowReversal
  0       0                       0                       0                
  6   256   # storage.vol[3].V
  0       0                 -100000                  100000                
  6   388   # storage.vol[3].ports[1].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.vol[3].ports[2].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.vol[3].ports[3].m_flow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[3].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[3].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[3].state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[3].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[3].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[3].state_start.T
  0       0                       0                       0                
  6  1281   # storage.vol[3].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # storage.vol[4].energyDynamics
  0       1                       1                       4                
  6   258   # storage.vol[4].massDynamics
  0       1                       1                       4                
  6   258   # storage.vol[4].substanceDynamics
  0       1                       1                       4                
  6   258   # storage.vol[4].traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # storage.vol[4].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # storage.vol[4].T_start
 -1       1                       0                       1                
  1   280   # storage.vol[4].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # storage.vol[4].mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[4].initialize_p
  0       0                       0                       0                
  6   257   # storage.vol[4].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # storage.vol[4].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # storage.vol[4].use_C_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # storage.vol[4].m_flow_nominal
  0       3                       0                       0                
  6   258   # storage.vol[4].nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.vol[4].m_flow_small
  0       1                       0                       0                
  6   257   # storage.vol[4].allowFlowReversal
  0       0                       0                       0                
  6   256   # storage.vol[4].V
  0       0                 -100000                  100000                
  6   388   # storage.vol[4].ports[1].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.vol[4].ports[2].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.vol[4].ports[3].m_flow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[4].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[4].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[4].state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[4].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[4].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[4].state_start.T
  0       0                       0                       0                
  6  1281   # storage.vol[4].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # storage.vol[5].energyDynamics
  0       1                       1                       4                
  6   258   # storage.vol[5].massDynamics
  0       1                       1                       4                
  6   258   # storage.vol[5].substanceDynamics
  0       1                       1                       4                
  6   258   # storage.vol[5].traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # storage.vol[5].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # storage.vol[5].T_start
 -1       1                       0                       1                
  1   280   # storage.vol[5].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # storage.vol[5].mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[5].initialize_p
  0       0                       0                       0                
  6   257   # storage.vol[5].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # storage.vol[5].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # storage.vol[5].use_C_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # storage.vol[5].m_flow_nominal
  0       3                       0                       0                
  6   258   # storage.vol[5].nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.vol[5].m_flow_small
  0       1                       0                       0                
  6   257   # storage.vol[5].allowFlowReversal
  0       0                       0                       0                
  6   256   # storage.vol[5].V
  0       0                 -100000                  100000                
  6   388   # storage.vol[5].ports[1].m_flow
  0       0                       0                       0                
  6   388   # storage.vol[5].heatPort.Q_flow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[5].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[5].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[5].state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[5].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[5].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[5].state_start.T
  0       0                       0                       0                
  6  1281   # storage.vol[5].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # storage.vol[6].energyDynamics
  0       1                       1                       4                
  6   258   # storage.vol[6].massDynamics
  0       1                       1                       4                
  6   258   # storage.vol[6].substanceDynamics
  0       1                       1                       4                
  6   258   # storage.vol[6].traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # storage.vol[6].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # storage.vol[6].T_start
 -1       1                       0                       1                
  1   280   # storage.vol[6].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # storage.vol[6].mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[6].initialize_p
  0       0                       0                       0                
  6   257   # storage.vol[6].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # storage.vol[6].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # storage.vol[6].use_C_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # storage.vol[6].m_flow_nominal
  0       3                       0                       0                
  6   258   # storage.vol[6].nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.vol[6].m_flow_small
  0       1                       0                       0                
  6   257   # storage.vol[6].allowFlowReversal
  0       0                       0                       0                
  6   256   # storage.vol[6].V
  0       0                 -100000                  100000                
  6   388   # storage.vol[6].ports[3].m_flow
  0       0                       0                       0                
  6   388   # storage.vol[6].heatPort.Q_flow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[6].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[6].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[6].state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[6].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[6].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[6].state_start.T
  0       0                       0                       0                
  6  1281   # storage.vol[6].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # storage.vol[7].energyDynamics
  0       1                       1                       4                
  6   258   # storage.vol[7].massDynamics
  0       1                       1                       4                
  6   258   # storage.vol[7].substanceDynamics
  0       1                       1                       4                
  6   258   # storage.vol[7].traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # storage.vol[7].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # storage.vol[7].T_start
 -1       1                       0                       1                
  1   280   # storage.vol[7].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # storage.vol[7].mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[7].initialize_p
  0       0                       0                       0                
  6   257   # storage.vol[7].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # storage.vol[7].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # storage.vol[7].use_C_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # storage.vol[7].m_flow_nominal
  0       3                       0                       0                
  6   258   # storage.vol[7].nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.vol[7].m_flow_small
  0       1                       0                       0                
  6   257   # storage.vol[7].allowFlowReversal
  0       0                       0                       0                
  6   256   # storage.vol[7].V
  0       0                 -100000                  100000                
  6   388   # storage.vol[7].ports[3].m_flow
  0       0                       0                       0                
  6   388   # storage.vol[7].heatPort.Q_flow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[7].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[7].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[7].state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[7].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[7].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[7].state_start.T
  0       0                       0                       0                
  6  1281   # storage.vol[7].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # storage.vol[8].energyDynamics
  0       1                       1                       4                
  6   258   # storage.vol[8].massDynamics
  0       1                       1                       4                
  6   258   # storage.vol[8].substanceDynamics
  0       1                       1                       4                
  6   258   # storage.vol[8].traceDynamics
 -1 3.0000000000000000E+005       0                 1.0000000000000000E+008
  1   280   # storage.vol[8].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # storage.vol[8].T_start
 -1       1                       0                       1                
  1   280   # storage.vol[8].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # storage.vol[8].mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[8].initialize_p
  0       0                       0                       0                
  6   257   # storage.vol[8].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # storage.vol[8].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # storage.vol[8].use_C_flow
 -1       1                       0                 1.0000000000000000E+100
  1   280   # storage.vol[8].m_flow_nominal
  0       3                       0                       0                
  6   258   # storage.vol[8].nPorts
  0       0                       0                 1.0000000000000000E+100
  6   256   # storage.vol[8].m_flow_small
  0       1                       0                       0                
  6   257   # storage.vol[8].allowFlowReversal
  0       0                       0                       0                
  6   256   # storage.vol[8].V
  0       0                 -100000                  100000                
  6   388   # storage.vol[8].ports[3].m_flow
  0       0                       0                       0                
  6   388   # storage.vol[8].heatPort.Q_flow
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[8].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[8].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[8].state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[8].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[8].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[8].state_start.T
  0       0                       0                       0                
  6  1281   # storage.vol[8].useSteadyStateTwoPort
  0       0                 -100000                  100000                
  6   388   # storage.port_a[1].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.port_a[2].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.port_a[3].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.port_a[4].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.port_a[6].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.port_a[7].m_flow
  0       0                 -100000                  100000                
  6   388   # storage.port_a[8].m_flow
  0       0                       0                       0                
  6   388   # storage.heatPort.Q_flow
  0      12                       1                 1.0000000000000000E+100
  6   258   # storage.thermalCollector.m
  0       0                       0                       0                
  6   388   # storage.thermalCollector.port_b.Q_flow
  0       1                       1                       4                
  6  1282   # storage.vol_HX_1.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # storage.vol_HX_1.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # storage.vol_HX_1.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # storage.vol_HX_1.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol_HX_1.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol_HX_1.dynBal.T_start
  0       0                       0                       1                
  6  1280   # storage.vol_HX_1.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # storage.vol_HX_1.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol_HX_1.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # storage.vol_HX_1.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # storage.vol_HX_1.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # storage.vol_HX_1.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # storage.vol_HX_1.dynBal.use_C_flow
  0 4.9779300000000006E+001       0                 1.0000000000000000E+100
  6  1280   # storage.vol_HX_1.dynBal.mOut
  0     300                       1                   10000                
  6  1280   # storage.vol_HX_1.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_HX_1.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # storage.vol_HX_1.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # storage.vol_HX_1.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_HX_1.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # storage.vol_HX_1.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # storage.vol_HX_1.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # storage.vol_HX_1.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # storage.vol_HX_1.dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # storage.vol_HX_1.dynBal.U
  0       0                       0                       0                
  3  1280   # storage.vol_HX_1.dynBal.der(U)
  0 4.9779300000000006E+001       0                 1.0000000000000000E+100
  6  1280   # storage.vol_HX_1.dynBal.m
  0       0                       0                       0                
  6  1280   # storage.vol_HX_1.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # storage.vol_HX_1.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # storage.vol_HX_1.dynBal.Hb_flow
  0 5.0000000000000003E-002       0                       0                
  6  1280   # storage.vol_HX_1.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # storage.vol_HX_1.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol_HX_1.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol_HX_1.dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # storage.vol_HX_1.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_HX_1.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # storage.vol_HX_1.dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.storage.vol_HX_1.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol_HX_1.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol_HX_1.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_HX_1.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # storage.vol_HX_1.dynBal.hStart
  0       0                       0                       0                
  6  1280   # storage.vol_HX_1.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # storage.vol_bot.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # storage.vol_bot.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # storage.vol_bot.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # storage.vol_bot.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol_bot.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol_bot.dynBal.T_start
  0       0                       0                       1                
  6  1280   # storage.vol_bot.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # storage.vol_bot.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol_bot.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # storage.vol_bot.dynBal.simplify_mWat_flow
  0       3                       0                       0                
  6  1282   # storage.vol_bot.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # storage.vol_bot.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # storage.vol_bot.dynBal.use_C_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol_bot.dynBal.ports[1].m_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol_bot.dynBal.ports[2].m_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol_bot.dynBal.ports[3].m_flow
  0     300                       1                   10000                
  6  1280   # storage.vol_bot.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_bot.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # storage.vol_bot.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # storage.vol_bot.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_bot.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # storage.vol_bot.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # storage.vol_bot.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # storage.vol_bot.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # storage.vol_bot.dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # storage.vol_bot.dynBal.U
  0       0                       0                       0                
  3  1280   # storage.vol_bot.dynBal.der(U)
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol_bot.dynBal.m
  0       0                       0                       0                
  6  1280   # storage.vol_bot.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # storage.vol_bot.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # storage.vol_bot.dynBal.Hb_flow
  0       0                       0                       0                
  6  1280   # storage.vol_bot.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # storage.vol_bot.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol_bot.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol_bot.dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol_bot.dynBal.ports_H_flow[3]
  0    4184                       0                       0                
  6  1280   # storage.vol_bot.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_bot.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # storage.vol_bot.dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.storage.vol_bot.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol_bot.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol_bot.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_bot.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # storage.vol_bot.dynBal.hStart
  0       0                       0                       0                
  6  1280   # storage.vol_bot.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # storage.vol_top.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # storage.vol_top.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # storage.vol_top.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # storage.vol_top.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol_top.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol_top.dynBal.T_start
  0       0                       0                       1                
  6  1280   # storage.vol_top.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # storage.vol_top.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol_top.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # storage.vol_top.dynBal.simplify_mWat_flow
  0       3                       0                       0                
  6  1282   # storage.vol_top.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # storage.vol_top.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # storage.vol_top.dynBal.use_C_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol_top.dynBal.ports[2].m_flow
  0     300                       1                   10000                
  6  1280   # storage.vol_top.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_top.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # storage.vol_top.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # storage.vol_top.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_top.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # storage.vol_top.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # storage.vol_top.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # storage.vol_top.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # storage.vol_top.dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # storage.vol_top.dynBal.U
  0       0                       0                       0                
  3  1280   # storage.vol_top.dynBal.der(U)
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol_top.dynBal.m
  0       0                       0                       0                
  6  1280   # storage.vol_top.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # storage.vol_top.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # storage.vol_top.dynBal.Hb_flow
  0       0                       0                       0                
  6  1280   # storage.vol_top.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # storage.vol_top.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol_top.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol_top.dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol_top.dynBal.ports_H_flow[3]
  0    4184                       0                       0                
  6  1280   # storage.vol_top.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_top.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # storage.vol_top.dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.storage.vol_top.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol_top.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol_top.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol_top.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # storage.vol_top.dynBal.hStart
  0       0                       0                       0                
  6  1280   # storage.vol_top.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6   258   # collector.vol[1].energyDynamics
  0       1                       1                       4                
  6   258   # collector.vol[1].massDynamics
  0       1                       1                       4                
  6   258   # collector.vol[1].substanceDynamics
  0       1                       1                       4                
  6   258   # collector.vol[1].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # collector.vol[1].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # collector.vol[1].T_start
  0       1                       0                       1                
  6   256   # collector.vol[1].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # collector.vol[1].mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[1].initialize_p
  0       0                       0                       0                
  6   257   # collector.vol[1].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # collector.vol[1].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # collector.vol[1].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # collector.vol[1].m_flow_nominal
  0       2                       0                       0                
  6   258   # collector.vol[1].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # collector.vol[1].m_flow_small
  0       1                       0                       0                
  6   257   # collector.vol[1].allowFlowReversal
  0 3.5714285714285714E-004       0                       0                
  6   256   # collector.vol[1].V
  0       0                       0                       0                
  6   388   # collector.vol[1].heatPort.Q_flow
  0 3.5556642857142856E-001       0                       0                
  6   256   # collector.vol[1].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[1].rho_start
  0       1                       0                       1                
  6  1280   # _GlobalScope.collector.vol.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[1].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[1].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[1].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[1].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[1].state_start.T
  0       0                       0                       0                
  6  1281   # collector.vol[1].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # collector.vol[2].energyDynamics
  0       1                       1                       4                
  6   258   # collector.vol[2].massDynamics
  0       1                       1                       4                
  6   258   # collector.vol[2].substanceDynamics
  0       1                       1                       4                
  6   258   # collector.vol[2].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # collector.vol[2].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # collector.vol[2].T_start
  0       1                       0                       1                
  6   256   # collector.vol[2].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # collector.vol[2].mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[2].initialize_p
  0       0                       0                       0                
  6   257   # collector.vol[2].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # collector.vol[2].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # collector.vol[2].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # collector.vol[2].m_flow_nominal
  0       2                       0                       0                
  6   258   # collector.vol[2].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # collector.vol[2].m_flow_small
  0       1                       0                       0                
  6   257   # collector.vol[2].allowFlowReversal
  0 3.5714285714285714E-004       0                       0                
  6   256   # collector.vol[2].V
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # collector.vol[2].ports[1].h_outflow
  0       0                       0                       0                
  6   260   # collector.vol[2].ports[1].der(h_outflow)
  0       0                       0                       0                
  6   388   # collector.vol[2].heatPort.Q_flow
  0 3.5556642857142856E-001       0                       0                
  6   256   # collector.vol[2].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[2].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[2].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[2].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[2].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[2].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[2].state_start.T
  0       0                       0                       0                
  6  1281   # collector.vol[2].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # collector.vol[3].energyDynamics
  0       1                       1                       4                
  6   258   # collector.vol[3].massDynamics
  0       1                       1                       4                
  6   258   # collector.vol[3].substanceDynamics
  0       1                       1                       4                
  6   258   # collector.vol[3].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # collector.vol[3].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # collector.vol[3].T_start
  0       1                       0                       1                
  6   256   # collector.vol[3].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # collector.vol[3].mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[3].initialize_p
  0       0                       0                       0                
  6   257   # collector.vol[3].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # collector.vol[3].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # collector.vol[3].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # collector.vol[3].m_flow_nominal
  0       2                       0                       0                
  6   258   # collector.vol[3].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # collector.vol[3].m_flow_small
  0       1                       0                       0                
  6   257   # collector.vol[3].allowFlowReversal
  0 3.5714285714285714E-004       0                       0                
  6   256   # collector.vol[3].V
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # collector.vol[3].ports[1].h_outflow
  0       0                       0                       0                
  6   260   # collector.vol[3].ports[1].der(h_outflow)
  0       0                       0                       0                
  6   388   # collector.vol[3].heatPort.Q_flow
  0 3.5556642857142856E-001       0                       0                
  6   256   # collector.vol[3].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[3].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[3].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[3].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[3].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[3].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[3].state_start.T
  0       0                       0                       0                
  6  1281   # collector.vol[3].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # collector.vol[4].energyDynamics
  0       1                       1                       4                
  6   258   # collector.vol[4].massDynamics
  0       1                       1                       4                
  6   258   # collector.vol[4].substanceDynamics
  0       1                       1                       4                
  6   258   # collector.vol[4].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # collector.vol[4].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # collector.vol[4].T_start
  0       1                       0                       1                
  6   256   # collector.vol[4].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # collector.vol[4].mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[4].initialize_p
  0       0                       0                       0                
  6   257   # collector.vol[4].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # collector.vol[4].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # collector.vol[4].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # collector.vol[4].m_flow_nominal
  0       2                       0                       0                
  6   258   # collector.vol[4].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # collector.vol[4].m_flow_small
  0       1                       0                       0                
  6   257   # collector.vol[4].allowFlowReversal
  0 3.5714285714285714E-004       0                       0                
  6   256   # collector.vol[4].V
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # collector.vol[4].ports[1].h_outflow
  0       0                       0                       0                
  6   260   # collector.vol[4].ports[1].der(h_outflow)
  0       0                       0                       0                
  6   388   # collector.vol[4].heatPort.Q_flow
  0 3.5556642857142856E-001       0                       0                
  6   256   # collector.vol[4].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[4].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[4].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[4].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[4].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[4].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[4].state_start.T
  0       0                       0                       0                
  6  1281   # collector.vol[4].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # collector.vol[5].energyDynamics
  0       1                       1                       4                
  6   258   # collector.vol[5].massDynamics
  0       1                       1                       4                
  6   258   # collector.vol[5].substanceDynamics
  0       1                       1                       4                
  6   258   # collector.vol[5].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # collector.vol[5].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # collector.vol[5].T_start
  0       1                       0                       1                
  6   256   # collector.vol[5].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # collector.vol[5].mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[5].initialize_p
  0       0                       0                       0                
  6   257   # collector.vol[5].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # collector.vol[5].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # collector.vol[5].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # collector.vol[5].m_flow_nominal
  0       2                       0                       0                
  6   258   # collector.vol[5].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # collector.vol[5].m_flow_small
  0       1                       0                       0                
  6   257   # collector.vol[5].allowFlowReversal
  0 3.5714285714285714E-004       0                       0                
  6   256   # collector.vol[5].V
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # collector.vol[5].ports[1].h_outflow
  0       0                       0                       0                
  6   260   # collector.vol[5].ports[1].der(h_outflow)
  0       0                       0                       0                
  6   388   # collector.vol[5].heatPort.Q_flow
  0 3.5556642857142856E-001       0                       0                
  6   256   # collector.vol[5].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[5].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[5].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[5].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[5].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[5].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[5].state_start.T
  0       0                       0                       0                
  6  1281   # collector.vol[5].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # collector.vol[6].energyDynamics
  0       1                       1                       4                
  6   258   # collector.vol[6].massDynamics
  0       1                       1                       4                
  6   258   # collector.vol[6].substanceDynamics
  0       1                       1                       4                
  6   258   # collector.vol[6].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # collector.vol[6].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # collector.vol[6].T_start
  0       1                       0                       1                
  6   256   # collector.vol[6].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # collector.vol[6].mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[6].initialize_p
  0       0                       0                       0                
  6   257   # collector.vol[6].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # collector.vol[6].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # collector.vol[6].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # collector.vol[6].m_flow_nominal
  0       2                       0                       0                
  6   258   # collector.vol[6].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # collector.vol[6].m_flow_small
  0       1                       0                       0                
  6   257   # collector.vol[6].allowFlowReversal
  0 3.5714285714285714E-004       0                       0                
  6   256   # collector.vol[6].V
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # collector.vol[6].ports[1].h_outflow
  0       0                       0                       0                
  6   260   # collector.vol[6].ports[1].der(h_outflow)
  0       0                       0                       0                
  6   388   # collector.vol[6].heatPort.Q_flow
  0 3.5556642857142856E-001       0                       0                
  6   256   # collector.vol[6].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[6].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[6].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[6].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[6].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[6].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[6].state_start.T
  0       0                       0                       0                
  6  1281   # collector.vol[6].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # collector.vol[7].energyDynamics
  0       1                       1                       4                
  6   258   # collector.vol[7].massDynamics
  0       1                       1                       4                
  6   258   # collector.vol[7].substanceDynamics
  0       1                       1                       4                
  6   258   # collector.vol[7].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # collector.vol[7].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # collector.vol[7].T_start
  0       1                       0                       1                
  6   256   # collector.vol[7].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # collector.vol[7].mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[7].initialize_p
  0       0                       0                       0                
  6   257   # collector.vol[7].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # collector.vol[7].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # collector.vol[7].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # collector.vol[7].m_flow_nominal
  0       2                       0                       0                
  6   258   # collector.vol[7].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # collector.vol[7].m_flow_small
  0       1                       0                       0                
  6   257   # collector.vol[7].allowFlowReversal
  0 3.5714285714285714E-004       0                       0                
  6   256   # collector.vol[7].V
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # collector.vol[7].ports[1].h_outflow
  0       0                       0                       0                
  6   260   # collector.vol[7].ports[1].der(h_outflow)
  0       0                       0                       0                
  6   388   # collector.vol[7].heatPort.Q_flow
  0 3.5556642857142856E-001       0                       0                
  6   256   # collector.vol[7].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[7].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[7].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[7].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[7].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[7].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[7].state_start.T
  0       0                       0                       0                
  6  1281   # collector.vol[7].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # collector.vol[8].energyDynamics
  0       1                       1                       4                
  6   258   # collector.vol[8].massDynamics
  0       1                       1                       4                
  6   258   # collector.vol[8].substanceDynamics
  0       1                       1                       4                
  6   258   # collector.vol[8].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # collector.vol[8].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # collector.vol[8].T_start
  0       1                       0                       1                
  6   256   # collector.vol[8].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # collector.vol[8].mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[8].initialize_p
  0       0                       0                       0                
  6   257   # collector.vol[8].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # collector.vol[8].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # collector.vol[8].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # collector.vol[8].m_flow_nominal
  0       2                       0                       0                
  6   258   # collector.vol[8].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # collector.vol[8].m_flow_small
  0       1                       0                       0                
  6   257   # collector.vol[8].allowFlowReversal
  0 3.5714285714285714E-004       0                       0                
  6   256   # collector.vol[8].V
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # collector.vol[8].ports[1].h_outflow
  0       0                       0                       0                
  6   260   # collector.vol[8].ports[1].der(h_outflow)
  0       0                       0                       0                
  6   388   # collector.vol[8].heatPort.Q_flow
  0 3.5556642857142856E-001       0                       0                
  6   256   # collector.vol[8].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[8].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[8].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[8].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[8].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[8].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[8].state_start.T
  0       0                       0                       0                
  6  1281   # collector.vol[8].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # collector.vol[9].energyDynamics
  0       1                       1                       4                
  6   258   # collector.vol[9].massDynamics
  0       1                       1                       4                
  6   258   # collector.vol[9].substanceDynamics
  0       1                       1                       4                
  6   258   # collector.vol[9].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # collector.vol[9].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # collector.vol[9].T_start
  0       1                       0                       1                
  6   256   # collector.vol[9].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # collector.vol[9].mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[9].initialize_p
  0       0                       0                       0                
  6   257   # collector.vol[9].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # collector.vol[9].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # collector.vol[9].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # collector.vol[9].m_flow_nominal
  0       2                       0                       0                
  6   258   # collector.vol[9].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # collector.vol[9].m_flow_small
  0       1                       0                       0                
  6   257   # collector.vol[9].allowFlowReversal
  0 3.5714285714285714E-004       0                       0                
  6   256   # collector.vol[9].V
  0       0                 -1.0000000000000000E+010 1.0000000000000000E+010
  6   260   # collector.vol[9].ports[1].h_outflow
  0       0                       0                       0                
  6   260   # collector.vol[9].ports[1].der(h_outflow)
  0       0                       0                       0                
  6   388   # collector.vol[9].heatPort.Q_flow
  0 3.5556642857142856E-001       0                       0                
  6   256   # collector.vol[9].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[9].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[9].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[9].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[9].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[9].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[9].state_start.T
  0       0                       0                       0                
  6  1281   # collector.vol[9].useSteadyStateTwoPort
  0       1                       1                       4                
  6   258   # collector.vol[10].energyDynamics
  0       1                       1                       4                
  6   258   # collector.vol[10].massDynamics
  0       1                       1                       4                
  6   258   # collector.vol[10].substanceDynamics
  0       1                       1                       4                
  6   258   # collector.vol[10].traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6   256   # collector.vol[10].p_start
  0 2.9314999999999998E+002       1                   10000                
  6   256   # collector.vol[10].T_start
  0       1                       0                       1                
  6   256   # collector.vol[10].X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6   256   # collector.vol[10].mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[10].initialize_p
  0       0                       0                       0                
  6   257   # collector.vol[10].prescribedHeatFlowRate
  0       1                       0                       0                
  6   257   # collector.vol[10].simplify_mWat_flow
  0       0                       0                       0                
  6   257   # collector.vol[10].use_C_flow
  0 1.0000000000000001E-001       0                 1.0000000000000000E+100
  6   256   # collector.vol[10].m_flow_nominal
  0       2                       0                       0                
  6   258   # collector.vol[10].nPorts
  0 1.0000000000000001E-005       0                 1.0000000000000000E+100
  6   256   # collector.vol[10].m_flow_small
  0       1                       0                       0                
  6   257   # collector.vol[10].allowFlowReversal
  0 3.5714285714285714E-004       0                       0                
  6   256   # collector.vol[10].V
  0       0                       0                       0                
  6   388   # collector.vol[10].heatPort.Q_flow
  0 3.5556642857142856E-001       0                       0                
  6   256   # collector.vol[10].m
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[10].rho_start
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[10].state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[10].state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[10].rho_default
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[10].state_start.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[10].state_start.T
  0       0                       0                       0                
  6  1281   # collector.vol[10].useSteadyStateTwoPort
  0 6.8000000000000011E+002       0                       0                
  6   256   # collector.cp_solid[1].C
  0     300                       1                   10000                
  6   256   # collector.cp_solid[1].T
  0       0                       0                       0                
  6   256   # collector.cp_solid[1].der(T)
  0       0                       0                       0                
  6   388   # collector.cp_solid[1].port.Q_flow
  0 6.8000000000000011E+002       0                       0                
  6   256   # collector.cp_solid[2].C
  0     300                       1                   10000                
  6   256   # collector.cp_solid[2].T
  0       0                       0                       0                
  6   256   # collector.cp_solid[2].der(T)
  0       0                       0                       0                
  6   388   # collector.cp_solid[2].port.Q_flow
  0 6.8000000000000011E+002       0                       0                
  6   256   # collector.cp_solid[3].C
  0     300                       1                   10000                
  6   256   # collector.cp_solid[3].T
  0       0                       0                       0                
  6   256   # collector.cp_solid[3].der(T)
  0       0                       0                       0                
  6   388   # collector.cp_solid[3].port.Q_flow
  0 6.8000000000000011E+002       0                       0                
  6   256   # collector.cp_solid[4].C
  0     300                       1                   10000                
  6   256   # collector.cp_solid[4].T
  0       0                       0                       0                
  6   256   # collector.cp_solid[4].der(T)
  0       0                       0                       0                
  6   388   # collector.cp_solid[4].port.Q_flow
  0 6.8000000000000011E+002       0                       0                
  6   256   # collector.cp_solid[5].C
  0     300                       1                   10000                
  6   256   # collector.cp_solid[5].T
  0       0                       0                       0                
  6   256   # collector.cp_solid[5].der(T)
  0       0                       0                       0                
  6   388   # collector.cp_solid[5].port.Q_flow
  0 6.8000000000000011E+002       0                       0                
  6   256   # collector.cp_solid[6].C
  0     300                       1                   10000                
  6   256   # collector.cp_solid[6].T
  0       0                       0                       0                
  6   256   # collector.cp_solid[6].der(T)
  0       0                       0                       0                
  6   388   # collector.cp_solid[6].port.Q_flow
  0 6.8000000000000011E+002       0                       0                
  6   256   # collector.cp_solid[7].C
  0     300                       1                   10000                
  6   256   # collector.cp_solid[7].T
  0       0                       0                       0                
  6   256   # collector.cp_solid[7].der(T)
  0       0                       0                       0                
  6   388   # collector.cp_solid[7].port.Q_flow
  0 6.8000000000000011E+002       0                       0                
  6   256   # collector.cp_solid[8].C
  0     300                       1                   10000                
  6   256   # collector.cp_solid[8].T
  0       0                       0                       0                
  6   256   # collector.cp_solid[8].der(T)
  0       0                       0                       0                
  6   388   # collector.cp_solid[8].port.Q_flow
  0 6.8000000000000011E+002       0                       0                
  6   256   # collector.cp_solid[9].C
  0     300                       1                   10000                
  6   256   # collector.cp_solid[9].T
  0       0                       0                       0                
  6   256   # collector.cp_solid[9].der(T)
  0       0                       0                       0                
  6   388   # collector.cp_solid[9].port.Q_flow
  0 6.8000000000000011E+002       0                       0                
  6   256   # collector.cp_solid[10].C
  0     300                       1                   10000                
  6   256   # collector.cp_solid[10].T
  0       0                       0                       0                
  6   256   # collector.cp_solid[10].der(T)
  0       0                       0                       0                
  6   388   # collector.cp_solid[10].port.Q_flow
  0       1                       1                       4                
  6  1282   # pump2.vol.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pump2.vol.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pump2.vol.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pump2.vol.dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pump2.vol.dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pump2.vol.dynBal.T_start
  0       0                       0                       1                
  6  1280   # pump2.vol.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pump2.vol.dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pump2.vol.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pump2.vol.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pump2.vol.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pump2.vol.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pump2.vol.dynBal.use_C_flow
  0     300                       1                   10000                
  6  1280   # pump2.vol.dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump2.vol.dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pump2.vol.dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pump2.vol.dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pump2.vol.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pump2.vol.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pump2.vol.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pump2.vol.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pump2.vol.dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pump2.vol.dynBal.U
  0       0                       0                       0                
  3  1280   # pump2.vol.dynBal.der(U)
  0       0                       0                 1.0000000000000000E+100
  6  1280   # pump2.vol.dynBal.m
  0       0                       0                       0                
  6  1280   # pump2.vol.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pump2.vol.dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # pump2.vol.dynBal.Hb_flow
  0       0                       0                       0                
  6  1280   # pump2.vol.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pump2.vol.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pump2.vol.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pump2.vol.dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pump2.vol.dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump2.vol.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pump2.vol.dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.pump2.vol.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pump2.vol.dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pump2.vol.dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pump2.vol.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pump2.vol.dynBal.hStart
  0       0                       0                       0                
  6  1280   # pump2.vol.dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # pipe4.vol[1].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pipe4.vol[1].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pipe4.vol[1].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pipe4.vol[1].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe4.vol[1].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe4.vol[1].dynBal.T_start
  0       0                       0                       1                
  6  1280   # pipe4.vol[1].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pipe4.vol[1].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pipe4.vol[1].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pipe4.vol[1].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pipe4.vol[1].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pipe4.vol[1].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pipe4.vol[1].dynBal.use_C_flow
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[1].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pipe4.vol[1].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[1].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pipe4.vol[1].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pipe4.vol[1].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[1].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pipe4.vol[1].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pipe4.vol[1].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pipe4.vol[1].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pipe4.vol[1].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pipe4.vol[1].dynBal.U
  0       0                       0                       0                
  3  1280   # pipe4.vol[1].dynBal.der(U)
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[1].dynBal.m
  0       0                       0                       0                
  6  1280   # pipe4.vol[1].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pipe4.vol[1].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # pipe4.vol[1].dynBal.Hb_flow
  0 1.5707963267948965E-004       0                       0                
  6  1280   # pipe4.vol[1].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pipe4.vol[1].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe4.vol[1].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe4.vol[1].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pipe4.vol[1].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[1].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pipe4.vol[1].dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe4.vol.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe4.vol[1].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe4.vol[1].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[1].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pipe4.vol[1].dynBal.hStart
  0       0                       0                       0                
  6  1280   # pipe4.vol[1].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # pipe4.vol[2].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pipe4.vol[2].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pipe4.vol[2].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pipe4.vol[2].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe4.vol[2].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe4.vol[2].dynBal.T_start
  0       0                       0                       1                
  6  1280   # pipe4.vol[2].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pipe4.vol[2].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pipe4.vol[2].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pipe4.vol[2].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pipe4.vol[2].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pipe4.vol[2].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pipe4.vol[2].dynBal.use_C_flow
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[2].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pipe4.vol[2].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[2].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pipe4.vol[2].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pipe4.vol[2].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[2].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pipe4.vol[2].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pipe4.vol[2].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pipe4.vol[2].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pipe4.vol[2].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pipe4.vol[2].dynBal.U
  0       0                       0                       0                
  3  1280   # pipe4.vol[2].dynBal.der(U)
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[2].dynBal.m
  0       0                       0                       0                
  6  1280   # pipe4.vol[2].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pipe4.vol[2].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # pipe4.vol[2].dynBal.Hb_flow
  0 1.5707963267948965E-004       0                       0                
  6  1280   # pipe4.vol[2].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pipe4.vol[2].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe4.vol[2].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe4.vol[2].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pipe4.vol[2].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[2].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pipe4.vol[2].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe4.vol[2].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe4.vol[2].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe4.vol[2].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pipe4.vol[2].dynBal.hStart
  0       0                       0                       0                
  6  1280   # pipe4.vol[2].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # pipe5.vol[1].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pipe5.vol[1].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pipe5.vol[1].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pipe5.vol[1].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe5.vol[1].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe5.vol[1].dynBal.T_start
  0       0                       0                       1                
  6  1280   # pipe5.vol[1].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pipe5.vol[1].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pipe5.vol[1].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pipe5.vol[1].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pipe5.vol[1].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pipe5.vol[1].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pipe5.vol[1].dynBal.use_C_flow
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[1].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pipe5.vol[1].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[1].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pipe5.vol[1].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pipe5.vol[1].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[1].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pipe5.vol[1].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pipe5.vol[1].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pipe5.vol[1].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pipe5.vol[1].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pipe5.vol[1].dynBal.U
  0       0                       0                       0                
  3  1280   # pipe5.vol[1].dynBal.der(U)
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[1].dynBal.m
  0       0                       0                       0                
  6  1280   # pipe5.vol[1].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pipe5.vol[1].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # pipe5.vol[1].dynBal.Hb_flow
  0 1.5707963267948965E-004       0                       0                
  6  1280   # pipe5.vol[1].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pipe5.vol[1].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe5.vol[1].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe5.vol[1].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pipe5.vol[1].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[1].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pipe5.vol[1].dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.pipe5.vol.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe5.vol[1].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe5.vol[1].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[1].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pipe5.vol[1].dynBal.hStart
  0       0                       0                       0                
  6  1280   # pipe5.vol[1].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # pipe5.vol[2].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # pipe5.vol[2].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # pipe5.vol[2].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # pipe5.vol[2].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe5.vol[2].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe5.vol[2].dynBal.T_start
  0       0                       0                       1                
  6  1280   # pipe5.vol[2].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # pipe5.vol[2].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # pipe5.vol[2].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # pipe5.vol[2].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # pipe5.vol[2].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # pipe5.vol[2].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # pipe5.vol[2].dynBal.use_C_flow
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[2].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # pipe5.vol[2].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[2].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # pipe5.vol[2].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # pipe5.vol[2].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[2].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # pipe5.vol[2].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # pipe5.vol[2].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # pipe5.vol[2].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # pipe5.vol[2].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # pipe5.vol[2].dynBal.U
  0       0                       0                       0                
  3  1280   # pipe5.vol[2].dynBal.der(U)
  0 1.5638628318084238E-001       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[2].dynBal.m
  0       0                       0                       0                
  6  1280   # pipe5.vol[2].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # pipe5.vol[2].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # pipe5.vol[2].dynBal.Hb_flow
  0 1.5707963267948965E-004       0                       0                
  6  1280   # pipe5.vol[2].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # pipe5.vol[2].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe5.vol[2].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # pipe5.vol[2].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # pipe5.vol[2].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[2].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # pipe5.vol[2].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # pipe5.vol[2].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # pipe5.vol[2].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # pipe5.vol[2].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # pipe5.vol[2].dynBal.hStart
  0       0                       0                       0                
  6  1280   # pipe5.vol[2].dynBal.mWat_flow_internal
  0       0                       0                       0                
  6   388   # building.intGainsConv.Q_flow
  0       0                       0                       0                
  6   388   # building.intGainsRad.Q_flow
  0       1                       1                       4                
  6  1282   # building.volAir.dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # building.volAir.dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # building.volAir.dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # building.volAir.dynBal.traceDynamics
  0  100000                       0                 1.0000000000000000E+008
  6  1280   # building.volAir.dynBal.p_start
  0 2.8814999999999998E+002 2.7314999999999998E+002 3.7314999999999998E+002
  6  1280   # building.volAir.dynBal.T_start
  0       0                       0                       1                
  6  1280   # building.volAir.dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # building.volAir.dynBal.mSenFac
  0       1                       0                       0                
  6   769   # building.volAir.dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # building.volAir.dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # building.volAir.dynBal.nPorts
  0       0                       0                       0                
  6  1281   # building.volAir.dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # building.volAir.dynBal.use_C_flow
  0       0                       0                  100000                
  6  1280   # building.volAir.dynBal.medium.d
  0     300                 2.7314999999999998E+002 3.7314999999999998E+002
  6  1280   # building.volAir.dynBal.medium.T
  0       1                       0                       1                
  6  1280   # building.volAir.dynBal.medium.X[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # building.volAir.dynBal.medium.u
  0 2.8705080375666648E+002       0                 1.0000000000000000E+007
  6  1280   # building.volAir.dynBal.medium.R
  0 2.8965115900000001E-002 1.0000000000000000E-003 2.5000000000000000E-001
  6  1280   # building.volAir.dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # building.volAir.dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # building.volAir.dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # building.volAir.dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # building.volAir.dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # building.volAir.dynBal.U
  0       0                       0                       0                
  3  1280   # building.volAir.dynBal.der(U)
 -1       0                       0                 1.0000000000000000E+100
  2  1296   # building.volAir.dynBal.m
  0       0                       0                       0                
  3  1280   # building.volAir.dynBal.der(m)
  0       0                       0                       0                
  6  1280   # building.volAir.dynBal.Hb_flow
  0     336                       0                       0                
  6  1280   # building.volAir.dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # building.volAir.dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # building.volAir.dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # building.volAir.dynBal.ports_H_flow[2]
  0 1.0054500000000000E+003       0                       0                
  6  1280   # building.volAir.dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # building.volAir.dynBal.rho_start
  0       0                       0                       0                
  6  1281   # building.volAir.dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.building.volAir.dynBal.X_default[1]
  0 1.0132500000000000E+005       0                 1.0000000000000000E+008
  6  1280   # building.volAir.dynBal.state_default.p
  0 2.9314999999999998E+002 2.7314999999999998E+002 3.7314999999999998E+002
  6  1280   # building.volAir.dynBal.state_default.T
  0 1.2041149447828581E+000       0                 1.0000000000000000E+100
  6  1280   # building.volAir.dynBal.rho_default
  0       0                       0                       0                
  6  1280   # building.volAir.dynBal.hStart
  0       0                       0                       0                
  6  1280   # building.volAir.dynBal.mWat_flow_internal
  0       0                       0                       0                
  6   256   # building.resWin.dT
  0       0                       0                       0                
  6   256   # building.resWin.R
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # building.convHeatSol.T_ref
 -1       0                       0                       0                
  1   280   # building.convHeatSol.alpha
  0       0                       0                       0                
  6   388   # building.convHeatSol.port.Q_flow
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # building.radHeatSol[1].T_ref
 -1       0                       0                       0                
  1   280   # building.radHeatSol[1].alpha
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # building.radHeatSol[2].T_ref
 -1       0                       0                       0                
  1   280   # building.radHeatSol[2].alpha
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # building.radHeatSol[3].T_ref
 -1       0                       0                       0                
  1   280   # building.radHeatSol[3].alpha
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # building.radHeatSol[4].T_ref
 -1       0                       0                       0                
  1   280   # building.radHeatSol[4].alpha
  0       5                       0                       0                
  6   258   # building.thermSplitterIntGains.nOut
  0       1                       0                       0                
  6   258   # building.thermSplitterIntGains.nIn
  0 3.0429447852760733E-001       0                       0                
  6   256   # building.thermSplitterIntGains.splitFactor[1, 1]
  0 4.6848856664807585E-002       0                       0                
  6   256   # building.thermSplitterIntGains.splitFactor[2, 1]
  0 4.4406023424428331E-001       0                       0                
  6   256   # building.thermSplitterIntGains.splitFactor[3, 1]
  0 1.0239821528165086E-001       0                       0                
  6   256   # building.thermSplitterIntGains.splitFactor[4, 1]
  0 1.0239821528165086E-001       0                       0                
  6   256   # building.thermSplitterIntGains.splitFactor[5, 1]
  0       0                       0                       0                
  6   388   # building.thermSplitterIntGains.portOut[1].Q_flow
  0       0                       0                       0                
  6   388   # building.thermSplitterIntGains.portOut[2].Q_flow
  0       0                       0                       0                
  6   388   # building.thermSplitterIntGains.portOut[3].Q_flow
  0       0                       0                       0                
  6   388   # building.thermSplitterIntGains.portOut[4].Q_flow
  0       0                       0                       0                
  6   388   # building.thermSplitterIntGains.portOut[5].Q_flow
  0       5                       0                       0                
  6   258   # building.thermSplitterSolRad.nOut
  0       4                       0                       0                
  6   258   # building.thermSplitterSolRad.nIn
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[1, 1]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[1, 2]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[1, 3]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[1, 4]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[2, 1]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[2, 2]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[2, 3]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[2, 4]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[3, 1]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[3, 2]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[3, 3]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[3, 4]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[4, 1]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[4, 2]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[4, 3]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[4, 4]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[5, 1]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[5, 2]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[5, 3]
  0       0                       0                       0                
  6   256   # building.thermSplitterSolRad.splitFactor[5, 4]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   260   # building.thermSplitterSolRad.portIn[1].T
  0       0                       0                       0                
  6   388   # building.thermSplitterSolRad.portIn[1].Q_flow
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   260   # building.thermSplitterSolRad.portIn[2].T
  0       0                       0                       0                
  6   388   # building.thermSplitterSolRad.portIn[2].Q_flow
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   260   # building.thermSplitterSolRad.portIn[3].T
  0       0                       0                       0                
  6   388   # building.thermSplitterSolRad.portIn[3].Q_flow
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   260   # building.thermSplitterSolRad.portIn[4].T
  0       0                       0                       0                
  6   388   # building.thermSplitterSolRad.portIn[4].Q_flow
  0       0                       0                       0                
  6   388   # building.thermSplitterSolRad.portOut[1].Q_flow
  0       0                       0                       0                
  6   388   # building.thermSplitterSolRad.portOut[2].Q_flow
  0       0                       0                       0                
  6   388   # building.thermSplitterSolRad.portOut[3].Q_flow
  0       0                       0                       0                
  6   388   # building.thermSplitterSolRad.portOut[4].Q_flow
  0       0                       0                       0                
  6   388   # building.thermSplitterSolRad.portOut[5].Q_flow
  0       1                       1                 1.0000000000000000E+100
  6   258   # building.extWallRC.n
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.extWallRC.RExt[1]
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.extWallRC.RExtRem
  0 9.9999999999999997E-061 9.9999999999999997E-061 1.0000000000000000E+100
  6   256   # building.extWallRC.CExt[1]
  0 2.8814999999999998E+002       0                 1.0000000000000000E+100
  6   256   # building.extWallRC.T_start
  0       0                       0                       0                
  6   388   # building.extWallRC.port_a.Q_flow
  0       0                       0                       0                
  6   256   # building.extWallRC.thermCapExt[1].C
 -1       0                       0                 1.0000000000000000E+100
  2   272   # building.extWallRC.thermCapExt[1].T
  0       0                       0                       0                
  3   256   # building.extWallRC.thermCapExt[1].der(T)
  0       0                       0                       0                
  6   388   # building.extWallRC.thermCapExt[1].port.Q_flow
  0       0                       0                       0                
  6  1280   # building.extWallRC.thermResExt[1].dT
  0       0                       0                       0                
  6  1280   # building.extWallRC.thermResExt[1].R
  0       0                       0                       0                
  6  1280   # building.extWallRC.thermResExtRem.dT
  0       0                       0                       0                
  6  1280   # building.extWallRC.thermResExtRem.R
  0       0                       0                       0                
  6  1412   # building.senTAir.port.Q_flow
  0       0                       0                       0                
  6  1412   # building.senTRad.port.Q_flow
  0       1                       1                       4                
  6  1282   # storage.vol[1].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[1].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[1].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[1].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[1].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[1].dynBal.T_start
  0       0                       0                       1                
  6  1280   # storage.vol[1].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # storage.vol[1].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[1].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # storage.vol[1].dynBal.simplify_mWat_flow
  0       3                       0                       0                
  6  1282   # storage.vol[1].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # storage.vol[1].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # storage.vol[1].dynBal.use_C_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[1].dynBal.ports[1].m_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[1].dynBal.ports[2].m_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[1].dynBal.ports[3].m_flow
  0     300                       1                   10000                
  6  1280   # storage.vol[1].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[1].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # storage.vol[1].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # storage.vol[1].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[1].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # storage.vol[1].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # storage.vol[1].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # storage.vol[1].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # storage.vol[1].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # storage.vol[1].dynBal.U
  0       0                       0                       0                
  3  1280   # storage.vol[1].dynBal.der(U)
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[1].dynBal.m
  0       0                       0                       0                
  6  1280   # storage.vol[1].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # storage.vol[1].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[1].dynBal.Hb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[1].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # storage.vol[1].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[1].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[1].dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[1].dynBal.ports_H_flow[3]
  0       0                       0                       0                
  6  1280   # storage.vol[1].dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[1].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # storage.vol[1].dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.storage.vol.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[1].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[1].dynBal.state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[1].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # storage.vol[1].dynBal.hStart
  0       0                       0                       0                
  6  1280   # storage.vol[1].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # storage.vol[2].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[2].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[2].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[2].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[2].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[2].dynBal.T_start
  0       0                       0                       1                
  6  1280   # storage.vol[2].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # storage.vol[2].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[2].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # storage.vol[2].dynBal.simplify_mWat_flow
  0       3                       0                       0                
  6  1282   # storage.vol[2].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # storage.vol[2].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # storage.vol[2].dynBal.use_C_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[2].dynBal.ports[1].m_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[2].dynBal.ports[2].m_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[2].dynBal.ports[3].m_flow
  0     300                       1                   10000                
  6  1280   # storage.vol[2].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[2].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # storage.vol[2].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # storage.vol[2].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[2].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # storage.vol[2].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # storage.vol[2].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # storage.vol[2].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # storage.vol[2].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # storage.vol[2].dynBal.U
  0       0                       0                       0                
  3  1280   # storage.vol[2].dynBal.der(U)
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[2].dynBal.m
  0       0                       0                       0                
  6  1280   # storage.vol[2].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # storage.vol[2].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[2].dynBal.Hb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[2].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # storage.vol[2].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[2].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[2].dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[2].dynBal.ports_H_flow[3]
  0       0                       0                       0                
  6  1280   # storage.vol[2].dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[2].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # storage.vol[2].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[2].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[2].dynBal.state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[2].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # storage.vol[2].dynBal.hStart
  0       0                       0                       0                
  6  1280   # storage.vol[2].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # storage.vol[3].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[3].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[3].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[3].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[3].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[3].dynBal.T_start
  0       0                       0                       1                
  6  1280   # storage.vol[3].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # storage.vol[3].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[3].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # storage.vol[3].dynBal.simplify_mWat_flow
  0       3                       0                       0                
  6  1282   # storage.vol[3].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # storage.vol[3].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # storage.vol[3].dynBal.use_C_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[3].dynBal.ports[1].m_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[3].dynBal.ports[2].m_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[3].dynBal.ports[3].m_flow
  0     300                       1                   10000                
  6  1280   # storage.vol[3].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[3].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # storage.vol[3].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # storage.vol[3].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[3].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # storage.vol[3].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # storage.vol[3].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # storage.vol[3].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # storage.vol[3].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # storage.vol[3].dynBal.U
  0       0                       0                       0                
  3  1280   # storage.vol[3].dynBal.der(U)
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[3].dynBal.m
  0       0                       0                       0                
  6  1280   # storage.vol[3].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # storage.vol[3].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[3].dynBal.Hb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[3].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # storage.vol[3].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[3].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[3].dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[3].dynBal.ports_H_flow[3]
  0       0                       0                       0                
  6  1280   # storage.vol[3].dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[3].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # storage.vol[3].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[3].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[3].dynBal.state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[3].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # storage.vol[3].dynBal.hStart
  0       0                       0                       0                
  6  1280   # storage.vol[3].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # storage.vol[4].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[4].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[4].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[4].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[4].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[4].dynBal.T_start
  0       0                       0                       1                
  6  1280   # storage.vol[4].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # storage.vol[4].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[4].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # storage.vol[4].dynBal.simplify_mWat_flow
  0       3                       0                       0                
  6  1282   # storage.vol[4].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # storage.vol[4].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # storage.vol[4].dynBal.use_C_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[4].dynBal.ports[1].m_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[4].dynBal.ports[2].m_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[4].dynBal.ports[3].m_flow
  0     300                       1                   10000                
  6  1280   # storage.vol[4].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[4].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # storage.vol[4].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # storage.vol[4].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[4].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # storage.vol[4].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # storage.vol[4].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # storage.vol[4].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # storage.vol[4].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # storage.vol[4].dynBal.U
  0       0                       0                       0                
  3  1280   # storage.vol[4].dynBal.der(U)
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[4].dynBal.m
  0       0                       0                       0                
  6  1280   # storage.vol[4].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # storage.vol[4].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[4].dynBal.Hb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[4].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # storage.vol[4].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[4].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[4].dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[4].dynBal.ports_H_flow[3]
  0       0                       0                       0                
  6  1280   # storage.vol[4].dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[4].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # storage.vol[4].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[4].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[4].dynBal.state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[4].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # storage.vol[4].dynBal.hStart
  0       0                       0                       0                
  6  1280   # storage.vol[4].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # storage.vol[5].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[5].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[5].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[5].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[5].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[5].dynBal.T_start
  0       0                       0                       1                
  6  1280   # storage.vol[5].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # storage.vol[5].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[5].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # storage.vol[5].dynBal.simplify_mWat_flow
  0       3                       0                       0                
  6  1282   # storage.vol[5].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # storage.vol[5].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # storage.vol[5].dynBal.use_C_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[5].dynBal.ports[1].m_flow
  0     300                       1                   10000                
  6  1280   # storage.vol[5].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[5].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # storage.vol[5].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # storage.vol[5].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[5].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # storage.vol[5].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # storage.vol[5].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # storage.vol[5].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # storage.vol[5].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # storage.vol[5].dynBal.U
  0       0                       0                       0                
  3  1280   # storage.vol[5].dynBal.der(U)
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[5].dynBal.m
  0       0                       0                       0                
  6  1280   # storage.vol[5].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # storage.vol[5].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[5].dynBal.Hb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[5].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # storage.vol[5].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[5].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[5].dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[5].dynBal.ports_H_flow[3]
  0       0                       0                       0                
  6  1280   # storage.vol[5].dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[5].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # storage.vol[5].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[5].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[5].dynBal.state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[5].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # storage.vol[5].dynBal.hStart
  0       0                       0                       0                
  6  1280   # storage.vol[5].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # storage.vol[6].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[6].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[6].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[6].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[6].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[6].dynBal.T_start
  0       0                       0                       1                
  6  1280   # storage.vol[6].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # storage.vol[6].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[6].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # storage.vol[6].dynBal.simplify_mWat_flow
  0       3                       0                       0                
  6  1282   # storage.vol[6].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # storage.vol[6].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # storage.vol[6].dynBal.use_C_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[6].dynBal.ports[3].m_flow
  0     300                       1                   10000                
  6  1280   # storage.vol[6].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[6].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # storage.vol[6].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # storage.vol[6].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[6].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # storage.vol[6].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # storage.vol[6].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # storage.vol[6].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # storage.vol[6].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # storage.vol[6].dynBal.U
  0       0                       0                       0                
  3  1280   # storage.vol[6].dynBal.der(U)
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[6].dynBal.m
  0       0                       0                       0                
  6  1280   # storage.vol[6].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # storage.vol[6].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[6].dynBal.Hb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[6].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # storage.vol[6].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[6].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[6].dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[6].dynBal.ports_H_flow[3]
  0       0                       0                       0                
  6  1280   # storage.vol[6].dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[6].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # storage.vol[6].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[6].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[6].dynBal.state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[6].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # storage.vol[6].dynBal.hStart
  0       0                       0                       0                
  6  1280   # storage.vol[6].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # storage.vol[7].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[7].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[7].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[7].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[7].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[7].dynBal.T_start
  0       0                       0                       1                
  6  1280   # storage.vol[7].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # storage.vol[7].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[7].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # storage.vol[7].dynBal.simplify_mWat_flow
  0       3                       0                       0                
  6  1282   # storage.vol[7].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # storage.vol[7].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # storage.vol[7].dynBal.use_C_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[7].dynBal.ports[3].m_flow
  0     300                       1                   10000                
  6  1280   # storage.vol[7].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[7].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # storage.vol[7].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # storage.vol[7].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[7].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # storage.vol[7].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # storage.vol[7].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # storage.vol[7].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # storage.vol[7].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # storage.vol[7].dynBal.U
  0       0                       0                       0                
  3  1280   # storage.vol[7].dynBal.der(U)
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[7].dynBal.m
  0       0                       0                       0                
  6  1280   # storage.vol[7].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # storage.vol[7].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[7].dynBal.Hb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[7].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # storage.vol[7].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[7].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[7].dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[7].dynBal.ports_H_flow[3]
  0       0                       0                       0                
  6  1280   # storage.vol[7].dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[7].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # storage.vol[7].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[7].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[7].dynBal.state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[7].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # storage.vol[7].dynBal.hStart
  0       0                       0                       0                
  6  1280   # storage.vol[7].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # storage.vol[8].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[8].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[8].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # storage.vol[8].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[8].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[8].dynBal.T_start
  0       0                       0                       1                
  6  1280   # storage.vol[8].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # storage.vol[8].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # storage.vol[8].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # storage.vol[8].dynBal.simplify_mWat_flow
  0       3                       0                       0                
  6  1282   # storage.vol[8].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # storage.vol[8].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # storage.vol[8].dynBal.use_C_flow
  0       0                 -100000                  100000                
  6  1412   # storage.vol[8].dynBal.ports[3].m_flow
  0     300                       1                   10000                
  6  1280   # storage.vol[8].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[8].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # storage.vol[8].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # storage.vol[8].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # storage.vol[8].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # storage.vol[8].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # storage.vol[8].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # storage.vol[8].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # storage.vol[8].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # storage.vol[8].dynBal.U
  0       0                       0                       0                
  3  1280   # storage.vol[8].dynBal.der(U)
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[8].dynBal.m
  0       0                       0                       0                
  6  1280   # storage.vol[8].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # storage.vol[8].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[8].dynBal.Hb_flow
  0       0                       0                       0                
  6  1280   # storage.vol[8].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # storage.vol[8].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[8].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[8].dynBal.ports_H_flow[2]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # storage.vol[8].dynBal.ports_H_flow[3]
  0       0                       0                       0                
  6  1280   # storage.vol[8].dynBal.cp_default
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[8].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # storage.vol[8].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # storage.vol[8].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # storage.vol[8].dynBal.state_default.T
  0       0                       0                 1.0000000000000000E+100
  6  1280   # storage.vol[8].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # storage.vol[8].dynBal.hStart
  0       0                       0                       0                
  6  1280   # storage.vol[8].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # collector.vol[1].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[1].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[1].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[1].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[1].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[1].dynBal.T_start
  0       1                       0                       1                
  6  1280   # collector.vol[1].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # collector.vol[1].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[1].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # collector.vol[1].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # collector.vol[1].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # collector.vol[1].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # collector.vol[1].dynBal.use_C_flow
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[1].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # collector.vol[1].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[1].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # collector.vol[1].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # collector.vol[1].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[1].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # collector.vol[1].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # collector.vol[1].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # collector.vol[1].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # collector.vol[1].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # collector.vol[1].dynBal.U
  0       0                       0                       0                
  3  1280   # collector.vol[1].dynBal.der(U)
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[1].dynBal.m
  0       0                       0                       0                
  6  1280   # collector.vol[1].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # collector.vol[1].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # collector.vol[1].dynBal.Hb_flow
  0 3.5714285714285714E-004       0                       0                
  6  1280   # collector.vol[1].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # collector.vol[1].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[1].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[1].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # collector.vol[1].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[1].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # collector.vol[1].dynBal.computeCSen
  0       1                       0                       1                
  6  1280   # _GlobalScope.collector.vol.dynBal.X_default[1]
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[1].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[1].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[1].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # collector.vol[1].dynBal.hStart
  0       0                       0                       0                
  6  1280   # collector.vol[1].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # collector.vol[2].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[2].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[2].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[2].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[2].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[2].dynBal.T_start
  0       1                       0                       1                
  6  1280   # collector.vol[2].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # collector.vol[2].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[2].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # collector.vol[2].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # collector.vol[2].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # collector.vol[2].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # collector.vol[2].dynBal.use_C_flow
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[2].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # collector.vol[2].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[2].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # collector.vol[2].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # collector.vol[2].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[2].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # collector.vol[2].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # collector.vol[2].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # collector.vol[2].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # collector.vol[2].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # collector.vol[2].dynBal.U
  0       0                       0                       0                
  3  1280   # collector.vol[2].dynBal.der(U)
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[2].dynBal.m
  0       0                       0                       0                
  6  1280   # collector.vol[2].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # collector.vol[2].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # collector.vol[2].dynBal.Hb_flow
  0 3.5714285714285714E-004       0                       0                
  6  1280   # collector.vol[2].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # collector.vol[2].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[2].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[2].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # collector.vol[2].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[2].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # collector.vol[2].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[2].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[2].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[2].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # collector.vol[2].dynBal.hStart
  0       0                       0                       0                
  6  1280   # collector.vol[2].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # collector.vol[3].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[3].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[3].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[3].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[3].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[3].dynBal.T_start
  0       1                       0                       1                
  6  1280   # collector.vol[3].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # collector.vol[3].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[3].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # collector.vol[3].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # collector.vol[3].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # collector.vol[3].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # collector.vol[3].dynBal.use_C_flow
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[3].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # collector.vol[3].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[3].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # collector.vol[3].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # collector.vol[3].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[3].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # collector.vol[3].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # collector.vol[3].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # collector.vol[3].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # collector.vol[3].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # collector.vol[3].dynBal.U
  0       0                       0                       0                
  3  1280   # collector.vol[3].dynBal.der(U)
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[3].dynBal.m
  0       0                       0                       0                
  6  1280   # collector.vol[3].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # collector.vol[3].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # collector.vol[3].dynBal.Hb_flow
  0 3.5714285714285714E-004       0                       0                
  6  1280   # collector.vol[3].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # collector.vol[3].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[3].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[3].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # collector.vol[3].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[3].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # collector.vol[3].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[3].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[3].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[3].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # collector.vol[3].dynBal.hStart
  0       0                       0                       0                
  6  1280   # collector.vol[3].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # collector.vol[4].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[4].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[4].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[4].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[4].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[4].dynBal.T_start
  0       1                       0                       1                
  6  1280   # collector.vol[4].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # collector.vol[4].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[4].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # collector.vol[4].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # collector.vol[4].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # collector.vol[4].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # collector.vol[4].dynBal.use_C_flow
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[4].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # collector.vol[4].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[4].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # collector.vol[4].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # collector.vol[4].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[4].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # collector.vol[4].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # collector.vol[4].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # collector.vol[4].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # collector.vol[4].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # collector.vol[4].dynBal.U
  0       0                       0                       0                
  3  1280   # collector.vol[4].dynBal.der(U)
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[4].dynBal.m
  0       0                       0                       0                
  6  1280   # collector.vol[4].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # collector.vol[4].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # collector.vol[4].dynBal.Hb_flow
  0 3.5714285714285714E-004       0                       0                
  6  1280   # collector.vol[4].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # collector.vol[4].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[4].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[4].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # collector.vol[4].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[4].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # collector.vol[4].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[4].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[4].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[4].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # collector.vol[4].dynBal.hStart
  0       0                       0                       0                
  6  1280   # collector.vol[4].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # collector.vol[5].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[5].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[5].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[5].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[5].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[5].dynBal.T_start
  0       1                       0                       1                
  6  1280   # collector.vol[5].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # collector.vol[5].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[5].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # collector.vol[5].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # collector.vol[5].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # collector.vol[5].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # collector.vol[5].dynBal.use_C_flow
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[5].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # collector.vol[5].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[5].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # collector.vol[5].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # collector.vol[5].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[5].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # collector.vol[5].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # collector.vol[5].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # collector.vol[5].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # collector.vol[5].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # collector.vol[5].dynBal.U
  0       0                       0                       0                
  3  1280   # collector.vol[5].dynBal.der(U)
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[5].dynBal.m
  0       0                       0                       0                
  6  1280   # collector.vol[5].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # collector.vol[5].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # collector.vol[5].dynBal.Hb_flow
  0 3.5714285714285714E-004       0                       0                
  6  1280   # collector.vol[5].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # collector.vol[5].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[5].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[5].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # collector.vol[5].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[5].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # collector.vol[5].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[5].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[5].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[5].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # collector.vol[5].dynBal.hStart
  0       0                       0                       0                
  6  1280   # collector.vol[5].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # collector.vol[6].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[6].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[6].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[6].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[6].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[6].dynBal.T_start
  0       1                       0                       1                
  6  1280   # collector.vol[6].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # collector.vol[6].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[6].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # collector.vol[6].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # collector.vol[6].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # collector.vol[6].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # collector.vol[6].dynBal.use_C_flow
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[6].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # collector.vol[6].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[6].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # collector.vol[6].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # collector.vol[6].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[6].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # collector.vol[6].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # collector.vol[6].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # collector.vol[6].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # collector.vol[6].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # collector.vol[6].dynBal.U
  0       0                       0                       0                
  3  1280   # collector.vol[6].dynBal.der(U)
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[6].dynBal.m
  0       0                       0                       0                
  6  1280   # collector.vol[6].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # collector.vol[6].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # collector.vol[6].dynBal.Hb_flow
  0 3.5714285714285714E-004       0                       0                
  6  1280   # collector.vol[6].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # collector.vol[6].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[6].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[6].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # collector.vol[6].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[6].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # collector.vol[6].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[6].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[6].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[6].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # collector.vol[6].dynBal.hStart
  0       0                       0                       0                
  6  1280   # collector.vol[6].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # collector.vol[7].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[7].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[7].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[7].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[7].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[7].dynBal.T_start
  0       1                       0                       1                
  6  1280   # collector.vol[7].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # collector.vol[7].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[7].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # collector.vol[7].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # collector.vol[7].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # collector.vol[7].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # collector.vol[7].dynBal.use_C_flow
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[7].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # collector.vol[7].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[7].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # collector.vol[7].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # collector.vol[7].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[7].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # collector.vol[7].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # collector.vol[7].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # collector.vol[7].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # collector.vol[7].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # collector.vol[7].dynBal.U
  0       0                       0                       0                
  3  1280   # collector.vol[7].dynBal.der(U)
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[7].dynBal.m
  0       0                       0                       0                
  6  1280   # collector.vol[7].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # collector.vol[7].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # collector.vol[7].dynBal.Hb_flow
  0 3.5714285714285714E-004       0                       0                
  6  1280   # collector.vol[7].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # collector.vol[7].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[7].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[7].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # collector.vol[7].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[7].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # collector.vol[7].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[7].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[7].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[7].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # collector.vol[7].dynBal.hStart
  0       0                       0                       0                
  6  1280   # collector.vol[7].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # collector.vol[8].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[8].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[8].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[8].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[8].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[8].dynBal.T_start
  0       1                       0                       1                
  6  1280   # collector.vol[8].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # collector.vol[8].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[8].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # collector.vol[8].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # collector.vol[8].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # collector.vol[8].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # collector.vol[8].dynBal.use_C_flow
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[8].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # collector.vol[8].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[8].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # collector.vol[8].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # collector.vol[8].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[8].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # collector.vol[8].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # collector.vol[8].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # collector.vol[8].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # collector.vol[8].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # collector.vol[8].dynBal.U
  0       0                       0                       0                
  3  1280   # collector.vol[8].dynBal.der(U)
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[8].dynBal.m
  0       0                       0                       0                
  6  1280   # collector.vol[8].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # collector.vol[8].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # collector.vol[8].dynBal.Hb_flow
  0 3.5714285714285714E-004       0                       0                
  6  1280   # collector.vol[8].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # collector.vol[8].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[8].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[8].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # collector.vol[8].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[8].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # collector.vol[8].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[8].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[8].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[8].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # collector.vol[8].dynBal.hStart
  0       0                       0                       0                
  6  1280   # collector.vol[8].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # collector.vol[9].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[9].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[9].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[9].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[9].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[9].dynBal.T_start
  0       1                       0                       1                
  6  1280   # collector.vol[9].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # collector.vol[9].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[9].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # collector.vol[9].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # collector.vol[9].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # collector.vol[9].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # collector.vol[9].dynBal.use_C_flow
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[9].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # collector.vol[9].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[9].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # collector.vol[9].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # collector.vol[9].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[9].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # collector.vol[9].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # collector.vol[9].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # collector.vol[9].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # collector.vol[9].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # collector.vol[9].dynBal.U
  0       0                       0                       0                
  3  1280   # collector.vol[9].dynBal.der(U)
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[9].dynBal.m
  0       0                       0                       0                
  6  1280   # collector.vol[9].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # collector.vol[9].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # collector.vol[9].dynBal.Hb_flow
  0 3.5714285714285714E-004       0                       0                
  6  1280   # collector.vol[9].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # collector.vol[9].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[9].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[9].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # collector.vol[9].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[9].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # collector.vol[9].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[9].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[9].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[9].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # collector.vol[9].dynBal.hStart
  0       0                       0                       0                
  6  1280   # collector.vol[9].dynBal.mWat_flow_internal
  0       1                       1                       4                
  6  1282   # collector.vol[10].dynBal.energyDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[10].dynBal.massDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[10].dynBal.substanceDynamics
  0       1                       1                       4                
  6  1282   # collector.vol[10].dynBal.traceDynamics
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[10].dynBal.p_start
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[10].dynBal.T_start
  0       1                       0                       1                
  6  1280   # collector.vol[10].dynBal.X_start[1]
  0       1                       1                 1.0000000000000000E+100
  6  1280   # collector.vol[10].dynBal.mSenFac
  0       0                       0                       0                
  6   769   # collector.vol[10].dynBal.initialize_p
  0       1                       0                       0                
  6  1281   # collector.vol[10].dynBal.simplify_mWat_flow
  0       2                       0                       0                
  6  1282   # collector.vol[10].dynBal.nPorts
  0       0                       0                       0                
  6  1281   # collector.vol[10].dynBal.use_mWat_flow
  0       0                       0                       0                
  6  1281   # collector.vol[10].dynBal.use_C_flow
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[10].dynBal.mOut
  0     300                       1                   10000                
  6  1280   # collector.vol[10].dynBal.medium.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[10].dynBal.medium.d
  0       1                       0                       1                
  6  1280   # collector.vol[10].dynBal.medium.X[1]
  0       0                       0                       0                
  6  1280   # collector.vol[10].dynBal.medium.R
  0 1.8015268000000001E-002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[10].dynBal.medium.MM
  0       0                       0                       0                
  6  1281   # collector.vol[10].dynBal.medium.preferredMediumStates
  0       1                       0                       0                
  6  1281   # collector.vol[10].dynBal.medium.standardOrderComponents
  0       0                       0                       0                
  6  1280   # collector.vol[10].dynBal.medium.T_degC
  0       0                       0                       0                
  6  1280   # collector.vol[10].dynBal.medium.p_bar
 -1       0                       0                       0                
  2  1296   # collector.vol[10].dynBal.U
  0       0                       0                       0                
  3  1280   # collector.vol[10].dynBal.der(U)
  0 3.5556642857142856E-001       0                 1.0000000000000000E+100
  6  1280   # collector.vol[10].dynBal.m
  0       0                       0                       0                
  6  1280   # collector.vol[10].dynBal.der(m)
  0       0                       0                       0                
  6  1280   # collector.vol[10].dynBal.mb_flow
  0       0                       0                       0                
  6  1280   # collector.vol[10].dynBal.Hb_flow
  0 3.5714285714285714E-004       0                       0                
  6  1280   # collector.vol[10].dynBal.fluidVolume
  0       0                       0                       0                
  6  1280   # collector.vol[10].dynBal.CSen
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[10].dynBal.ports_H_flow[1]
  0       0                 -1.0000000000000000E+008 1.0000000000000000E+008
  6  1280   # collector.vol[10].dynBal.ports_H_flow[2]
  0    4184                       0                       0                
  6  1280   # collector.vol[10].dynBal.cp_default
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[10].dynBal.rho_start
  0       0                       0                       0                
  6  1281   # collector.vol[10].dynBal.computeCSen
  0 3.0000000000000000E+005       0                 1.0000000000000000E+008
  6  1280   # collector.vol[10].dynBal.state_default.p
  0 2.9314999999999998E+002       1                   10000                
  6  1280   # collector.vol[10].dynBal.state_default.T
  0 9.9558600000000001E+002       0                 1.0000000000000000E+100
  6  1280   # collector.vol[10].dynBal.rho_default
  0       0                       0                       0                
  6  1280   # collector.vol[10].dynBal.hStart
  0       0                       0                       0                
  6  1280   # collector.vol[10].dynBal.mWat_flow_internal
  0 -1.5344934783534145E+000       0                       0                
  6   260   # weaDat.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # weaDat.weaBus.lat
  0 2.8814999999999998E+002 2.7314999999999998E+002 3.7314999999999998E+002
  4   260   # weaBus.TDryBul
  0       0                       0                       0                
  4   260   # weaBus.TBlaSky
  0 7.3268921998721959E-001       0                       0                
  6  1284   # HDifTilColl.incAng.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6  1284   # HDifTilColl.incAng.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # HDifTilColl.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6   260   # HDifTilColl.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6  1284   # HDifTilRoof[1].incAng.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6  1284   # HDifTilRoof[1].incAng.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # HDifTilRoof[1].weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6   260   # HDifTilRoof[1].weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6  1284   # HDifTil[1].incAng.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6  1284   # HDifTil[1].incAng.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # HDifTil[1].weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6   260   # HDifTil[1].weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6  1284   # HDifTil[2].incAng.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6  1284   # HDifTil[2].incAng.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # HDifTil[2].weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6   260   # HDifTil[2].weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6  1284   # HDifTil[3].incAng.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6  1284   # HDifTil[3].incAng.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # HDifTil[3].weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6   260   # HDifTil[3].weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6  1284   # HDifTil[4].incAng.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6  1284   # HDifTil[4].incAng.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # HDifTil[4].weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6   260   # HDifTil[4].weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6  1284   # HDirTilColl.incAng.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6  1284   # HDirTilColl.incAng.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # HDirTilColl.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6   260   # HDirTilColl.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6  1284   # HDirTilRoof[1].incAng.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6  1284   # HDirTilRoof[1].incAng.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # HDirTilRoof[1].weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6   260   # HDirTilRoof[1].weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6  1284   # HDirTil[1].incAng.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6  1284   # HDirTil[1].incAng.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # HDirTil[1].weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6   260   # HDirTil[1].weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6  1284   # HDirTil[2].incAng.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6  1284   # HDirTil[2].incAng.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # HDirTil[2].weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6   260   # HDirTil[2].weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6  1284   # HDirTil[3].incAng.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6  1284   # HDirTil[3].incAng.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # HDirTil[3].weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6   260   # HDirTil[3].weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6  1284   # HDirTil[4].incAng.weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6  1284   # HDirTil[4].incAng.weaBus.lon
  0 7.3268921998721959E-001       0                       0                
  6   260   # HDirTil[4].weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  6   260   # HDirTil[4].weaBus.lon
  0       0                       0                       0                
  4   260   # weaBus.HDifHor
  0       0                       0                       0                
  4   260   # weaBus.HDirNor
  0       0                       0                       0                
  4   260   # weaBus.HGloHor
  0       0                       0                 1.0000000000000000E+100
  4   260   # weaBus.HHorIR
  0       0                       0                       0                
  4   260   # weaBus.TDewPoi
  0       0                       0                       0                
  4   260   # weaBus.celHei
  0       0                       0                       0                
  4   260   # weaBus.cloTim
  0 7.3268921998721959E-001       0                       0                
  4   260   # weaBus.lat
  0 -1.5344934783534145E+000       0                       0                
  4   260   # weaBus.lon
  0       0                       0                       1                
  4   260   # weaBus.nOpa
  0       0                       0                       1                
  4   260   # weaBus.nTot
  0       0                       0                       0                
  4   260   # weaBus.pAtm
  0       0                       0                       0                
  4   260   # weaBus.relHum
  0       0                       0                       0                
  4   260   # weaBus.solAlt
  0       0                       0                       0                
  4   260   # weaBus.solDec
  0       0                       0                       0                
  4   260   # weaBus.solHouAng
  0       0                       0                       0                
  4   260   # weaBus.solTim
  0       0                       0                       0                
  4   260   # weaBus.solZen
  0       0                       0                       0                
  4   260   # weaBus.winDir
  0       0                       0                       0                
  4   260   # weaBus.winSpe
  0       0                       0                       0                
  4   256   # CPUtime
  0       0                       0                       0                
  4   256   # EventCounter


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, no special action takes place (default setting).
#
# - If there are only FIXED and FREE variables and the number of
#   FREE parameters, states and inputs is IDENTICAL to the number of
#   FIXED state derivatives, outputs and auxiliary variables, a non-linear
#   equation is solved to determine a consistent set of initial conditions.
#
# - In all other cases the following optimization problem is solved:
#      min( sum( weight(i)*( (value(i) - DESIRED(i))/scale(i) )^2 ) )
#   under the constraint that the differential equation is fulfilled
#   at the initial time. In most cases weight(i)=1 is sufficient, due
#   to the automatic scaling (if DESIRED(i) is not close to zero,
#   scale(i) = DESIRED(i). Otherwise, the scaling is based on the
#   nominal value (and maybe minimum and maximum values given in 
#   column 3 and 4). If these values are zero, scale(i)=1 is used).
#
char initialDescription(5525,214)




[m3]
[m2]
[m]
[a]
[Euro/a]
[a]
[Euro/a]
[Euro/kWh]
[Euro/a]
[a]
[Euro/a]
[-]
[Euro/a]
[J]
[W]
[J]
[W]
[-]
[Euro/a]
[Euro/a]
[a]
[s]
[J]
[W]
[J]
[W]
[-]
[kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
Volume of liquid stored in the vessel at the start of the simulation [m3]
Constant pressure of the expansion vessel [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass of liquid in the vessel [kg]
der(Mass of liquid in the vessel) [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute start and guess values [kg/m3|g/cm3]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
Number of volume segments [:#(type=Integer)]
Thickness of insulation [m]
Heat conductivity of insulation [W/(m.K)]
Pipe diameter (without insulation) [m]
Length of the pipe [m]
Reynolds number where transition to turbulent starts [1]
= true to use one heat port for each segment of the pipe, false to use a single heat port for the entire pipe [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Default value for mass fractions of medium (for initialization) [kg/kg]
Set to true to specify hydraulic diameter [:#(type=Boolean)]
Hydraulic diameter [m]
Reynolds number where transition to turbulent starts
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Number of collected heat flows [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Pipe volume [m3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
[kg/m3|g/cm3]
Dynamic viscosity at nominal condition [Pa.s]
Velocity at m_flow_nominal (used to compute default diameter) [m/s]
Absolute roughness of pipe, with a default for a smooth steel pipe (dummy if use_roughness = false) [m]
Pressure loss of a straight pipe at m_flow_nominal [Pa|bar]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
Maximum heat flow rate for heating (positive) [W]
Maximum heat flow rate for cooling (negative) [W]
Time constant at nominal flow rate (used if energyDynamics <> Modelica.Fluid.Types.Dynamics.SteadyState) [s]
Initial or guess value of set point [K|degC]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
= true, use homotopy method [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Default value for mass fractions of medium (for initialization) [kg/kg]
Set to true to specify hydraulic diameter [:#(type=Boolean)]
Hydraulic diameter [m]
Reynolds number where transition to turbulent starts
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Guess value of dp = port_a.p - port_b.p [Pa|Pa]
Guess value of m_flow = port_a.m_flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if temperatures at port_a and port_b are computed [:#(type=Boolean)]
= true, if volume flow rate at inflowing port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b (= port_a.p - port_b.p) [Pa|Pa]
Default value for mass fractions of medium (for initialization) [kg/kg]
Maximum heat flow rate for heating (positive) [W]
Maximum heat flow rate for cooling (negative) [W]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
Time constant at nominal flow rate (used if energyDynamics <> Modelica.Fluid.Types.Dynamics.SteadyState) [s]
Initial or guess value of set point [K|degC]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Specific heat capacity at default medium state [J/(kg.K)]
Flag, true if maximum heating power is restricted [:#(type=Boolean)]
Flag, true if maximum cooling power is restricted [:#(type=Boolean)]
Small value for deltah used for regularization [J/kg]
Flag, true if the sensor is a dynamic sensor [:#(type=Boolean)]
Mass flow rate, or zero if reverse flow [kg/s]
Mass flow rate bounded away from zero [kg/s]
Set point for enthalpy leaving port_b [J/kg]
Actual enthalpy difference from port_a to port_b [J/kg]
Gain to take flow rate into account for sensor time constant
Normalized mass flow rate
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
Number of elements used in the discretization [:#(type=Integer)]
Fraction radiant heat transfer
Nominal heating power (positive for heating) [W]
Water inlet temperature at nominal condition [K|degC]
Water outlet temperature at nominal condition [K|degC]
Air temperature at nominal condition [K|degC]
Radiative temperature at nominal condition [K|degC]
Exponent for heat transfer
Water volume of radiator [m3]
Dry mass of radiator that will be lumped to water heat capacity [kg]
= true, use homotopy method [:#(type=Boolean)]
Heat input into the water due to convective heat transfer with room air [W]
Heat input into the water due to radiative heat transfer with room [W]
Port temperature [K|degC]
Port temperature [K|degC]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Specific heat capacity at nominal conditions [J/(kg.K)]
Nominal heating power of each element [W]
Nominal heating power of each element [W]
Nominal heating power of each element [W]
Nominal heating power of each element [W]
Nominal heating power of each element [W]
Water temperature in each element at nominal conditions [K|degC]
Water temperature in each element at nominal conditions [K|degC]
Water temperature in each element at nominal conditions [K|degC]
Water temperature in each element at nominal conditions [K|degC]
Water temperature in each element at nominal conditions [K|degC]
Temperature difference for radiative heat transfer at nominal conditions [K,]
Temperature difference for radiative heat transfer at nominal conditions [K,]
Temperature difference for radiative heat transfer at nominal conditions [K,]
Temperature difference for radiative heat transfer at nominal conditions [K,]
Temperature difference for radiative heat transfer at nominal conditions [K,]
Temperature difference for convective heat transfer at nominal conditions [K,]
Temperature difference for convective heat transfer at nominal conditions [K,]
Temperature difference for convective heat transfer at nominal conditions [K,]
Temperature difference for convective heat transfer at nominal conditions [K,]
Temperature difference for convective heat transfer at nominal conditions [K,]
UA value at nominal condition for each element [W/K]
Parameter that is used to compute QEle_flow_nominal for heating or cooling mode
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Temperature difference for convective heat transfer [K,]
Temperature difference for convective heat transfer [K,]
Temperature difference for convective heat transfer [K,]
Temperature difference for convective heat transfer [K,]
Temperature difference for convective heat transfer [K,]
Temperature difference for radiative heat transfer [K,]
Temperature difference for radiative heat transfer [K,]
Temperature difference for radiative heat transfer [K,]
Temperature difference for radiative heat transfer [K,]
Temperature difference for radiative heat transfer [K,]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Number of inputs [:#(type=Integer)]
Connector of Real input signals
Connector of Real input signals
Connector of Real input signals
Connector of Real input signals
Connector of Real input signals
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Number of inputs [:#(type=Integer)]
Connector of Real input signals
Connector of Real input signals
Connector of Real input signals
Connector of Real input signals
Connector of Real input signals
Connector of Real output signal
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
Number of volume segments [:#(type=Integer)]
Thickness of insulation [m]
Heat conductivity of insulation [W/(m.K)]
Pipe diameter (without insulation) [m]
Length of the pipe [m]
Reynolds number where transition to turbulent starts [1]
= true to use one heat port for each segment of the pipe, false to use a single heat port for the entire pipe [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Default value for mass fractions of medium (for initialization) [kg/kg]
Set to true to specify hydraulic diameter [:#(type=Boolean)]
Hydraulic diameter [m]
Reynolds number where transition to turbulent starts
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Number of collected heat flows [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Pipe volume [m3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
[kg/m3|g/cm3]
Dynamic viscosity at nominal condition [Pa.s]
Velocity at m_flow_nominal (used to compute default diameter) [m/s]
Absolute roughness of pipe, with a default for a smooth steel pipe (dummy if use_roughness = false) [m]
Pressure loss of a straight pipe at m_flow_nominal [Pa|bar]
Constant output value
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
Number of volume segments [:#(type=Integer)]
Thickness of insulation [m]
Heat conductivity of insulation [W/(m.K)]
Pipe diameter (without insulation) [m]
Length of the pipe [m]
Reynolds number where transition to turbulent starts [1]
= true to use one heat port for each segment of the pipe, false to use a single heat port for the entire pipe [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Default value for mass fractions of medium (for initialization) [kg/kg]
Set to true to specify hydraulic diameter [:#(type=Boolean)]
Hydraulic diameter [m]
Reynolds number where transition to turbulent starts
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Number of collected heat flows [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Pipe volume [m3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
[kg/m3|g/cm3]
Dynamic viscosity at nominal condition [Pa.s]
Velocity at m_flow_nominal (used to compute default diameter) [m/s]
Absolute roughness of pipe, with a default for a smooth steel pipe (dummy if use_roughness = false) [m]
Pressure loss of a straight pipe at m_flow_nominal [Pa|bar]
Valve position, starting with 0 and ending with 1
Valve position, starting with 0 and ending with 1
Valve position, starting with 0 and ending with 1
Valve position, starting with 0 and ending with 1
Valve position, starting with 0 and ending with 1
Valve position, starting with 0 and ending with 1
Normalized volume flow rates for the positions y
Normalized volume flow rates for the positions y
Normalized volume flow rates for the positions y
Normalized volume flow rates for the positions y
Normalized volume flow rates for the positions y
Normalized volume flow rates for the positions y
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Default value for mass fractions of medium (for initialization) [kg/kg]
Selection of flow coefficient [:#(type=Annex60.Fluid.Types.CvTypes)]
Kv (metric) flow coefficient [m3/h/(bar)^(1/2)] []
Cv (US) flow coefficient [USG/min/(psi)^(1/2)] []
Av (metric) flow coefficient [m2]
Fraction of nominal flow rate where linearization starts, if y=1
Nominal pressure drop of fully open valve, used if CvData=Annex60.Fluid.Types.CvTypes.OpPoint [Pa|Pa]
Inlet density for which valve coefficients are defined [kg/m3|g/cm3]
Flow coefficient for fully open valve in SI units, Kv=m_flow/sqrt(dp) [kg/s/(Pa)^(1/2)] []
= true, if opening is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of an opening step) [s]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of output
Actuator position (0: closed, 1: open)
Pressure drop of pipe and other resistances that are in series [Pa|Pa]
Valve leakage, l=Kv(y=0)/Kv(y=1)
Ratio actual to nominal mass flow rate of valve, phi=Kv(y)/Kv(y=1)
Flow coefficient of fixed resistance that may be in series with valve, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Flow coefficient of valve, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2).
Valve position, starting with 0 and ending with 1
Valve position, starting with 0 and ending with 1
Valve position, starting with 0 and ending with 1
Valve position, starting with 0 and ending with 1
Valve position, starting with 0 and ending with 1
Valve position, starting with 0 and ending with 1
Normalized volume flow rates for the positions y
Normalized volume flow rates for the positions y
Normalized volume flow rates for the positions y
Normalized volume flow rates for the positions y
Normalized volume flow rates for the positions y
Normalized volume flow rates for the positions y
Number of inputs (= number of outputs) [:#(type=Integer)]
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
Table matrix (grid = first column; e.g., table=[0,2])
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
[:#(type=Integer)]
= 1, if table was successfully read from file
Control error (set point - measurement)
Type of controller [:#(type=Modelica.Blocks.Types.SimpleController)]
Gain of controller [1]
Time constant of Integrator block [s]
Time constant of Derivative block [s]
Upper limit of output
Lower limit of output
Set-point weight for Proportional block (0..1)
Set-point weight for Derivative block (0..1)
Ni*Ti is time constant of anti-windup compensation
The higher Nd, the more ideal the derivative block
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.InitPID)]
= false, if limits are ignored during initialization [:#(type=Boolean)]
Initial or guess value value for integrator output (= integrator state)
Initial or guess value for state of derivative block
Initial value of output
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
[s]
Connector of Real output signal
Gain of upper input
Gain of lower input
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Input signal connector
Output signal connector
Gain of upper input
Gain of middle input
Gain of lower input
Upper limits of input signals
Lower limits of input signals
= true, if strict limits with noEvent(..) [:#(type=Boolean)]
Has no longer an effect and is only kept for backwards compatibility (the implementation uses now the homotopy operator) [:#(type=Boolean)]
[:#(type=Boolean)]
[:#(type=Boolean)]
Constant output value
Constant output value
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Use power data instead of motor efficiency [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Nominal rotational speed for flow characteristic [1]
Normalized speed set point, used if inputType = Annex60.Fluid.Types.InputType.Constant [1]
Vector of normalized speed set points, used if inputType = Annex60.Fluid.Types.InputType.Stages [1]
Nominal rotational speed for flow characteristic [rev/min]
Speed set point, used if inputType = Annex60.Fluid.Types.InputType.Constant [rev/min]
Vector of speed set points, used if inputType = Annex60.Fluid.Types.InputType.Stages [rev/min]
= true, if default record values are being used [:#(type=Boolean)]
Control input type [:#(type=Annex60.Fluid.Types.InputType)]
Constant input set point [Pa]
Vector of input set points corresponding to stages [Pa]
= true, compute power exactly, using similarity laws. Otherwise approximate. [:#(type=Boolean)]
Set to false to avoid any power (=heat and flow work) being added to medium (may give simpler equations) [:#(type=Boolean)]
Set to true to avoid warning if m_flow_nominal and dp_nominal are used to construct the default pressure curve [:#(type=Boolean)]
Time constant of fluid volume for nominal flow, used if energy or mass balance is dynamic [s]
= true, if speed is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of the speed) [s]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of speed [1]
Actual normalised pump speed that is used for computations [1]
Electrical power consumed [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Volume flow rate [m3/s]
Pressure difference [Pa|Pa]
Global efficiency [1]
Hydraulic efficiency [1]
Motor efficiency [1]
Type of prescribed variable [:#(type=Annex60.Fluid.Movers.BaseClasses.Types.PrescribedVariable)]
Parameter that is true if speed is the controlled variables [:#(type=Boolean)]
Number of data points for pressure curve [:#(type=Integer)]
Flag, true if user specified data that contain V_flow_max [:#(type=Boolean)]
Maximum volume flow rate, used for smoothing [m3/s]
Default medium density [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Start value for outflowing enthalpy [J/kg]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Time constant at nominal flow [s]
Volume of delay element [m3]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output
Nominal value of input (used for scaling the states)
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Guess value of dp = port_a.p - port_b.p [Pa|Pa]
Guess value of m_flow = port_a.m_flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if temperatures at port_a and port_b are computed [:#(type=Boolean)]
= true, if volume flow rate at inflowing port is computed [:#(type=Boolean)]
Volume flow rate at inflowing port (positive when flow from port_a to port_b) [m3/s]
Default value for mass fractions of medium (for initialization) [kg/kg]
= false to control dp instead of m_flow [:#(type=Boolean)]
Needed to connect to conditional connector [kg/s]
= true, use homotopy method [:#(type=Boolean)]
Flag, true if the motor is cooled by the fluid stream [:#(type=Boolean)]
Factor used for setting heat input into medium to zero at very small flows [m3/s]
Heat input from fan or pump to medium [W]
Hydraulic power input (converted to flow work and heat) [W]
Heat input from fan or pump to medium [W]
Gain of upper input
Gain of lower input
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Value of Real output
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Default value for mass fractions of medium (for initialization) [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Relative pressure of port_a minus port_b [Pa|Pa]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Use power data instead of motor efficiency [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Nominal rotational speed for flow characteristic [1]
Normalized speed set point, used if inputType = Annex60.Fluid.Types.InputType.Constant [1]
Vector of normalized speed set points, used if inputType = Annex60.Fluid.Types.InputType.Stages [1]
Nominal rotational speed for flow characteristic [rev/min]
Speed set point, used if inputType = Annex60.Fluid.Types.InputType.Constant [rev/min]
Vector of speed set points, used if inputType = Annex60.Fluid.Types.InputType.Stages [rev/min]
= true, if default record values are being used [:#(type=Boolean)]
Type of prescribed variable [:#(type=Annex60.Fluid.Movers.BaseClasses.Types.PrescribedVariable)]
= true, compute power exactly, using similarity laws. Otherwise approximate. [:#(type=Boolean)]
Nominal volume flow rate, used for homotopy [m3/s]
Fluid density at medium default state [kg/m3|g/cm3]
Flag, true if user specified data that contain V_flow_max [:#(type=Boolean)]
Maximum volume flow rate, used for smoothing [m3/s]
Number of data points for pressure curve [:#(type=Integer)]
= true, use homotopy method [:#(type=Boolean)]
Mover speed (prescribed or computed) [1]
Medium density [kg/m3]
Flow work [W]
Ratio N_actual/N_nominal [1]
Ratio V_flow/V_flow_max [1]
True if speed is a prescribed variable of this block [:#(type=Boolean)]
True if pressure head is a prescribed variable of this block [:#(type=Boolean)]
Coefficients for polynomial of motor efficiency vs. volume flow rate
Coefficients for polynomial of hydraulic efficiency vs. volume flow rate
Small volume flow rate [m3/s]
Small pressure [Pa|Pa]
Small value used to transition to other fan curve
Coefficients for linear approximation of pressure vs. flow rate
Coefficients for linear approximation of pressure vs. flow rate
Maximum head [Pa|Pa]
Coefficient for internal pressure drop of fan or pump [kg/(s.m4)]
Flag, used to pick the right representatio of the fan or pump pressure curve [:#(type=Integer)]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Coefficients for polynomial of power vs. flow rate
Flag used for reporting [:#(type=Boolean)]
Flag, true if user specified data that contain dpMax [:#(type=Boolean)]
Initial value of pressure raise [Pa|Pa]
Nominal pressure raise, used to normalized the filter if filteredSpeed=true,        to set default values of constantHead and heads, and         and for default pressure curve if not specified in record per [Pa|Pa]
Constant pump head, used when inputType=Constant [Pa|Pa]
Vector of head set points, used when inputType=Stages [Pa|Pa]
Gain value multiplied with input signal [1]
Constant output value
Constant output value
Fixed temperature at port [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Height of tank [m]
Fluid volume in tank [m3]
Number of fluid layers [:#(type=Integer)]
Coefficient of heat transfer outside the tank [W/(m2.K)]
Coefficient of heat transfer inside the tank [W/(m2.K)]
Thermal heat conductivity of insulation material [W/(m.K)]
Insulation thickness [m]
Wall thickness [m]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Port temperature [K|degC]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Number of layers [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Temperature difference between layers [K,]
Temperature difference between layers [K,]
Temperature difference between layers [K,]
Temperature difference between layers [K,]
Temperature difference between layers [K,]
Temperature difference between layers [K,]
Temperature difference between layers [K,]
Temperature difference between layers [K,]
Temperature difference between layers [K,]
Equivalent thermal conductance between layers [W/K]
Exponent for nEle
Set to true to add heat exchanger at the top layer [:#(type=Boolean)]
Set to true to add heat exchanger at the bottom layer [:#(type=Boolean)]
Set to true to avoid heat losses [:#(type=Boolean)]
Set to true to add aditional fluid ports connected to intermediate layers [:#(type=Boolean)]
Thermal conductance walls [W/K]
Thermal conductance top [W/K]
Thermal conductance bottom [W/K]
Inner diameter of tank [m]
Exterior diameter of tank [m]
Tank's inner cross-section area [m2]
Height of tank layer [m]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Constant thermal conductance of material [W/K]
Layer at which HX_2 is connected [:#(type=Integer)]
Constant thermal conductance of material [W/K]
Layer at which HX_1 is connected [:#(type=Integer)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
initial storage temperature [K|degC]
starting at bottom [K|degC]
starting at bottom [K|degC]
starting at bottom [K|degC]
starting at bottom [K|degC]
starting at bottom [K|degC]
starting at bottom [K|degC]
starting at bottom [K|degC]
starting at bottom [K|degC]
starting at bottom [K|degC]
starting at bottom [K|degC]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction) [kg/s]
Pressure difference between port_a and port_b [Pa|Pa]
Used to satisfy replaceable models [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction) [kg/s]
Pressure difference between port_a and port_b [Pa|Pa]
Used to satisfy replaceable models [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction) [kg/s]
Pressure difference between port_a and port_b [Pa|Pa]
Used to satisfy replaceable models [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction) [kg/s]
Pressure difference between port_a and port_b [Pa|Pa]
Used to satisfy replaceable models [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Used to satisfy replaceable models [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction) [kg/s]
Pressure difference between port_a and port_b [Pa|Pa]
Used to satisfy replaceable models [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction) [kg/s]
Pressure difference between port_a and port_b [Pa|Pa]
Used to satisfy replaceable models [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Mass flow rate from port_a to port_b (m_flow > 0 is design flow direction) [kg/s]
Pressure difference between port_a and port_b [Pa|Pa]
Used to satisfy replaceable models [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
der(Specific thermodynamic enthalpy close to the connection point if m_flow < 0) [m2/s3]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
der(Specific thermodynamic enthalpy close to the connection point if m_flow < 0) [m2/s3]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
Number of elements used in the discretization [:#(type=Integer)]
Width of the collector [m]
Height of the collector [m]
Tilt angle of the solar collector [deg|deg]
Azimuth angle of the solar collector: South=0 deg West=90 deg East=-90 deg [deg|deg]
Pressure drop at nominal mass flow rate [Pa|Pa]
Heat flow rate (positive if flowing from outside into the component) [W]
Number of collected heat flows [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Number of outputs [:#(type=Integer)]
Connector of Real input signal
Collector constant in [-] []
Collector constant in W/(m2.K)
Collector constant in W/(m2*K.2)
(fluid Volume)/(absorber area) rate [m3/m2]
Absorber area of the collector [m2]
Incidence Angle Modifier Coefficient = IncidenceAngleModifier at 50 degree
Active heat capacity of the solid part of the collector per square meter of absorber surface in J/m2K [J/(m2.K)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Default value for mass fractions of medium (for initialization) [kg/kg]
Set to true to specify hydraulic diameter [:#(type=Boolean)]
Hydraulic diameter [m]
Reynolds number where transition to turbulent starts
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
= true, use homotopy method [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
= true, use A from collector data; false A = height * width [:#(type=Boolean)]
Volume of the fluid [m3]
[J/K]
= true, use input for geometric shading coefficient GSC [:#(type=Boolean)]
Constant shading coefficient (if use_GSC_in = true)
Absorber area of the collector [m2]
IncidenceAngleModifier
Total solar radiation on collector's absorber surfcace [W/m2]
Value of Real output
Value of Real output
Value of Real output
Value of Real output
Value of Real output
Value of Real output
Value of Real output
Value of Real output
Value of Real output
Value of Real output
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
[W]
Heat flow rate (positive if flowing from outside into the component) [W]
Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Number of inputs [:#(type=Integer)]
Optional: sum coefficients
Optional: sum coefficients
Incidence Angle Modifier Coefficient: Value of IAM at 50 degree
Collector constant in [-] using absorber area as a reference
Collector constant in W/(m2.K) using absorber area as a reference
Collector constant in W/(m2*K.2) using absorber area as a reference



Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Use power data instead of motor efficiency [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Nominal rotational speed for flow characteristic [1]
Normalized speed set point, used if inputType = Annex60.Fluid.Types.InputType.Constant [1]
Vector of normalized speed set points, used if inputType = Annex60.Fluid.Types.InputType.Stages [1]
Nominal rotational speed for flow characteristic [rev/min]
Speed set point, used if inputType = Annex60.Fluid.Types.InputType.Constant [rev/min]
Vector of speed set points, used if inputType = Annex60.Fluid.Types.InputType.Stages [rev/min]
= true, if default record values are being used [:#(type=Boolean)]
Control input type [:#(type=Annex60.Fluid.Types.InputType)]
Constant input set point [kg/s]
Vector of input set points corresponding to stages [kg/s]
= true, compute power exactly, using similarity laws. Otherwise approximate. [:#(type=Boolean)]
Set to false to avoid any power (=heat and flow work) being added to medium (may give simpler equations) [:#(type=Boolean)]
Set to true to avoid warning if m_flow_nominal and dp_nominal are used to construct the default pressure curve [:#(type=Boolean)]
Time constant of fluid volume for nominal flow, used if energy or mass balance is dynamic [s]
= true, if speed is filtered with a 2nd order CriticalDamping filter [:#(type=Boolean)]
Rise time of the filter (time to reach 99.6 % of the speed) [s]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial value of speed [1]
Actual normalised pump speed that is used for computations [1]
Electrical power consumed [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Volume flow rate [m3/s]
Pressure difference [Pa|Pa]
Global efficiency [1]
Hydraulic efficiency [1]
Motor efficiency [1]
Type of prescribed variable [:#(type=Annex60.Fluid.Movers.BaseClasses.Types.PrescribedVariable)]
Parameter that is true if speed is the controlled variables [:#(type=Boolean)]
Number of data points for pressure curve [:#(type=Integer)]
Flag, true if user specified data that contain V_flow_max [:#(type=Boolean)]
Maximum volume flow rate, used for smoothing [m3/s]
Default medium density [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Start value for outflowing enthalpy [J/kg]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Heat flow rate (positive if flowing from outside into the component) [W]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Time constant at nominal flow [s]
Volume of delay element [m3]
Analog filter characteristics (CriticalDamping/Bessel/Butterworth/ChebyshevI) [:#(type=Modelica.Blocks.Types.AnalogFilter)]
Type of filter (LowPass/HighPass/BandPass/BandStop) [:#(type=Modelica.Blocks.Types.FilterType)]
Order of filter [:#(type=Integer)]
Cut-off frequency [Hz]
Gain (= amplitude of frequency response at zero frequency)
Pass band ripple for Chebyshev filter (otherwise not used); > 0 required [dB]
Band of band pass/stop filter is f_min (A=-3db*gain) .. f_cut (A=-3db*gain) [Hz]
= true, if amplitude at f_cut = -3db, otherwise unmodified filter [:#(type=Boolean)]
Type of initialization (no init/steady state/initial state/initial output) [:#(type=Modelica.Blocks.Types.Init)]
[:#(type=Integer)]
Initial or guess values of states
Initial or guess values of states
Initial value of output
Nominal value of input (used for scaling the states)
Filter states
der(Filter states)
Filter states
der(Filter states)
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]





= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Guess value of dp = port_a.p - port_b.p [Pa|Pa]
Guess value of m_flow = port_a.m_flow [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if temperatures at port_a and port_b are computed [:#(type=Boolean)]
= true, if volume flow rate at inflowing port is computed [:#(type=Boolean)]
Volume flow rate at inflowing port (positive when flow from port_a to port_b) [m3/s]
Default value for mass fractions of medium (for initialization) [kg/kg]
= false to control dp instead of m_flow [:#(type=Boolean)]
Needed to connect to conditional connector [Pa]
= true, use homotopy method [:#(type=Boolean)]
Flag, true if the motor is cooled by the fluid stream [:#(type=Boolean)]
Factor used for setting heat input into medium to zero at very small flows [m3/s]
Heat input from fan or pump to medium [W]
Hydraulic power input (converted to flow work and heat) [W]
Heat input from fan or pump to medium [W]
Gain of upper input
Gain of lower input
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Value of Real output
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Nominal mass flow rate, used for regularization near zero flow [kg/s]
For bi-directional flow, temperature is regularized in the region |m_flow| < m_flow_small (m_flow_small > 0 required) [kg/s]
Default value for mass fractions of medium (for initialization) [kg/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Relative pressure of port_a minus port_b [Pa|Pa]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Use power data instead of motor efficiency [:#(type=Boolean)]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volumetric flow rate at user-selected operating points [m3/s]
Fan or pump efficiency at these flow rates [1]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump electrical power at these flow rates [W]
If true, then motor heat is added to fluid stream [:#(type=Boolean)]
Nominal rotational speed for flow characteristic [1]
Normalized speed set point, used if inputType = Annex60.Fluid.Types.InputType.Constant [1]
Vector of normalized speed set points, used if inputType = Annex60.Fluid.Types.InputType.Stages [1]
Nominal rotational speed for flow characteristic [rev/min]
Speed set point, used if inputType = Annex60.Fluid.Types.InputType.Constant [rev/min]
Vector of speed set points, used if inputType = Annex60.Fluid.Types.InputType.Stages [rev/min]
= true, if default record values are being used [:#(type=Boolean)]
Type of prescribed variable [:#(type=Annex60.Fluid.Movers.BaseClasses.Types.PrescribedVariable)]
= true, compute power exactly, using similarity laws. Otherwise approximate. [:#(type=Boolean)]
Nominal volume flow rate, used for homotopy [m3/s]
Fluid density at medium default state [kg/m3|g/cm3]
Flag, true if user specified data that contain V_flow_max [:#(type=Boolean)]
Maximum volume flow rate, used for smoothing [m3/s]
Number of data points for pressure curve [:#(type=Integer)]
= true, use homotopy method [:#(type=Boolean)]
Mover speed (prescribed or computed) [1]
Medium density [kg/m3]
Flow work [W]
Ratio N_actual/N_nominal [1]
Ratio V_flow/V_flow_max [1]
True if speed is a prescribed variable of this block [:#(type=Boolean)]
True if pressure head is a prescribed variable of this block [:#(type=Boolean)]
Coefficients for polynomial of motor efficiency vs. volume flow rate
Coefficients for polynomial of hydraulic efficiency vs. volume flow rate
Small volume flow rate [m3/s]
Small pressure [Pa|Pa]
Small value used to transition to other fan curve
Coefficients for linear approximation of pressure vs. flow rate
Coefficients for linear approximation of pressure vs. flow rate
Maximum head [Pa|Pa]
Coefficient for internal pressure drop of fan or pump [kg/(s.m4)]
Flag, used to pick the right representatio of the fan or pump pressure curve [:#(type=Integer)]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Number of elements in each array [:#(type=Integer)]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Volume flow rate at user-selected operating points [m3/s]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Fan or pump total pressure at these flow rates [Pa|Pa]
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Derivatives of flow rate vs. pressure at the support points
Coefficients for polynomial of power vs. flow rate
Flag used for reporting [:#(type=Boolean)]
Flag, true if user specified data that contain dpMax [:#(type=Boolean)]
Nominal pressure raise, used for default pressure curve if not specified in record per [Pa|Pa]
Initial value of mass flow rate [kg/s]
Constant pump mass flow rate, used when inputType=Constant [kg/s]
Vector of mass flow rate set points, used when inputType=Stage [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
Number of volume segments [:#(type=Integer)]
Thickness of insulation [m]
Heat conductivity of insulation [W/(m.K)]
Pipe diameter (without insulation) [m]
Length of the pipe [m]
Reynolds number where transition to turbulent starts [1]
= true to use one heat port for each segment of the pipe, false to use a single heat port for the entire pipe [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Default value for mass fractions of medium (for initialization) [kg/kg]
Set to true to specify hydraulic diameter [:#(type=Boolean)]
Hydraulic diameter [m]
Reynolds number where transition to turbulent starts
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Number of collected heat flows [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Pipe volume [m3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
[kg/m3|g/cm3]
Dynamic viscosity at nominal condition [Pa.s]
Velocity at m_flow_nominal (used to compute default diameter) [m/s]
Absolute roughness of pipe, with a default for a smooth steel pipe (dummy if use_roughness = false) [m]
Pressure loss of a straight pipe at m_flow_nominal [Pa|bar]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
=true, compute flow resistance. Set to false to assume no friction [:#(type=Boolean)]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure difference [Pa|Pa]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Fraction of nominal flow rate where flow transitions to laminar
Number of volume segments [:#(type=Integer)]
Thickness of insulation [m]
Heat conductivity of insulation [W/(m.K)]
Pipe diameter (without insulation) [m]
Length of the pipe [m]
Reynolds number where transition to turbulent starts [1]
= true to use one heat port for each segment of the pipe, false to use a single heat port for the entire pipe [:#(type=Boolean)]
= true to allow flow reversal, false restricts to design direction (port_a -> port_b) [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Small mass flow rate for regularization of zero flow [kg/s]
= true, if actual temperature at port is computed [:#(type=Boolean)]
Pressure difference between port_a and port_b [Pa|Pa]
Temperature of medium [K|degC]
Temperature of medium [K|degC]
= true, use m_flow = f(dp) else dp = f(m_flow) [:#(type=Boolean)]
Pressure drop at nominal mass flow rate [Pa|Pa]
= true, use homotopy method [:#(type=Boolean)]
= true, use linear relation between m_flow and dp for any flow rate [:#(type=Boolean)]
Turbulent flow if |m_flow| >= m_flow_turbulent [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Dynamic viscosity, used to compute transition to turbulent flow regime [Pa.s]
Absolute value of nominal flow rate [kg/s]
Absolute value of nominal pressure difference [Pa|Pa]
Default value for mass fractions of medium (for initialization) [kg/kg]
Set to true to specify hydraulic diameter [:#(type=Boolean)]
Hydraulic diameter [m]
Reynolds number where transition to turbulent starts
Fraction of nominal mass flow rate where transition to turbulent occurs
Flow coefficient, k=m_flow/sqrt(dp), with unit=(kg.m)^(1/2)
Flag to enable/disable computation of flow resistance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Number of collected heat flows [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Pipe volume [m3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
[kg/m3|g/cm3]
Dynamic viscosity at nominal condition [Pa.s]
Velocity at m_flow_nominal (used to compute default diameter) [m/s]
Absolute roughness of pipe, with a default for a smooth steel pipe (dummy if use_roughness = false) [m]
Pressure loss of a straight pipe at m_flow_nominal [Pa|bar]
Constant output value
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
Volume of liquid stored in the vessel at the start of the simulation [m3]
Constant pressure of the expansion vessel [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass of liquid in the vessel [kg]
der(Mass of liquid in the vessel) [kg/s]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute start and guess values [kg/m3|g/cm3]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
if y=true and u<=uLow, switch to y=false
if y=false and u>=uHigh, switch to y=true
Value of pre(y) at initial time [:#(type=Boolean)]

[:#(type=Boolean)]
Connector of Boolean input signal [:#(type=Boolean)]
Connector of Real output signal
Constant output value
Gain of upper input
Gain of lower input
Surface tilt [rad|deg]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Surface tilt [rad|deg]
Solar declination angle [rad|deg]
Constant
Constant
Solar hour angle [rad|deg]
Latitude [rad|deg]
Surface azimuth. azi=-90 degree if surface outward unit normal points toward east; azi=0 if it points toward south [rad|degree]
Surface tilt. til=90 degree for walls; til=0 for ceilings; til=180 for roof [rad|degree]
Cosine of declination angle
Sine of declination angle
Cosine of solar hour angle
Sine of solar hour angle
Cosine of latitude
Sine of latitude
Surface tilt [rad|deg]
Ground reflectance [1]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Output contribution of diffuse irradiation from sky [:#(type=Boolean)]
Output contribution of diffuse irradiation from ground [:#(type=Boolean)]
Connector of Real input signal 1
Connector of Real input signal 2
Gain of upper input
Gain of lower input
Ground reflectance
Surface tilt angle [rad|deg]
Brightening Coeffcient F1
Brightening Coeffcient F2
Solar incidence angle on the surface [rad|degree]


Lower bound for b
Sky clearness. skyCle=1: overast sky; skyCle=8: clear sky
Constant factor
Intermediate variable
Sky brightness [0,1] []





















Relative air mass
Zenith angle bounded from above by 90 degree
Zenith angle in degree
Latitude [rad|deg]
Surface azimuth [rad|deg]
Surface tilt [rad|deg]
Solar declination angle [rad|deg]
Constant
Constant
Solar hour angle [rad|deg]
Latitude [rad|deg]
Surface azimuth. azi=-90 degree if surface outward unit normal points toward east; azi=0 if it points toward south [rad|degree]
Surface tilt. til=90 degree for walls; til=0 for ceilings; til=180 for roof [rad|degree]
Cosine of declination angle
Sine of declination angle
Cosine of solar hour angle
Sine of solar hour angle
Cosine of latitude
Sine of latitude
If true, then this model computes the wet bulb temperature [:#(type=Boolean)]
Atmospheric pressure [:#(type=Annex60.BoundaryConditions.Types.DataSource)]
Atmospheric pressure (used if pAtmSou=Parameter) [Pa|bar]
Ceiling height [:#(type=Annex60.BoundaryConditions.Types.DataSource)]
Ceiling height (used if ceiHei=Parameter) [m|m]
Total sky cover [:#(type=Annex60.BoundaryConditions.Types.DataSource)]
Total sky cover (used if totSkyCov=Parameter). Use 0 <= totSkyCov <= 1 [1]
Opaque sky cover [:#(type=Annex60.BoundaryConditions.Types.DataSource)]
Opaque sky cover (used if opaSkyCov=Parameter). Use 0 <= opaSkyCov <= 1 [1]
Dry bulb temperature [:#(type=Annex60.BoundaryConditions.Types.DataSource)]
Dry bulb temperature (used if TDryBul=Parameter) [K|degC]
Dew point temperature [:#(type=Annex60.BoundaryConditions.Types.DataSource)]
Dew point temperature (used if TDewPoi=Parameter) [K|degC]
Black-body sky temperature [:#(type=Annex60.BoundaryConditions.Types.DataSource)]
Black-body sky temperature (used if TBlaSkySou=Parameter) [K|degC]
Relative humidity [:#(type=Annex60.BoundaryConditions.Types.DataSource)]
Relative humidity (used if relHum=Parameter) [1]
Wind speed [:#(type=Annex60.BoundaryConditions.Types.DataSource)]
Wind speed (used if winSpe=Parameter) [m/s]
Wind direction [:#(type=Annex60.BoundaryConditions.Types.DataSource)]
Wind direction (used if winDir=Parameter) [rad|deg]
Infrared horizontal radiation [:#(type=Annex60.BoundaryConditions.Types.DataSource)]
Infrared horizontal radiation (used if HInfHorSou=Parameter) [W/m2]
Global, diffuse, and direct normal radiation [:#(type=Annex60.BoundaryConditions.Types.RadiationDataSource)]
Longitude [rad|deg]
Latitude [rad|deg]
Time zone [s|h]
Computation of black-body sky temperature [:#(type=Annex60.BoundaryConditions.Types.SkyTemperatureCalculation)]
Small value to avoid division by 0
Number of outputs [:#(type=Integer)]
Connector of Real input signal
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
Connector of Real output signals
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
[:#(type=Integer)]
= 1, if table was successfully read from file
Minimum allowed temperature [K|degC]
Maximum allowed temperature [K|degC]
Minimum allowed temperature [K|degC]
Maximum allowed temperature [K|degC]
Minimum allowed pressure [Pa|bar]
Maximum allowed pressure [Pa|bar]
Smoothing parameter
Lower bound
Upper bound
Smoothing parameter
Lower bound
Upper bound
Minimum value for radiation [W/m2]
Minimum value for radiation [W/m2]
Minimum value for radiation [W/m2]
Minimum allowed ceiling height [m]
Minimum allowed wind speed [m/s]
Minimum value for radiation [W/m2]
Smoothing parameter
Lower bound
Upper bound
Computation of black-body sky temperature [:#(type=Annex60.BoundaryConditions.Types.SkyTemperatureCalculation)]
Dewpoint temperature [K|degC]
Black-body absorptivity of sky [1]
Opaque sky cover in [0, 10] []
Connector of Real input signal 1
Connector of Real output signal
Gain of upper input
Gain of lower input
Constant output value
Connector of Real output signal
Time zone [s|h]
Longitude [rad|deg]
Local civil time [s]
Difference between local and clock time [s]
Number of outputs [:#(type=Integer)]
Connector of Real input signal
= true, if table is defined on file or in function usertab [:#(type=Boolean)]
= true, if info message that file is loading is to be printed [:#(type=Boolean)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Columns of table to be interpolated [:#(type=Integer)]
Smoothness of table interpolation [:#(type=Modelica.Blocks.Types.Smoothness)]
[:#(type=Integer)]
= 1, if table was successfully read from file
Number of seconds in a year [s]
Start time of period [s]
Number of seconds in a year [s]
Start time of period [s]
Equation of time [s|min]
Intermediate variable
Needed to connect to conditional connector [m|m]
Needed to connect to conditional connector
Needed to connect to conditional connector
Needed to connect to conditional connector
Needed to connect to conditional connector [m/s]
Needed to connect to conditional connector [rad|deg]
Needed to connect to conditional connector [W/m2]
Needed to connect to conditional connector [W/m2]
Needed to connect to conditional connector [W/m2]
Needed to connect to conditional connector [W/m2]
1 hour [s]
1 hour [s]
1 hour [s]
1 hour [s]
Smoothing parameter
Lower bound
Upper bound
Latitude [rad|deg]
Constant
Constant
Latitude [rad|deg]
Latitude of the location [rad|deg]
Longitude [rad|deg]
Longitude of the location [rad|deg]
Gain value multiplied with input signal [1]
Gain value multiplied with input signal [1]
Minimum allowed temperature [K|degC]
Maximum allowed temperature [K|degC]
Surface tilt [rad|deg]
Radiation per unit area [W/m2]
Ground reflectance [1]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Output contribution of diffuse irradiation from sky [:#(type=Boolean)]
Output contribution of diffuse irradiation from ground [:#(type=Boolean)]
Gain of upper input
Gain of lower input
Ground reflectance
Surface tilt angle [rad|deg]
Brightening Coeffcient F1
Brightening Coeffcient F2
Solar incidence angle on the surface [rad|degree]


Lower bound for b
Sky clearness. skyCle=1: overast sky; skyCle=8: clear sky
Constant factor
Intermediate variable
Sky brightness [0,1] []





















Relative air mass
Zenith angle bounded from above by 90 degree
Zenith angle in degree
Latitude [rad|deg]
Surface azimuth [rad|deg]
Surface tilt [rad|deg]
Solar declination angle [rad|deg]
Constant
Constant
Solar hour angle [rad|deg]
Latitude [rad|deg]
Surface azimuth. azi=-90 degree if surface outward unit normal points toward east; azi=0 if it points toward south [rad|degree]
Surface tilt. til=90 degree for walls; til=0 for ceilings; til=180 for roof [rad|degree]
Cosine of declination angle
Sine of declination angle
Cosine of solar hour angle
Sine of solar hour angle
Cosine of latitude
Sine of latitude
Surface tilt [rad|deg]
Radiation per unit area [W/m2]
Ground reflectance [1]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Output contribution of diffuse irradiation from sky [:#(type=Boolean)]
Output contribution of diffuse irradiation from ground [:#(type=Boolean)]
Gain of upper input
Gain of lower input
Ground reflectance
Surface tilt angle [rad|deg]
Brightening Coeffcient F1
Brightening Coeffcient F2
Solar incidence angle on the surface [rad|degree]


Lower bound for b
Sky clearness. skyCle=1: overast sky; skyCle=8: clear sky
Constant factor
Intermediate variable
Sky brightness [0,1] []





















Relative air mass
Zenith angle bounded from above by 90 degree
Zenith angle in degree
Latitude [rad|deg]
Surface azimuth [rad|deg]
Surface tilt [rad|deg]
Solar declination angle [rad|deg]
Constant
Constant
Solar hour angle [rad|deg]
Latitude [rad|deg]
Surface azimuth. azi=-90 degree if surface outward unit normal points toward east; azi=0 if it points toward south [rad|degree]
Surface tilt. til=90 degree for walls; til=0 for ceilings; til=180 for roof [rad|degree]
Cosine of declination angle
Sine of declination angle
Cosine of solar hour angle
Sine of solar hour angle
Cosine of latitude
Sine of latitude
Surface tilt [rad|deg]
Radiation per unit area [W/m2]
Ground reflectance [1]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Output contribution of diffuse irradiation from sky [:#(type=Boolean)]
Output contribution of diffuse irradiation from ground [:#(type=Boolean)]
Gain of upper input
Gain of lower input
Ground reflectance
Surface tilt angle [rad|deg]
Brightening Coeffcient F1
Brightening Coeffcient F2
Solar incidence angle on the surface [rad|degree]


Lower bound for b
Sky clearness. skyCle=1: overast sky; skyCle=8: clear sky
Constant factor
Intermediate variable
Sky brightness [0,1] []





















Relative air mass
Zenith angle bounded from above by 90 degree
Zenith angle in degree
Latitude [rad|deg]
Surface azimuth [rad|deg]
Surface tilt [rad|deg]
Solar declination angle [rad|deg]
Constant
Constant
Solar hour angle [rad|deg]
Latitude [rad|deg]
Surface azimuth. azi=-90 degree if surface outward unit normal points toward east; azi=0 if it points toward south [rad|degree]
Surface tilt. til=90 degree for walls; til=0 for ceilings; til=180 for roof [rad|degree]
Cosine of declination angle
Sine of declination angle
Cosine of solar hour angle
Sine of solar hour angle
Cosine of latitude
Sine of latitude
Surface tilt [rad|deg]
Radiation per unit area [W/m2]
Ground reflectance [1]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Output contribution of diffuse irradiation from sky [:#(type=Boolean)]
Output contribution of diffuse irradiation from ground [:#(type=Boolean)]
Gain of upper input
Gain of lower input
Ground reflectance
Surface tilt angle [rad|deg]
Brightening Coeffcient F1
Brightening Coeffcient F2
Solar incidence angle on the surface [rad|degree]


Lower bound for b
Sky clearness. skyCle=1: overast sky; skyCle=8: clear sky
Constant factor
Intermediate variable
Sky brightness [0,1] []





















Relative air mass
Zenith angle bounded from above by 90 degree
Zenith angle in degree
Latitude [rad|deg]
Surface azimuth [rad|deg]
Surface tilt [rad|deg]
Solar declination angle [rad|deg]
Constant
Constant
Solar hour angle [rad|deg]
Latitude [rad|deg]
Surface azimuth. azi=-90 degree if surface outward unit normal points toward east; azi=0 if it points toward south [rad|degree]
Surface tilt. til=90 degree for walls; til=0 for ceilings; til=180 for roof [rad|degree]
Cosine of declination angle
Sine of declination angle
Cosine of solar hour angle
Sine of solar hour angle
Cosine of latitude
Sine of latitude
Surface tilt [rad|deg]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Surface tilt [rad|deg]
Solar declination angle [rad|deg]
Constant
Constant
Solar hour angle [rad|deg]
Latitude [rad|deg]
Surface azimuth. azi=-90 degree if surface outward unit normal points toward east; azi=0 if it points toward south [rad|degree]
Surface tilt. til=90 degree for walls; til=0 for ceilings; til=180 for roof [rad|degree]
Cosine of declination angle
Sine of declination angle
Cosine of solar hour angle
Sine of solar hour angle
Cosine of latitude
Sine of latitude
Surface tilt [rad|deg]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Surface tilt [rad|deg]
Solar declination angle [rad|deg]
Constant
Constant
Solar hour angle [rad|deg]
Latitude [rad|deg]
Surface azimuth. azi=-90 degree if surface outward unit normal points toward east; azi=0 if it points toward south [rad|degree]
Surface tilt. til=90 degree for walls; til=0 for ceilings; til=180 for roof [rad|degree]
Cosine of declination angle
Sine of declination angle
Cosine of solar hour angle
Sine of solar hour angle
Cosine of latitude
Sine of latitude
Surface tilt [rad|deg]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Surface tilt [rad|deg]
Solar declination angle [rad|deg]
Constant
Constant
Solar hour angle [rad|deg]
Latitude [rad|deg]
Surface azimuth. azi=-90 degree if surface outward unit normal points toward east; azi=0 if it points toward south [rad|degree]
Surface tilt. til=90 degree for walls; til=0 for ceilings; til=180 for roof [rad|degree]
Cosine of declination angle
Sine of declination angle
Cosine of solar hour angle
Sine of solar hour angle
Cosine of latitude
Sine of latitude
Surface tilt [rad|deg]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Surface tilt [rad|deg]
Solar declination angle [rad|deg]
Constant
Constant
Solar hour angle [rad|deg]
Latitude [rad|deg]
Surface azimuth. azi=-90 degree if surface outward unit normal points toward east; azi=0 if it points toward south [rad|degree]
Surface tilt. til=90 degree for walls; til=0 for ceilings; til=180 for roof [rad|degree]
Cosine of declination angle
Sine of declination angle
Cosine of solar hour angle
Sine of solar hour angle
Cosine of latitude
Sine of latitude
Vector size for input and output [:#(type=Integer)]
Thermal transmission coefficient of whole window [W/(m2.K)]
Hemispherical diffuse solar irradiation on a tilted surfce from the sky [W/m2]
Hemispherical diffuse solar irradiation on a tilted surfce from the sky [W/m2]
Hemispherical diffuse solar irradiation on a tilted surfce from the sky [W/m2]
Hemispherical diffuse solar irradiation on a tilted surfce from the sky [W/m2]
Direct solar radiation on a tilted surface per unit area [W/m2]
Direct solar radiation on a tilted surface per unit area [W/m2]
Direct solar radiation on a tilted surface per unit area [W/m2]
Direct solar radiation on a tilted surface per unit area [W/m2]
Hemispherical diffuse solar irradiation on a tilted surfce from the ground [W/m2]
Hemispherical diffuse solar irradiation on a tilted surfce from the ground [W/m2]
Hemispherical diffuse solar irradiation on a tilted surfce from the ground [W/m2]
Hemispherical diffuse solar irradiation on a tilted surfce from the ground [W/m2]
Incidence angles [rad|deg]
Incidence angles [rad|deg]
Incidence angles [rad|deg]
Incidence angles [rad|deg]
transmitted solar radiation through windows [W/m2]
transmitted solar radiation through windows [W/m2]
transmitted solar radiation through windows [W/m2]
transmitted solar radiation through windows [W/m2]
Constant 0 to calculate reference transmission
Constant 1 to calculate reference transmission
Constant 2 to calculate reference transmission
Constant 3 to calculate reference transmission
Constant 4 to calculate reference transmission
Constant 5 to calculate reference transmission
Constant 6 to calculate reference transmission
Reference vertical parallel transmission coefficient for direct radiation    for double pane window [1]
Energetic degree of transmission for diffuse radiation for uniformly    overcast sky [1]
Pure degree of transmission for diffuse radiation [1]
Degreee of transmission for single pane window [1]
Part of degree of transmission for single pane window related to Ta1_diff [1]
Part of degree of transmission for single pane window    related to rho_T1_diff [1]
Degree of reflection for single pane window [1]
Calculation factor to simplify equations [1]
Energetic dregree of transmission for second pane [1]
Degree of absorption for single pane window [1]
Coefficient of heat transfer for exterior pane of double pane window [W/(m2.K)]
Coefficient of heat transfer for interior pane of double pane window [W/(m2.K)]
Overall coefficient of heat transfer for double pane window [W/(m2.K)]
Transmission coefficient correction factor for diffuse radiation [1]
Transmission coefficient correction factor for irradiations from ground [1]
Energetic degree of transmission for direct radiation [1]
Energetic degree of transmission for direct radiation [1]
Energetic degree of transmission for direct radiation [1]
Energetic degree of transmission for direct radiation [1]
Pure degree of transmission for direct radiation [1]
Pure degree of transmission for direct radiation [1]
Pure degree of transmission for direct radiation [1]
Pure degree of transmission for direct radiation [1]
Pure degree of transmission for single pane window [1]
Pure degree of transmission for single pane window [1]
Pure degree of transmission for single pane window [1]
Pure degree of transmission for single pane window [1]
Part of degree of transmission for single pane window related to Ta1_dir [1]
Part of degree of transmission for single pane window related to Ta1_dir [1]
Part of degree of transmission for single pane window related to Ta1_dir [1]
Part of degree of transmission for single pane window related to Ta1_dir [1]
Part of degree of transmission for single pane window related to T1_dir [1]
Part of degree of transmission for single pane window related to T1_dir [1]
Part of degree of transmission for single pane window related to T1_dir [1]
Part of degree of transmission for single pane window related to T1_dir [1]
Degree of reflection for single pane window [1]
Degree of reflection for single pane window [1]
Degree of reflection for single pane window [1]
Degree of reflection for single pane window [1]
Calculation factor to simplify equations [1]
Calculation factor to simplify equations [1]
Calculation factor to simplify equations [1]
Calculation factor to simplify equations [1]
Energetic dregree of transmission for second pane [1]
Energetic dregree of transmission for second pane [1]
Energetic dregree of transmission for second pane [1]
Energetic dregree of transmission for second pane [1]
Degree of absorption for single pane window [1]
Degree of absorption for single pane window [1]
Degree of absorption for single pane window [1]
Degree of absorption for single pane window [1]
Coefficient of heat transfer for exterior pane of double pane window
Coefficient of heat transfer for exterior pane of double pane window
Coefficient of heat transfer for exterior pane of double pane window
Coefficient of heat transfer for exterior pane of double pane window
Coefficient of heat transfer for interior pane of double pane window
Coefficient of heat transfer for interior pane of double pane window
Coefficient of heat transfer for interior pane of double pane window
Coefficient of heat transfer for interior pane of double pane window
Overall coefficient of heat transfer for double pane window
Overall coefficient of heat transfer for double pane window
Overall coefficient of heat transfer for double pane window
Overall coefficient of heat transfer for double pane window
Transmission coefficient correction factor for direct radiation [1]
Transmission coefficient correction factor for direct radiation [1]
Transmission coefficient correction factor for direct radiation [1]
Transmission coefficient correction factor for direct radiation [1]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
Air volume of the zone [m3]
Coefficient of heat transfer for linearized radiation exchange between walls [W/(m2.K)]
Number of orientations [:#(type=Integer)]
Number of fluid ports [:#(type=Integer)]
Vector of areas of windows by orientations [m2]
Vector of areas of windows by orientations [m2]
Vector of areas of windows by orientations [m2]
Vector of areas of windows by orientations [m2]
Vector of areas of transparent (solar radiation transmittend) elements by    orientations [m2]
Vector of areas of transparent (solar radiation transmittend) elements by    orientations [m2]
Vector of areas of transparent (solar radiation transmittend) elements by    orientations [m2]
Vector of areas of transparent (solar radiation transmittend) elements by    orientations [m2]
Convective coefficient of heat transfer of windows (indoor) [W/(m2.K)]
Resistor for windows [K/W]
Total energy transmittance of windows [1]
Ratio for windows between indoor convective and radiative heat emission
Additional heat port at indoor surface of windows [:#(type=Boolean)]
Vector of areas of exterior walls by orientations [m2]
Vector of areas of exterior walls by orientations [m2]
Vector of areas of exterior walls by orientations [m2]
Vector of areas of exterior walls by orientations [m2]
Convective coefficient of heat transfer of exterior walls (indoor) [W/(m2.K)]
Number of RC-elements of exterior walls [:#(type=Integer)]
Vector of resistances of exterior walls, from inside to outside [K/W]
Resistance of remaining resistor RExtRem between capacity n and outside [K/W]
Vector of heat capacities of exterior walls, from inside to outside [J/K]
Additional heat port at indoor surface of exterior walls [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Thermodynamic pressure in the connection point [Pa|bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Mass flow rate from the connection point into the component [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Heat flow rate (positive if flowing from outside into the component) [W]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Sum of wall surface areas [m2]
Sum of exterior wall surface areas [m2]
Sum of window surface areas [m2]
List of all wall surface areas [m2]
List of all wall surface areas [m2]
List of all wall surface areas [m2]
List of all wall surface areas [m2]
List of all wall surface areas [m2]
Number of non-zero wall surface areas [:#(type=Integer)]
Share of each wall surface area that is non-zero
Share of each wall surface area that is non-zero
Share of each wall surface area that is non-zero
Share of each wall surface area that is non-zero
Share of each wall surface area that is non-zero
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Share of each wall surface area that is non-zero, for each orientation    seperately
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Port temperature [K|degC]
Constant output value
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Port temperature [K|degC]
Constant output value
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Output signal connector
Gain value multiplied with input signal [1]
Gain value multiplied with input signal [1]
Gain value multiplied with input signal [1]
Gain value multiplied with input signal [1]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Number of inputs [:#(type=Integer)]
Connector of Real input signals
Connector of Real input signals
Connector of Real input signals
Connector of Real input signals
Connector of Real output signal
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Optional: sum coefficients
Area of interior walls [m2]
Convective coefficient of heat transfer of interior walls (indoor) [W/(m2.K)]
Number of RC-elements of interior walls [:#(type=Integer)]
Vector of resistances of interior walls, from port to center [K/W]
Vector of heat capacities of interior walls, from port to center [J/K]
Additional heat port at indoor surface of interior walls [:#(type=Boolean)]
Number of RC-elements [:#(type=Integer)]
Vector of resistors, from port to capacitor [K/W]
Vector of heat capacitors, from port to center [J/K]
Initial temperature of capacities [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
port_a.T - port_b.T [K,]
Constant thermal resistance of material [K/W]
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Constant output value
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Area of floor plate [m2]
Convective coefficient of heat transfer of floor plate (indoor) [W/(m2.K)]
Number of RC-elements of floor plate [:#(type=Integer)]
Vector of resistances of floor plate, from inside to outside [K/W]
Resistance of remaining resistor RFloorRem between capacity n and outside [K/W]
Vector of heat capacities of floor plate, from inside to outside [J/K]
Additional heat port at indoor surface of floor plate [:#(type=Boolean)]
Number of RC-elements [:#(type=Integer)]
Vector of resistors, from port_a to port_b [K/W]
Resistance of remaining resistor RExtRem between capacitor n and port_b [K/W]
Vector of heat capacities, from port_a to port_b [J/K]
Initial temperature of capacities [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
port_a.T - port_b.T [K,]
Constant thermal resistance of material [K/W]
port_a.T - port_b.T [K,]
Constant thermal resistance of material [K/W]
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Constant output value
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Area of roof [m2]
Convective coefficient of heat transfer of roof (indoor) [W/(m2.K)]
Number of RC-elements of roof [:#(type=Integer)]
Vector of resistances of roof, from inside to outside [K/W]
Resistance of remaining resistor RRoofRem between capacity n and outside [K/W]
Vector of heat capacities of roof, from inside to outside [J/K]
Additional heat port at indoor surface of roof [:#(type=Boolean)]
Number of RC-elements [:#(type=Integer)]
Vector of resistors, from port_a to port_b [K/W]
Resistance of remaining resistor RExtRem between capacitor n and port_b [K/W]
Vector of heat capacities, from port_a to port_b [J/K]
Initial temperature of capacities [K|degC]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
port_a.T - port_b.T [K,]
Constant thermal resistance of material [K/W]
port_a.T - port_b.T [K,]
Constant thermal resistance of material [K/W]
Heat flow rate from solid -> fluid [W]
= solid.T - fluid.T [K,]
Constant output value
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Heat flow rate from port_a -> port_b [W]
port_a.T - port_b.T [K,]
Constant thermal conductance of material [W/K]
Coefficient of absorption of exterior walls (outdoor) [1]
Coefficient of emission of exterior walls (outdoor) [1]
Number of orientations (without ground) [:#(type=Integer)]
Weight factors of the walls [1]
Weight factors of the walls [1]
Weight factors of the walls [1]
Weight factors of the walls [1]
Weight factors of the windows [1]
Weight factors of the windows [1]
Weight factors of the windows [1]
Weight factors of the windows [1]
Weight factor of the ground (0 if not considered) [1]
Temperature of the ground in contact with floor plate [K|degC]
Exterior walls convective coefficient of heat transfer (outdoor) [W/(m2.K)]
Coefficient of heat transfer for linearized radiation for exterior walls [W/(m2.K)]
Set to true to include longwave radiation exchange [:#(type=Boolean)]
Equivalent wall temperature [K|degC]
Equivalent wall temperature [K|degC]
Equivalent wall temperature [K|degC]
Equivalent wall temperature [K|degC]
Equivalent window temperature [K|degC]
Equivalent window temperature [K|degC]
Equivalent window temperature [K|degC]
Equivalent window temperature [K|degC]
Equivalent long wave temperature [K,]
Equivalent short wave temperature [K,]
Equivalent short wave temperature [K,]
Equivalent short wave temperature [K,]
Equivalent short wave temperature [K,]
Solar radiation per unit area [W/m2]
Solar radiation per unit area [W/m2]
Solar radiation per unit area [W/m2]
Solar radiation per unit area [W/m2]
Equivalent air temperature [K|degC]
Coefficient of absorption of the windows [1]
Coefficient of emission of the windows [1]
Windows' convective coefficient of heat transfer (outdoor) [W/(m2.K)]
Coefficient of heat transfer for linearized radiation for windows [W/(m2.K)]
Equivalent long wave temperature for windows [K,]
Eqiuvalent short wave temperature for windows [K,]
Eqiuvalent short wave temperature for windows [K,]
Eqiuvalent short wave temperature for windows [K,]
Eqiuvalent short wave temperature for windows [K,]
Equivalent air temperature for windows (no short-wave radiation) [K]
Gain of upper input
Gain of lower input
Gain of upper input
Gain of lower input
Gain of upper input
Gain of lower input
Gain of upper input
Gain of lower input
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
= solid.T - fluid.T [K,]
Port temperature [K|degC]
= solid.T - fluid.T [K,]
Port temperature [K|degC]
Constant output value
Constant output value
Constant output value
Constant output value
Constant output value
Constant output value
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Constant output value
Coefficient of absorption of exterior walls (outdoor) [1]
Coefficient of emission of exterior walls (outdoor) [1]
Number of orientations (without ground) [:#(type=Integer)]
Weight factors of the walls [1]
Weight factors of the windows [1]
Weight factor of the ground (0 if not considered) [1]
Temperature of the ground in contact with floor plate [K|degC]
Exterior walls convective coefficient of heat transfer (outdoor) [W/(m2.K)]
Coefficient of heat transfer for linearized radiation for exterior walls [W/(m2.K)]
Set to true to include longwave radiation exchange [:#(type=Boolean)]
Equivalent wall temperature [K|degC]
Equivalent window temperature [K|degC]
Equivalent long wave temperature [K,]
Equivalent short wave temperature [K,]
Solar radiation per unit area [W/m2]
Equivalent air temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
= solid.T - fluid.T [K,]
Port temperature [K|degC]
Constant output value
Constant output value
Connector of Real input signal 1
Connector of Real input signal 2
Gain of upper input
Gain of lower input
Surface tilt [rad|deg]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Incidence angle [rad|deg]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Surface tilt [rad|deg]
Solar declination angle [rad|deg]
Constant
Constant
Solar hour angle [rad|deg]
Latitude [rad|deg]
Surface azimuth. azi=-90 degree if surface outward unit normal points toward east; azi=0 if it points toward south [rad|degree]
Surface tilt. til=90 degree for walls; til=0 for ceilings; til=180 for roof [rad|degree]
Cosine of declination angle
Sine of declination angle
Cosine of solar hour angle
Sine of solar hour angle
Cosine of latitude
Sine of latitude
Surface tilt [rad|deg]
Ground reflectance [1]
Latitude [rad|deg]
Surface azimuth [rad|deg]
Output contribution of diffuse irradiation from sky [:#(type=Boolean)]
Output contribution of diffuse irradiation from ground [:#(type=Boolean)]
Connector of Real input signal 1
Connector of Real input signal 2
Gain of upper input
Gain of lower input
Ground reflectance
Surface tilt angle [rad|deg]
Brightening Coeffcient F1
Brightening Coeffcient F2
Solar incidence angle on the surface [rad|degree]


Lower bound for b
Sky clearness. skyCle=1: overast sky; skyCle=8: clear sky
Constant factor
Intermediate variable
Sky brightness [0,1] []





















Relative air mass
Zenith angle bounded from above by 90 degree
Zenith angle in degree
Latitude [rad|deg]
Surface azimuth [rad|deg]
Surface tilt [rad|deg]
Solar declination angle [rad|deg]
Constant
Constant
Solar hour angle [rad|deg]
Latitude [rad|deg]
Surface azimuth. azi=-90 degree if surface outward unit normal points toward east; azi=0 if it points toward south [rad|degree]
Surface tilt. til=90 degree for walls; til=0 for ceilings; til=180 for roof [rad|degree]
Cosine of declination angle
Sine of declination angle
Cosine of solar hour angle
Sine of solar hour angle
Cosine of latitude
Sine of latitude
Constant output value
Number of ports [:#(type=Integer)]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the mass flow rate from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed mass flow rate going out of the fluid port [kg/s]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [kg/kg]
Number of ports [:#(type=Integer)]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
Allowed flow direction [:#(type=Modelica.Fluid.Types.PortFlowDirection)]
Get the mass flow rate from the input connector [:#(type=Boolean)]
Get the temperature from the input connector [:#(type=Boolean)]
Get the composition from the input connector [:#(type=Boolean)]
Get the trace substances from the input connector [:#(type=Boolean)]
Fixed mass flow rate going out of the fluid port [kg/s]
Fixed value of temperature [K|degC]
Fixed value of composition [kg/kg]
Needed to connect to conditional connector [kg/kg]
Gain value multiplied with input signal [1]
Gain value multiplied with input signal [1]
Constant output value
Connector of second Boolean input signal [:#(type=Boolean)]
Comparison with respect to threshold
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Mass flow rate from the connection point into the component [kg/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Number of collected heat flows [:#(type=Integer)]
Heat flow rate (positive if flowing from outside into the component) [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
der(Specific thermodynamic enthalpy close to the connection point if m_flow < 0) [m2/s3]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
der(Specific thermodynamic enthalpy close to the connection point if m_flow < 0) [m2/s3]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
der(Specific thermodynamic enthalpy close to the connection point if m_flow < 0) [m2/s3]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
der(Specific thermodynamic enthalpy close to the connection point if m_flow < 0) [m2/s3]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
der(Specific thermodynamic enthalpy close to the connection point if m_flow < 0) [m2/s3]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
der(Specific thermodynamic enthalpy close to the connection point if m_flow < 0) [m2/s3]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
der(Specific thermodynamic enthalpy close to the connection point if m_flow < 0) [m2/s3]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Specific thermodynamic enthalpy close to the connection point if m_flow < 0 [J/kg]
der(Specific thermodynamic enthalpy close to the connection point if m_flow < 0) [m2/s3]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true if the model has a prescribed heat flow at its heatPort. If the heat flow rate at the heatPort is only based on temperature difference, then set to false [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Nominal mass flow rate [kg/s]
Number of ports [:#(type=Integer)]
Small mass flow rate for regularization of zero flow [kg/s]
= true to allow flow reversal in medium, false restricts to design direction (ports[1] -> ports[2]). Used only if model has two ports. [:#(type=Boolean)]
Volume [m3]
Heat flow rate (positive if flowing from outside into the component) [W]
Mass of the component [kg]
Density, used to compute start and guess values [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Flag, true if the model has two ports only and uses a steady state balance [:#(type=Boolean)]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Density of medium [kg/m3|g/cm3]
Temperature of medium [K|degC]
Mass fractions (= (component mass)/total mass  m_i/m) [kg/kg]
Specific internal energy of medium [J/kg]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
port_a.T - port_b.T [K,]
Constant thermal resistance of material [K/W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Heat flow rate (positive if flowing from outside into the component) [W]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Reference temperature [K|degC]
Temperature coefficient of heat flow rate [1/K]
Number of splitter outputs [:#(type=Integer)]
Number of splitter inputs [:#(type=Integer)]
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Number of splitter outputs [:#(type=Integer)]
Number of splitter inputs [:#(type=Integer)]
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Matrix of split factor for outputs (between 0 and 1 for each row)
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Port temperature [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Number of RC-elements [:#(type=Integer)]
Vector of resistors, from port_a to port_b [K/W]
Resistance of remaining resistor RExtRem between capacitor n and port_b [K/W]
Vector of heat capacities, from port_a to port_b [J/K]
Initial temperature of capacities [K|degC]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat capacity of element (= cp*m) [J/K]
Temperature of element [K|degC]
der(Temperature of element) [K/s]
Heat flow rate (positive if flowing from outside into the component) [W]
port_a.T - port_b.T [K,]
Constant thermal resistance of material [K/W]
port_a.T - port_b.T [K,]
Constant thermal resistance of material [K/W]
Heat flow rate (positive if flowing from outside into the component) [W]
Heat flow rate (positive if flowing from outside into the component) [W]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Mass flow rate from the connection point into the component [kg/s]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass flow rate from the connection point into the component [kg/s]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Default value for mass fractions of medium (for initialization) [kg/kg]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Type of energy balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of mass balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of independent mass fraction balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Type of trace substance balance: dynamic (3 initialization options) or steady state [:#(type=Modelica.Fluid.Types.Dynamics)]
Start value of pressure [Pa|bar]
Start value of temperature [K|degC]
Start value of mass fractions m_i/m [kg/kg]
Factor for scaling the sensible thermal mass of the volume
= true to set up initial equations for pressure [:#(type=Boolean)]
Set to true to cause port_a.m_flow + port_b.m_flow = 0 even if mWat_flow is non-zero [:#(type=Boolean)]
Number of ports [:#(type=Integer)]
Set to true to enable input connector for moisture mass flow rate [:#(type=Boolean)]
Set to true to enable input connector for trace substance [:#(type=Boolean)]
Mass of the component [kg]
Temperature of medium [K|degC]
Density of medium [kg/m3|g/cm3]
Mass fractions (= (component mass)/total mass  m_i/m) [1]
Gas constant (of mixture if applicable) [J/(kg.K)]
Molar mass (of mixture or single fluid) [kg/mol]
= true if StateSelect.prefer shall be used for the independent property variables of the medium [:#(type=Boolean)]
If true, and reducedX = true, the last element of X will be computed from the other ones [:#(type=Boolean)]
Temperature of medium in [degC] [degC;]
Absolute pressure of medium in [bar] [bar]
Internal energy of fluid [J]
der(Internal energy of fluid) [W]
Mass of fluid [kg]
der(Mass of fluid) [kg/s]
Mass flows across boundaries [kg/s]
Enthalpy flow across boundaries or energy source/sink [W]
Volume [m3]
Aditional heat capacity for implementing mFactor [J/K]
[W]
[W]
Heat capacity, to compute additional dry mass [J/(kg.K)]
Density, used to compute fluid mass [kg/m3|g/cm3]
[:#(type=Boolean)]
Absolute pressure of medium [Pa|bar]
Temperature of medium [K|degC]
Density, used to compute fluid mass [kg/m3|g/cm3]
Start value for specific enthalpy [J/kg]
Needed to connect to conditional connector [kg/s]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Dry bulb temperature [K|degC]
Black-body sky temperature [K|degC]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Radiation [W/m2]
Radiation [W/m2]
Radiation [W/m2]
Horizontal infrared irradiation [W/m2]
Output temperature [K|degC]
Ceiling height [m]
Connector of Real output signal [s]
Latitude of the location [rad|deg]
Longitude of the location [rad|deg]
Sky cover [0, 1] [1]
Sky cover [0, 1] [1]
Atmospheric pressure [Pa]
Relative humidity [1]
Solar altitude angle [rad|deg]
Solar declination angle [rad|deg]
Solar hour angle [rad|deg]
Solar time [s|s]
Zenith angle [rad|deg]
Wind direction [rad|deg]
Wind speed [m/s]



